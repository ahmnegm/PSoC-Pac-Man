ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Controller.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	CapSense_Controller_initVar:
  21 0000 00       		.space	1
  22              		.comm	CapSense_Controller_csv,1,1
  23              		.comm	CapSense_Controller_sensorIndex,1,1
  24              		.global	CapSense_Controller_lowLevelTuningDone
  25              		.data
  26              		.type	CapSense_Controller_lowLevelTuningDone, %object
  27              		.size	CapSense_Controller_lowLevelTuningDone, 1
  28              	CapSense_Controller_lowLevelTuningDone:
  29 0000 01       		.byte	1
  30              		.comm	CapSense_Controller_sensorRaw,8,4
  31              		.global	CapSense_Controller_sensorEnableMask
  32 0001 000000   		.align	2
  33              		.type	CapSense_Controller_sensorEnableMask, %object
  34              		.size	CapSense_Controller_sensorEnableMask, 1
  35              	CapSense_Controller_sensorEnableMask:
  36 0004 0F       		.byte	15
  37              		.global	CapSense_Controller_pcTable
  38              		.section	.rodata
  39              		.align	2
  40              		.type	CapSense_Controller_pcTable, %object
  41              		.size	CapSense_Controller_pcTable, 16
  42              	CapSense_Controller_pcTable:
  43 0000 28500040 		.word	1073762344
  44 0004 29500040 		.word	1073762345
  45 0008 2A500040 		.word	1073762346
  46 000c 2B500040 		.word	1073762347
  47              		.global	CapSense_Controller_portTable
  48              		.align	2
  49              		.type	CapSense_Controller_portTable, %object
  50              		.size	CapSense_Controller_portTable, 4
  51              	CapSense_Controller_portTable:
  52 0010 05       		.byte	5
  53 0011 05       		.byte	5
  54 0012 05       		.byte	5
  55 0013 05       		.byte	5
  56              		.global	CapSense_Controller_maskTable
  57              		.align	2
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 2


  58              		.type	CapSense_Controller_maskTable, %object
  59              		.size	CapSense_Controller_maskTable, 4
  60              	CapSense_Controller_maskTable:
  61 0014 01       		.byte	1
  62 0015 02       		.byte	2
  63 0016 04       		.byte	4
  64 0017 08       		.byte	8
  65              		.global	CapSense_Controller_csTable
  66              		.align	2
  67              		.type	CapSense_Controller_csTable, %object
  68              		.size	CapSense_Controller_csTable, 32
  69              	CapSense_Controller_csTable:
  70 0018 06520040 		.word	1073762822
  71 001c 0E520040 		.word	1073762830
  72 0020 16520040 		.word	1073762838
  73 0024 1E520040 		.word	1073762846
  74 0028 26520040 		.word	1073762854
  75 002c 2E520040 		.word	1073762862
  76 0030 36520040 		.word	1073762870
  77 0034 7E520040 		.word	1073762942
  78              		.global	CapSense_Controller_idacSettings
  79              		.data
  80 0005 000000   		.align	2
  81              		.type	CapSense_Controller_idacSettings, %object
  82              		.size	CapSense_Controller_idacSettings, 4
  83              	CapSense_Controller_idacSettings:
  84 0008 C8       		.byte	-56
  85 0009 C8       		.byte	-56
  86 000a C8       		.byte	-56
  87 000b C8       		.byte	-56
  88              		.global	CapSense_Controller_widgetResolution
  89              		.align	2
  90              		.type	CapSense_Controller_widgetResolution, %object
  91              		.size	CapSense_Controller_widgetResolution, 4
  92              	CapSense_Controller_widgetResolution:
  93 000c 03       		.byte	3
  94 000d 03       		.byte	3
  95 000e 03       		.byte	3
  96 000f 03       		.byte	3
  97              		.comm	CapSense_Controller_analogSwitchDivider,4,4
  98              		.global	CapSense_Controller_widgetNumber
  99              		.section	.rodata
 100              		.align	2
 101              		.type	CapSense_Controller_widgetNumber, %object
 102              		.size	CapSense_Controller_widgetNumber, 4
 103              	CapSense_Controller_widgetNumber:
 104 0038 00       		.byte	0
 105 0039 01       		.byte	1
 106 003a 02       		.byte	2
 107 003b 03       		.byte	3
 108              		.section	.text.CapSense_Controller_Init,"ax",%progbits
 109              		.align	2
 110              		.global	CapSense_Controller_Init
 111              		.thumb
 112              		.thumb_func
 113              		.type	CapSense_Controller_Init, %function
 114              	CapSense_Controller_Init:
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 3


 115              	.LFB0:
 116              		.file 1 "Generated_Source\\PSoC5\\CapSense_Controller.c"
   1:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_Controller.c **** * File Name: CapSense_Controller.c
   3:Generated_Source\PSoC5/CapSense_Controller.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_Controller.c **** *
   5:Generated_Source\PSoC5/CapSense_Controller.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_Controller.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense_Controller.c **** *  component.
   8:Generated_Source\PSoC5/CapSense_Controller.c **** *
   9:Generated_Source\PSoC5/CapSense_Controller.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_Controller.c **** *
  11:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_Controller.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_Controller.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_Controller.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_Controller.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_Controller.c **** 
  18:Generated_Source\PSoC5/CapSense_Controller.c **** #include "CapSense_Controller.h"
  19:Generated_Source\PSoC5/CapSense_Controller.c **** 
  20:Generated_Source\PSoC5/CapSense_Controller.c **** 
  21:Generated_Source\PSoC5/CapSense_Controller.c **** 
  22:Generated_Source\PSoC5/CapSense_Controller.c **** static uint8 CapSense_Controller_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense_Controller.c ****             
  24:Generated_Source\PSoC5/CapSense_Controller.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense_Controller.c **** volatile uint8 CapSense_Controller_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense_Controller.c **** volatile uint8 CapSense_Controller_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense_Controller.c **** 
  28:Generated_Source\PSoC5/CapSense_Controller.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense_Controller.c **** #if (CapSense_Controller_TUNING_METHOD == CapSense_Controller_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8 CapSense_Controller_lowLevelTuningDone = 1u;
  31:Generated_Source\PSoC5/CapSense_Controller.c **** #endif /* (CapSense_Controller_TUNING_METHOD == CapSense_Controller_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense_Controller.c **** 
  33:Generated_Source\PSoC5/CapSense_Controller.c **** #if (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8  CapSense_Controller_extRbCh0Cur = CapSense_Controller_RBLEED1;
  35:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8  CapSense_Controller_extRbCh1Cur = (CapSense_Controller_RBLEED1 + CapSense_Controller
  37:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif /* (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense_Controller.c **** #endif /* (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense_Controller.c ****         
  40:Generated_Source\PSoC5/CapSense_Controller.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense_Controller.c **** uint16 CapSense_Controller_sensorRaw[CapSense_Controller_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense_Controller.c **** 
  43:Generated_Source\PSoC5/CapSense_Controller.c **** uint8 CapSense_Controller_sensorEnableMask[(((CapSense_Controller_TOTAL_SENSOR_COUNT - 1u) / 8u) + 
  44:Generated_Source\PSoC5/CapSense_Controller.c **** 0xFu, };
  45:Generated_Source\PSoC5/CapSense_Controller.c **** 
  46:Generated_Source\PSoC5/CapSense_Controller.c **** uint8 CYXDATA * const CYCODE CapSense_Controller_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense_Controller.c ****     (uint8 CYXDATA *)CapSense_Controller_PortCH0__ButtonLeft__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense_Controller.c ****     (uint8 CYXDATA *)CapSense_Controller_PortCH0__ButtonRight__BTN__PC, 
  49:Generated_Source\PSoC5/CapSense_Controller.c ****     (uint8 CYXDATA *)CapSense_Controller_PortCH0__ButtonUp__BTN__PC, 
  50:Generated_Source\PSoC5/CapSense_Controller.c ****     (uint8 CYXDATA *)CapSense_Controller_PortCH0__ButtonDown__BTN__PC, 
  51:Generated_Source\PSoC5/CapSense_Controller.c **** };
  52:Generated_Source\PSoC5/CapSense_Controller.c **** 
  53:Generated_Source\PSoC5/CapSense_Controller.c **** const uint8 CYCODE CapSense_Controller_portTable[] = {
  54:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PortCH0__ButtonLeft__BTN__PORT, 
  55:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PortCH0__ButtonRight__BTN__PORT, 
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 4


  56:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PortCH0__ButtonUp__BTN__PORT, 
  57:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PortCH0__ButtonDown__BTN__PORT, 
  58:Generated_Source\PSoC5/CapSense_Controller.c **** };
  59:Generated_Source\PSoC5/CapSense_Controller.c **** 
  60:Generated_Source\PSoC5/CapSense_Controller.c **** const uint8 CYCODE CapSense_Controller_maskTable[] = {
  61:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PortCH0__ButtonLeft__BTN__MASK,
  62:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PortCH0__ButtonRight__BTN__MASK,
  63:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PortCH0__ButtonUp__BTN__MASK,
  64:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PortCH0__ButtonDown__BTN__MASK,
  65:Generated_Source\PSoC5/CapSense_Controller.c **** };
  66:Generated_Source\PSoC5/CapSense_Controller.c **** 
  67:Generated_Source\PSoC5/CapSense_Controller.c **** uint8 CYXDATA * const CYCODE CapSense_Controller_csTable[] = {
  68:Generated_Source\PSoC5/CapSense_Controller.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  69:Generated_Source\PSoC5/CapSense_Controller.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  70:Generated_Source\PSoC5/CapSense_Controller.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  71:Generated_Source\PSoC5/CapSense_Controller.c **** };
  72:Generated_Source\PSoC5/CapSense_Controller.c **** 
  73:Generated_Source\PSoC5/CapSense_Controller.c **** uint8 CapSense_Controller_idacSettings[] = {
  74:Generated_Source\PSoC5/CapSense_Controller.c ****     200u,200u,200u,200u,
  75:Generated_Source\PSoC5/CapSense_Controller.c **** };
  76:Generated_Source\PSoC5/CapSense_Controller.c **** 
  77:Generated_Source\PSoC5/CapSense_Controller.c **** uint8 CapSense_Controller_widgetResolution[] = {
  78:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PWM_RESOLUTION_10_BITS,
  79:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PWM_RESOLUTION_10_BITS,
  80:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PWM_RESOLUTION_10_BITS,
  81:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PWM_RESOLUTION_10_BITS,
  82:Generated_Source\PSoC5/CapSense_Controller.c **** };
  83:Generated_Source\PSoC5/CapSense_Controller.c **** 
  84:Generated_Source\PSoC5/CapSense_Controller.c **** uint8 CapSense_Controller_analogSwitchDivider[CapSense_Controller_TOTAL_SCANSLOT_COUNT];
  85:Generated_Source\PSoC5/CapSense_Controller.c **** const uint8 CYCODE CapSense_Controller_widgetNumber[] = {
  86:Generated_Source\PSoC5/CapSense_Controller.c ****     0u, /* ButtonLeft__BTN */
  87:Generated_Source\PSoC5/CapSense_Controller.c ****     1u, /* ButtonRight__BTN */
  88:Generated_Source\PSoC5/CapSense_Controller.c ****     2u, /* ButtonUp__BTN */
  89:Generated_Source\PSoC5/CapSense_Controller.c ****     3u, /* ButtonDown__BTN */
  90:Generated_Source\PSoC5/CapSense_Controller.c ****     
  91:Generated_Source\PSoC5/CapSense_Controller.c **** };
  92:Generated_Source\PSoC5/CapSense_Controller.c **** 
  93:Generated_Source\PSoC5/CapSense_Controller.c **** 
  94:Generated_Source\PSoC5/CapSense_Controller.c **** 
  95:Generated_Source\PSoC5/CapSense_Controller.c **** 
  96:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
  97:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_Init
  98:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
  99:Generated_Source\PSoC5/CapSense_Controller.c **** *
 100:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
 101:Generated_Source\PSoC5/CapSense_Controller.c **** *  Inits default CapSense configuration provided with customizer that defines 
 102:Generated_Source\PSoC5/CapSense_Controller.c **** *  mode of component operations and resets all sensors to an inactive state.
 103:Generated_Source\PSoC5/CapSense_Controller.c **** *
 104:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
 105:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
 106:Generated_Source\PSoC5/CapSense_Controller.c **** *
 107:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
 108:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
 109:Generated_Source\PSoC5/CapSense_Controller.c **** *
 110:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
 111:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_Init(void) 
 112:Generated_Source\PSoC5/CapSense_Controller.c **** {
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 5


 117              		.loc 1 112 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 8
 120              		@ frame_needed = 1, uses_anonymous_args = 0
 121 0000 80B5     		push	{r7, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 82B0     		sub	sp, sp, #8
 126              		.cfi_def_cfa_offset 16
 127 0004 00AF     		add	r7, sp, #0
 128              		.cfi_def_cfa_register 7
 113:Generated_Source\PSoC5/CapSense_Controller.c ****     #if ( (CapSense_Controller_PRS_OPTIONS) || \
 114:Generated_Source\PSoC5/CapSense_Controller.c ****           (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATION_UDB
 115:Generated_Source\PSoC5/CapSense_Controller.c ****           ( (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) && \
 116:Generated_Source\PSoC5/CapSense_Controller.c ****             (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLEMENTATION_U
 117:Generated_Source\PSoC5/CapSense_Controller.c ****         
 118:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 enableInterrupts;
 119:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif /* ( (CapSense_Controller_PRS_OPTIONS) || \
 120:Generated_Source\PSoC5/CapSense_Controller.c ****            * (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATION_
 121:Generated_Source\PSoC5/CapSense_Controller.c ****            * ( (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) && \
 122:Generated_Source\PSoC5/CapSense_Controller.c ****            * (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLEMENTATION_
 123:Generated_Source\PSoC5/CapSense_Controller.c ****            */
 124:Generated_Source\PSoC5/CapSense_Controller.c ****     
 125:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Clear all sensors */
 126:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_ClearSensors();
 129              		.loc 1 126 0
 130 0006 FFF7FEFF 		bl	CapSense_Controller_ClearSensors
 127:Generated_Source\PSoC5/CapSense_Controller.c **** 
 128:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Set Prescaler */
 129:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_UDB)
 130:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Do nothing = config without prescaler */
 131:Generated_Source\PSoC5/CapSense_Controller.c ****     #elif (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_FF)
 132:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PRESCALER_CONTROL_REG   = (CapSense_Controller_PRESCALER_CTRL_ENABLE |
 133:Generated_Source\PSoC5/CapSense_Controller.c ****                                                     CapSense_Controller_PRESCALER_CTRL_MODE_CMP);
 134:Generated_Source\PSoC5/CapSense_Controller.c ****                                                
 135:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PRESCALER_CONTROL2_REG |= CapSense_Controller_PRESCALER_CTRL_CMP_LESS_E
 136:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 137:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Do nothing = config without prescaler */
 138:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_UDB) */
 139:Generated_Source\PSoC5/CapSense_Controller.c **** 
 140:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Set PRS */
 141:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_PRS_OPTIONS)
 142:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_SetAnalogSwitchesSource(CapSense_Controller_ANALOG_SWITCHES_SRC_PRS);
 131              		.loc 1 142 0
 132 000a 0220     		movs	r0, #2
 133 000c FFF7FEFF 		bl	CapSense_Controller_SetAnalogSwitchesSource
 143:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif /* (CapSense_Controller_PRS_OPTIONS) */
 144:Generated_Source\PSoC5/CapSense_Controller.c **** 
 145:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_PRS_OPTIONS == CapSense_Controller_PRS_8BITS)
 146:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Aux control set FIFO as REG */
 147:Generated_Source\PSoC5/CapSense_Controller.c ****         enableInterrupts = CyEnterCriticalSection();
 148:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_AUX_CONTROL_A_REG |= CapSense_Controller_AUXCTRL_FIFO_SINGLE_REG;
 149:Generated_Source\PSoC5/CapSense_Controller.c ****         CyExitCriticalSection(enableInterrupts);
 150:Generated_Source\PSoC5/CapSense_Controller.c ****         
 151:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Write polynomial */
 152:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_POLYNOM_REG   = CapSense_Controller_PRS8_DEFAULT_POLYNOM;
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 6


 153:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Write FIFO with seed */
 154:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_SEED_COPY_REG = CapSense_Controller_MEASURE_FULL_RANGE_LOW;
 155:Generated_Source\PSoC5/CapSense_Controller.c ****         
 156:Generated_Source\PSoC5/CapSense_Controller.c ****     #elif (CapSense_Controller_PRS_OPTIONS == CapSense_Controller_PRS_16BITS)
 157:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Aux control set FIFO as REG */ 
 158:Generated_Source\PSoC5/CapSense_Controller.c ****         enableInterrupts = CyEnterCriticalSection();  
 134              		.loc 1 158 0
 135 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 136 0014 0346     		mov	r3, r0
 137 0016 FB71     		strb	r3, [r7, #7]
 159:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_AUX_CONTROL_A_REG |= CapSense_Controller_AUXCTRL_FIFO_SINGLE_REG;
 138              		.loc 1 159 0
 139 0018 3B4A     		ldr	r2, .L2
 140 001a 3B4B     		ldr	r3, .L2
 141 001c 1B78     		ldrb	r3, [r3]
 142 001e DBB2     		uxtb	r3, r3
 143 0020 43F00303 		orr	r3, r3, #3
 144 0024 DBB2     		uxtb	r3, r3
 145 0026 1370     		strb	r3, [r2]
 160:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_AUX_CONTROL_B_REG |= CapSense_Controller_AUXCTRL_FIFO_SINGLE_REG;
 146              		.loc 1 160 0
 147 0028 384A     		ldr	r2, .L2+4
 148 002a 384B     		ldr	r3, .L2+4
 149 002c 1B78     		ldrb	r3, [r3]
 150 002e DBB2     		uxtb	r3, r3
 151 0030 43F00303 		orr	r3, r3, #3
 152 0034 DBB2     		uxtb	r3, r3
 153 0036 1370     		strb	r3, [r2]
 161:Generated_Source\PSoC5/CapSense_Controller.c ****         CyExitCriticalSection(enableInterrupts);
 154              		.loc 1 161 0
 155 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 156 003a 1846     		mov	r0, r3
 157 003c FFF7FEFF 		bl	CyExitCriticalSection
 162:Generated_Source\PSoC5/CapSense_Controller.c ****         
 163:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Write polynomial */
 164:Generated_Source\PSoC5/CapSense_Controller.c ****         CY_SET_REG16(CapSense_Controller_POLYNOM_PTR, CapSense_Controller_PRS16_DEFAULT_POLYNOM);
 158              		.loc 1 164 0
 159 0040 334B     		ldr	r3, .L2+8
 160 0042 4FF43442 		mov	r2, #46080
 161 0046 1A80     		strh	r2, [r3]	@ movhi
 165:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Write FIFO with seed */
 166:Generated_Source\PSoC5/CapSense_Controller.c ****         CY_SET_REG16(CapSense_Controller_SEED_COPY_PTR, CapSense_Controller_MEASURE_FULL_RANGE);
 162              		.loc 1 166 0
 163 0048 324B     		ldr	r3, .L2+12
 164 004a 4FF6FF72 		movw	r2, #65535
 165 004e 1A80     		strh	r2, [r3]	@ movhi
 167:Generated_Source\PSoC5/CapSense_Controller.c ****                 
 168:Generated_Source\PSoC5/CapSense_Controller.c ****     #elif (CapSense_Controller_PRS_OPTIONS == CapSense_Controller_PRS_16BITS_4X)
 169:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Aux control set FIFO as REG */
 170:Generated_Source\PSoC5/CapSense_Controller.c ****         enableInterrupts = CyEnterCriticalSection();
 171:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_AUX_CONTROL_A_REG  |= CapSense_Controller_AUXCTRL_FIFO_SINGLE_REG;
 172:Generated_Source\PSoC5/CapSense_Controller.c ****         CyExitCriticalSection(enableInterrupts);
 173:Generated_Source\PSoC5/CapSense_Controller.c ****         
 174:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Write polynomial */
 175:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_POLYNOM_A__D1_REG   = HI8(CapSense_Controller_PRS16_DEFAULT_POLYNOM);
 176:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_POLYNOM_A__D0_REG   = LO8(CapSense_Controller_PRS16_DEFAULT_POLYNOM);
 177:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Write FIFO with seed */
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 7


 178:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_SEED_COPY_A__F1_REG = CapSense_Controller_MEASURE_FULL_RANGE_LOW;
 179:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_SEED_COPY_A__F0_REG = CapSense_Controller_MEASURE_FULL_RANGE_LOW; 
 180:Generated_Source\PSoC5/CapSense_Controller.c ****         
 181:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 182:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Do nothing = config without PRS */
 183:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_PRS_OPTIONS == CapSense_Controller_PRS_8BITS) */ 
 184:Generated_Source\PSoC5/CapSense_Controller.c ****     
 185:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Set ScanSpeed */
 186:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_SCANSPEED_PERIOD_REG = CapSense_Controller_SCANSPEED_VALUE;
 166              		.loc 1 186 0
 167 0050 314B     		ldr	r3, .L2+16
 168 0052 0722     		movs	r2, #7
 169 0054 1A70     		strb	r2, [r3]
 187:Generated_Source\PSoC5/CapSense_Controller.c ****     
 188:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Set the Measure */
 189:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATION_FF)
 190:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Window PWM */
 191:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PWM_CH0_CONTROL_REG      = CapSense_Controller_MEASURE_CTRL_ENABLE;
 192:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PWM_CH0_CONTROL2_REG    |= CapSense_Controller_MEASURE_CTRL_PULSEWIDTH;
 193:Generated_Source\PSoC5/CapSense_Controller.c ****         CY_SET_REG16(CapSense_Controller_PWM_CH0_COUNTER_PTR, CapSense_Controller_MEASURE_FULL_RANG
 194:Generated_Source\PSoC5/CapSense_Controller.c ****         
 195:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Raw Counter */
 196:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_RAW_CH0_CONTROL_REG      = CapSense_Controller_MEASURE_CTRL_ENABLE;
 197:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_RAW_CH0_CONTROL2_REG    |= CapSense_Controller_MEASURE_CTRL_PULSEWIDTH;
 198:Generated_Source\PSoC5/CapSense_Controller.c ****         CY_SET_REG16(CapSense_Controller_RAW_CH0_PERIOD_PTR, CapSense_Controller_MEASURE_FULL_RANGE
 199:Generated_Source\PSoC5/CapSense_Controller.c ****     
 200:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 201:Generated_Source\PSoC5/CapSense_Controller.c ****         /*Window PWM and Raw Counter AUX set */
 202:Generated_Source\PSoC5/CapSense_Controller.c ****         enableInterrupts = CyEnterCriticalSection();
 170              		.loc 1 202 0
 171 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 172 005a 0346     		mov	r3, r0
 173 005c FB71     		strb	r3, [r7, #7]
 203:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PWM_CH0_AUX_CONTROL_REG |= CapSense_Controller_AUXCTRL_FIFO_SINGLE_REG;
 174              		.loc 1 203 0
 175 005e 2F4A     		ldr	r2, .L2+20
 176 0060 2E4B     		ldr	r3, .L2+20
 177 0062 1B78     		ldrb	r3, [r3]
 178 0064 DBB2     		uxtb	r3, r3
 179 0066 43F00303 		orr	r3, r3, #3
 180 006a DBB2     		uxtb	r3, r3
 181 006c 1370     		strb	r3, [r2]
 204:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_RAW_CH0_AUX_CONTROL_REG |= CapSense_Controller_AUXCTRL_FIFO_SINGLE_REG;
 182              		.loc 1 204 0
 183 006e 2C4A     		ldr	r2, .L2+24
 184 0070 2B4B     		ldr	r3, .L2+24
 185 0072 1B78     		ldrb	r3, [r3]
 186 0074 DBB2     		uxtb	r3, r3
 187 0076 43F00303 		orr	r3, r3, #3
 188 007a DBB2     		uxtb	r3, r3
 189 007c 1370     		strb	r3, [r2]
 205:Generated_Source\PSoC5/CapSense_Controller.c ****         CyExitCriticalSection(enableInterrupts);
 190              		.loc 1 205 0
 191 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 192 0080 1846     		mov	r0, r3
 193 0082 FFF7FEFF 		bl	CyExitCriticalSection
 206:Generated_Source\PSoC5/CapSense_Controller.c ****         
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 8


 207:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Window PWM */
 208:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PWM_CH0_ADD_VALUE_REG    = CapSense_Controller_MEASURE_FULL_RANGE_LOW;
 194              		.loc 1 208 0
 195 0086 274B     		ldr	r3, .L2+28
 196 0088 FF22     		movs	r2, #255
 197 008a 1A70     		strb	r2, [r3]
 209:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PWM_CH0_PERIOD_LO_REG    = CapSense_Controller_MEASURE_FULL_RANGE_LOW;
 198              		.loc 1 209 0
 199 008c 264B     		ldr	r3, .L2+32
 200 008e FF22     		movs	r2, #255
 201 0090 1A70     		strb	r2, [r3]
 210:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PWM_CH0_COUNTER_LO_REG   = CapSense_Controller_MEASURE_FULL_RANGE_LOW;
 202              		.loc 1 210 0
 203 0092 264B     		ldr	r3, .L2+36
 204 0094 FF22     		movs	r2, #255
 205 0096 1A70     		strb	r2, [r3]
 211:Generated_Source\PSoC5/CapSense_Controller.c ****         
 212:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Raw Counter */
 213:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_RAW_CH0_ADD_VALUE_REG    = CapSense_Controller_MEASURE_FULL_RANGE_LOW;
 206              		.loc 1 213 0
 207 0098 254B     		ldr	r3, .L2+40
 208 009a FF22     		movs	r2, #255
 209 009c 1A70     		strb	r2, [r3]
 214:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_RAW_CH0_PERIOD_HI_REG    = CapSense_Controller_MEASURE_FULL_RANGE_LOW;
 210              		.loc 1 214 0
 211 009e 254B     		ldr	r3, .L2+44
 212 00a0 FF22     		movs	r2, #255
 213 00a2 1A70     		strb	r2, [r3]
 215:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_RAW_CH0_PERIOD_LO_REG    = CapSense_Controller_MEASURE_FULL_RANGE_LOW;
 214              		.loc 1 215 0
 215 00a4 244B     		ldr	r3, .L2+48
 216 00a6 FF22     		movs	r2, #255
 217 00a8 1A70     		strb	r2, [r3]
 216:Generated_Source\PSoC5/CapSense_Controller.c ****         
 217:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATIO
 218:Generated_Source\PSoC5/CapSense_Controller.c ****     
 219:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 220:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLEMENTATION_F
 221:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Window PWM */
 222:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PWM_CH1_CONTROL_REG      = CapSense_Controller_MEASURE_CTRL_ENABLE;
 223:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PWM_CH1_CONTROL2_REG    |= CapSense_Controller_MEASURE_CTRL_PULSEWI
 224:Generated_Source\PSoC5/CapSense_Controller.c ****             CY_SET_REG16(CapSense_Controller_PWM_CH1_COUNTER_PTR, CapSense_Controller_MEASURE_FULL_
 225:Generated_Source\PSoC5/CapSense_Controller.c ****             
 226:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Raw Counter */
 227:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_RAW_CH1_CONTROL_REG      = CapSense_Controller_MEASURE_CTRL_ENABLE;
 228:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_RAW_CH1_CONTROL2_REG    |= CapSense_Controller_MEASURE_CTRL_PULSEWI
 229:Generated_Source\PSoC5/CapSense_Controller.c ****             CY_SET_REG16(CapSense_Controller_RAW_CH1_PERIOD_PTR, CapSense_Controller_MEASURE_FULL_R
 230:Generated_Source\PSoC5/CapSense_Controller.c ****            
 231:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
 232:Generated_Source\PSoC5/CapSense_Controller.c ****             /*Window PWM and Raw Counter AUX set */
 233:Generated_Source\PSoC5/CapSense_Controller.c ****             enableInterrupts = CyEnterCriticalSection();
 234:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PWM_CH1_AUX_CONTROL_REG |= CapSense_Controller_AUXCTRL_FIFO_SINGLE_
 235:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_RAW_CH1_AUX_CONTROL_REG |= CapSense_Controller_AUXCTRL_FIFO_SINGLE_
 236:Generated_Source\PSoC5/CapSense_Controller.c ****             CyExitCriticalSection(enableInterrupts);
 237:Generated_Source\PSoC5/CapSense_Controller.c ****             
 238:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Window PWM */
 239:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PWM_CH1_ADD_VALUE_REG    = CapSense_Controller_MEASURE_FULL_RANGE_L
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 9


 240:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PWM_CH1_PERIOD_LO_REG    = CapSense_Controller_MEASURE_FULL_RANGE_L
 241:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PWM_CH1_COUNTER_LO_REG   = CapSense_Controller_MEASURE_FULL_RANGE_L
 242:Generated_Source\PSoC5/CapSense_Controller.c ****             
 243:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Raw Counter */
 244:Generated_Source\PSoC5/CapSense_Controller.c ****             
 245:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_RAW_CH1_ADD_VALUE_REG    = CapSense_Controller_MEASURE_FULL_RANGE_L
 246:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_RAW_CH1_PERIOD_HI_REG    = CapSense_Controller_MEASURE_FULL_RANGE_L
 247:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_RAW_CH1_PERIOD_LO_REG    = CapSense_Controller_MEASURE_FULL_RANGE_L
 248:Generated_Source\PSoC5/CapSense_Controller.c ****             
 249:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLEMENT
 250:Generated_Source\PSoC5/CapSense_Controller.c ****     
 251:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 252:Generated_Source\PSoC5/CapSense_Controller.c ****     
 253:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Setup ISR */
 254:Generated_Source\PSoC5/CapSense_Controller.c ****     CyIntDisable(CapSense_Controller_IsrCH0_ISR_NUMBER);
 218              		.loc 1 254 0
 219 00aa 244B     		ldr	r3, .L2+52
 220 00ac 0222     		movs	r2, #2
 221 00ae 1A60     		str	r2, [r3]
 255:Generated_Source\PSoC5/CapSense_Controller.c ****     (void)CyIntSetVector(CapSense_Controller_IsrCH0_ISR_NUMBER, &CapSense_Controller_IsrCH0_ISR);
 222              		.loc 1 255 0
 223 00b0 2349     		ldr	r1, .L2+56
 224 00b2 0120     		movs	r0, #1
 225 00b4 FFF7FEFF 		bl	CyIntSetVector
 256:Generated_Source\PSoC5/CapSense_Controller.c ****     CyIntSetPriority(CapSense_Controller_IsrCH0_ISR_NUMBER, CapSense_Controller_IsrCH0_ISR_PRIORITY
 226              		.loc 1 256 0
 227 00b8 0721     		movs	r1, #7
 228 00ba 0120     		movs	r0, #1
 229 00bc FFF7FEFF 		bl	CyIntSetPriority
 257:Generated_Source\PSoC5/CapSense_Controller.c ****     
 258:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 259:Generated_Source\PSoC5/CapSense_Controller.c ****         CyIntDisable(CapSense_Controller_IsrCH1_ISR_NUMBER);
 260:Generated_Source\PSoC5/CapSense_Controller.c ****         CyIntSetVector(CapSense_Controller_IsrCH1_ISR_NUMBER, CapSense_Controller_IsrCH1_ISR);
 261:Generated_Source\PSoC5/CapSense_Controller.c ****         CyIntSetPriority(CapSense_Controller_IsrCH1_ISR_NUMBER, CapSense_Controller_IsrCH1_ISR_PRIO
 262:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */
 263:Generated_Source\PSoC5/CapSense_Controller.c ****     
 264:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 265:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_AMuxCH0_Init();
 230              		.loc 1 265 0
 231 00c0 FFF7FEFF 		bl	CapSense_Controller_AMuxCH0_Init
 266:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_AMuxCH0_Connect(CapSense_Controller_AMuxCH0_CMOD_CHANNEL);
 232              		.loc 1 266 0
 233 00c4 0420     		movs	r0, #4
 234 00c6 FFF7FEFF 		bl	CapSense_Controller_AMuxCH0_Set
 267:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_AMuxCH0_Connect(CapSense_Controller_AMuxCH0_CMP_VP_CHANNEL);
 235              		.loc 1 267 0
 236 00ca 0520     		movs	r0, #5
 237 00cc FFF7FEFF 		bl	CapSense_Controller_AMuxCH0_Set
 268:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_CURRENT_SOURCE)
 269:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_AMuxCH0_Connect(CapSense_Controller_AMuxCH0_IDAC_CHANNEL);
 238              		.loc 1 269 0
 239 00d0 0620     		movs	r0, #6
 240 00d2 FFF7FEFF 		bl	CapSense_Controller_AMuxCH0_Set
 270:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_CURRENT_SOURCE */
 271:Generated_Source\PSoC5/CapSense_Controller.c ****     
 272:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) 
 273:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_AMuxCH1_Init();
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 10


 274:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_AMuxCH1_Connect(CapSense_Controller_AMuxCH1_CMOD_CHANNEL);
 275:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_AMuxCH1_Connect(CapSense_Controller_AMuxCH1_CMP_VP_CHANNEL);
 276:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_CURRENT_SOURCE)
 277:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_AMuxCH1_Connect(CapSense_Controller_AMuxCH1_IDAC_CHANNEL);
 278:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_CURRENT_SOURCE */
 279:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */
 280:Generated_Source\PSoC5/CapSense_Controller.c ****     
 281:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Int Rb */
 282:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_EXTERNAL_RB)
 283:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_InitRb();
 284:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif /* (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_EXTERNAL_RB) */
 285:Generated_Source\PSoC5/CapSense_Controller.c ****     
 286:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Enable window generation */
 287:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_CONTROL_REG |= CapSense_Controller_CTRL_WINDOW_EN__CH0;
 241              		.loc 1 287 0
 242 00d6 1B4A     		ldr	r2, .L2+60
 243 00d8 1A4B     		ldr	r3, .L2+60
 244 00da 1B78     		ldrb	r3, [r3]
 245 00dc DBB2     		uxtb	r3, r3
 246 00de 43F00403 		orr	r3, r3, #4
 247 00e2 DBB2     		uxtb	r3, r3
 248 00e4 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 289:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_CONTROL_REG |= CapSense_Controller_CTRL_WINDOW_EN__CH1;
 290:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */
 291:Generated_Source\PSoC5/CapSense_Controller.c ****     
 292:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Initialize Cmp and Idac */
 293:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_CompCH0_Init();
 249              		.loc 1 293 0
 250 00e6 FFF7FEFF 		bl	CapSense_Controller_CompCH0_Init
 294:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_CURRENT_SOURCE)
 295:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_IdacCH0_Init();
 251              		.loc 1 295 0
 252 00ea FFF7FEFF 		bl	CapSense_Controller_IdacCH0_Init
 296:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_IdacCH0_SetPolarity(CapSense_Controller_IdacCH0_IDIR);
 253              		.loc 1 296 0
 254 00ee 0020     		movs	r0, #0
 255 00f0 FFF7FEFF 		bl	CapSense_Controller_IdacCH0_SetPolarity
 297:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_IdacCH0_SetRange(CapSense_Controller_IDAC_RANGE_VALUE);
 256              		.loc 1 297 0
 257 00f4 0420     		movs	r0, #4
 258 00f6 FFF7FEFF 		bl	CapSense_Controller_IdacCH0_SetRange
 298:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_IdacCH0_SetValue(CapSense_Controller_TURN_OFF_IDAC);
 259              		.loc 1 298 0
 260 00fa 0020     		movs	r0, #0
 261 00fc FFF7FEFF 		bl	CapSense_Controller_IdacCH0_SetValue
 299:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_CURRENT_SOURCE */
 300:Generated_Source\PSoC5/CapSense_Controller.c ****     
 301:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) 
 302:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_CompCH1_Init();
 303:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_CURRENT_SOURCE)
 304:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_IdacCH1_Init();
 305:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_IdacCH1_SetPolarity(CapSense_Controller_IdacCH1_IDIR);
 306:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_IdacCH1_SetRange(CapSense_Controller_IDAC_RANGE_VALUE);
 307:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_IdacCH1_SetValue(CapSense_Controller_TURN_OFF_IDAC);
 308:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_CURRENT_SOURCE */
 309:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 11


 310:Generated_Source\PSoC5/CapSense_Controller.c ****     
 311:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Initialize Vref if as VDAC */
 312:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_VREF_OPTIONS == CapSense_Controller_VREF_VDAC)
 313:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_VdacRefCH0_Init();
 314:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 315:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_VdacRefCH1_Init();
 316:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_DESIGN_TYPE */
 317:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_VREF_OPTIONS */
 318:Generated_Source\PSoC5/CapSense_Controller.c **** }
 262              		.loc 1 318 0
 263 0100 00BF     		nop
 264 0102 0837     		adds	r7, r7, #8
 265              		.cfi_def_cfa_offset 8
 266 0104 BD46     		mov	sp, r7
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 0106 80BD     		pop	{r7, pc}
 270              	.L3:
 271              		.align	2
 272              	.L2:
 273 0108 92640040 		.word	1073767570
 274 010c 93640040 		.word	1073767571
 275 0110 22640040 		.word	1073767458
 276 0114 42640040 		.word	1073767490
 277 0118 86640040 		.word	1073767558
 278 011c 97650040 		.word	1073767831
 279 0120 94640040 		.word	1073767572
 280 0124 27650040 		.word	1073767719
 281 0128 47650040 		.word	1073767751
 282 012c 07650040 		.word	1073767687
 283 0130 24640040 		.word	1073767460
 284 0134 54640040 		.word	1073767508
 285 0138 44640040 		.word	1073767492
 286 013c 80E100E0 		.word	-536813184
 287 0140 00000000 		.word	CapSense_Controller_IsrCH0_ISR
 288 0144 72640040 		.word	1073767538
 289              		.cfi_endproc
 290              	.LFE0:
 291              		.size	CapSense_Controller_Init, .-CapSense_Controller_Init
 292              		.section	.text.CapSense_Controller_Enable,"ax",%progbits
 293              		.align	2
 294              		.global	CapSense_Controller_Enable
 295              		.thumb
 296              		.thumb_func
 297              		.type	CapSense_Controller_Enable, %function
 298              	CapSense_Controller_Enable:
 299              	.LFB1:
 319:Generated_Source\PSoC5/CapSense_Controller.c **** 
 320:Generated_Source\PSoC5/CapSense_Controller.c **** 
 321:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
 322:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_Enable
 323:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
 324:Generated_Source\PSoC5/CapSense_Controller.c **** *
 325:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
 326:Generated_Source\PSoC5/CapSense_Controller.c **** *  Enables active mode power template bits for number of component used within 
 327:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense.
 328:Generated_Source\PSoC5/CapSense_Controller.c **** *
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 12


 329:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
 330:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
 331:Generated_Source\PSoC5/CapSense_Controller.c **** *
 332:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
 333:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
 334:Generated_Source\PSoC5/CapSense_Controller.c **** *
 335:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
 336:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_Enable(void) 
 337:Generated_Source\PSoC5/CapSense_Controller.c **** {
 300              		.loc 1 337 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 8
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 7, -8
 307              		.cfi_offset 14, -4
 308 0002 82B0     		sub	sp, sp, #8
 309              		.cfi_def_cfa_offset 16
 310 0004 00AF     		add	r7, sp, #0
 311              		.cfi_def_cfa_register 7
 338:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8 enableInterrupts;
 339:Generated_Source\PSoC5/CapSense_Controller.c ****     
 340:Generated_Source\PSoC5/CapSense_Controller.c ****     enableInterrupts = CyEnterCriticalSection();
 312              		.loc 1 340 0
 313 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 314 000a 0346     		mov	r3, r0
 315 000c FB71     		strb	r3, [r7, #7]
 341:Generated_Source\PSoC5/CapSense_Controller.c ****     
 342:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Enable Prescaler */
 343:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_UDB)
 344:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Do nothing  for UDB */
 345:Generated_Source\PSoC5/CapSense_Controller.c ****     #elif (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_FF)
 346:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PRESCALER_ACT_PWRMGR_REG  |= CapSense_Controller_PRESCALER_ACT_PWR_EN;
 347:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PRESCALER_STBY_PWRMGR_REG |= CapSense_Controller_PRESCALER_STBY_PWR_EN;
 348:Generated_Source\PSoC5/CapSense_Controller.c ****         
 349:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 350:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Do nothing = config without prescaler */
 351:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_UDB) */
 352:Generated_Source\PSoC5/CapSense_Controller.c ****     
 353:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Enable ScanSpeed */
 354:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_SCANSPEED_AUX_CONTROL_REG |= CapSense_Controller_SCANSPEED_CTRL_ENABLE;
 316              		.loc 1 354 0
 317 000e 1C4A     		ldr	r2, .L5
 318 0010 1B4B     		ldr	r3, .L5
 319 0012 1B78     		ldrb	r3, [r3]
 320 0014 DBB2     		uxtb	r3, r3
 321 0016 43F02003 		orr	r3, r3, #32
 322 001a DBB2     		uxtb	r3, r3
 323 001c 1370     		strb	r3, [r2]
 355:Generated_Source\PSoC5/CapSense_Controller.c ****     
 356:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Enable Measure CH0 */
 357:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATION_FF)
 358:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Window PWM */
 359:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_Controller_PWM_CH0_ACT_PWR_EN;
 360:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PWM_CH0_STBY_PWRMGR_REG |= CapSense_Controller_PWM_CH0_STBY_PWR_EN;
 361:Generated_Source\PSoC5/CapSense_Controller.c ****         
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 13


 362:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Raw Counter */
 363:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_Controller_RAW_CH0_ACT_PWR_EN;
 364:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_RAW_CH0_STBY_PWRMGR_REG |= CapSense_Controller_RAW_CH0_STBY_PWR_EN;
 365:Generated_Source\PSoC5/CapSense_Controller.c ****         
 366:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 367:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Window PWM -  Do nothing */
 368:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Raw Counter - Do nothing */
 369:Generated_Source\PSoC5/CapSense_Controller.c ****         
 370:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATIO
 371:Generated_Source\PSoC5/CapSense_Controller.c ****     
 372:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Enable Measure CH1*/
 373:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 374:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLEMENTATION_F
 375:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Window PWM */
 376:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_Controller_PWM_CH1_ACT_PWR_EN;
 377:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PWM_CH1_STBY_PWRMGR_REG |= CapSense_Controller_PWM_CH1_STBY_PWR_EN;
 378:Generated_Source\PSoC5/CapSense_Controller.c ****             
 379:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Raw Counter */
 380:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_Controller_RAW_CH1_ACT_PWR_EN;
 381:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_RAW_CH1_STBY_PWRMGR_REG |= CapSense_Controller_RAW_CH1_STBY_PWR_EN;
 382:Generated_Source\PSoC5/CapSense_Controller.c ****            
 383:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
 384:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Window PWM -  Do nothing */
 385:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Raw Counter - Do nothing */
 386:Generated_Source\PSoC5/CapSense_Controller.c ****         
 387:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLEMENT
 388:Generated_Source\PSoC5/CapSense_Controller.c ****     
 389:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 390:Generated_Source\PSoC5/CapSense_Controller.c ****     
 391:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Enable the Clock */
 392:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_CLOCK_SOURCE == CapSense_Controller_INTERNAL_CLOCK)
 393:Generated_Source\PSoC5/CapSense_Controller.c ****        CapSense_Controller_IntClock_Enable();
 324              		.loc 1 393 0
 325 001e FFF7FEFF 		bl	CapSense_Controller_IntClock_Start
 394:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_CLOCK_SOURCE */
 395:Generated_Source\PSoC5/CapSense_Controller.c ****     
 396:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Setup Cmp and Idac */
 397:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_CompCH0_Enable();
 326              		.loc 1 397 0
 327 0022 FFF7FEFF 		bl	CapSense_Controller_CompCH0_Enable
 398:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_CURRENT_SOURCE)
 399:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_IdacCH0_Enable();
 328              		.loc 1 399 0
 329 0026 FFF7FEFF 		bl	CapSense_Controller_IdacCH0_Enable
 400:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_CURRENT_SOURCE */
 401:Generated_Source\PSoC5/CapSense_Controller.c ****     
 402:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) 
 403:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_CompCH1_Enable();
 404:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_CURRENT_SOURCE)
 405:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_IdacCH1_Enable();
 406:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_CURRENT_SOURCE */
 407:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */
 408:Generated_Source\PSoC5/CapSense_Controller.c ****     
 409:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Enable Vref */
 410:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_VREF_OPTIONS == CapSense_Controller_VREF_VDAC)
 411:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_VdacRefCH0_Enable();
 412:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_VdacRefCH0_SetValue(CapSense_Controller_VdacRefCH0_DEFAULT_DATA);
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 14


 413:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 414:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_VdacRefCH1_Enable();
 415:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_VdacRefCH1_SetValue(CapSense_Controller_VdacRefCH1_DEFAULT_DATA);
 416:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) */
 417:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 418:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Enable CapSense Buf */
 419:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_BufCH0_STBY_PWRMGR_REG |= CapSense_Controller_BufCH0_STBY_PWR_EN;
 330              		.loc 1 419 0
 331 002a 164A     		ldr	r2, .L5+4
 332 002c 154B     		ldr	r3, .L5+4
 333 002e 1B78     		ldrb	r3, [r3]
 334 0030 DBB2     		uxtb	r3, r3
 335 0032 43F01003 		orr	r3, r3, #16
 336 0036 DBB2     		uxtb	r3, r3
 337 0038 1370     		strb	r3, [r2]
 420:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_BufCH0_ACT_PWRMGR_REG  |= CapSense_Controller_BufCH0_ACT_PWR_EN;
 338              		.loc 1 420 0
 339 003a 134A     		ldr	r2, .L5+8
 340 003c 124B     		ldr	r3, .L5+8
 341 003e 1B78     		ldrb	r3, [r3]
 342 0040 DBB2     		uxtb	r3, r3
 343 0042 43F01003 		orr	r3, r3, #16
 344 0046 DBB2     		uxtb	r3, r3
 345 0048 1370     		strb	r3, [r2]
 421:Generated_Source\PSoC5/CapSense_Controller.c ****         
 422:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 423:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_BufCH1_STBY_PWRMGR_REG |= CapSense_Controller_BufCH1_STBY_PWR_EN;
 424:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_BufCH1_ACT_PWRMGR_REG  |= CapSense_Controller_BufCH1_ACT_PWR_EN;
 425:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) */
 426:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_VREF_VDAC == CapSense_Controller_VREF_OPTIONS) */
 427:Generated_Source\PSoC5/CapSense_Controller.c ****     
 428:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Set reference on AMux Bus */
 429:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_VREF_OPTIONS == CapSense_Controller_VREF_VDAC)
 430:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Connect Vdac to AMux Bus */
 431:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_AMuxCH0_Connect(CapSense_Controller_AMuxCH0_VREF_CHANNEL);
 432:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 433:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_AMuxCH1_Connect(CapSense_Controller_AMuxCH1_VREF_CHANNEL);
 434:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) */
 435:Generated_Source\PSoC5/CapSense_Controller.c ****         
 436:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 437:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Enable CapSense Buf */
 438:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_BufCH0_CAPS_CFG0_REG |= CapSense_Controller_CSBUF_ENABLE;
 346              		.loc 1 438 0
 347 004a 104A     		ldr	r2, .L5+12
 348 004c 0F4B     		ldr	r3, .L5+12
 349 004e 1B78     		ldrb	r3, [r3]
 350 0050 DBB2     		uxtb	r3, r3
 351 0052 43F00103 		orr	r3, r3, #1
 352 0056 DBB2     		uxtb	r3, r3
 353 0058 1370     		strb	r3, [r2]
 439:Generated_Source\PSoC5/CapSense_Controller.c ****         
 440:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 441:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_BufCH1_CAPS_CFG0_REG |= CapSense_Controller_CSBUF_ENABLE;
 442:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) */
 443:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_VREF_VDAC == CapSense_Controller_VREF_OPTIONS)*/
 444:Generated_Source\PSoC5/CapSense_Controller.c ****     
 445:Generated_Source\PSoC5/CapSense_Controller.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 15


 354              		.loc 1 445 0
 355 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 356 005c 1846     		mov	r0, r3
 357 005e FFF7FEFF 		bl	CyExitCriticalSection
 446:Generated_Source\PSoC5/CapSense_Controller.c ****     
 447:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Enable interrupt */
 448:Generated_Source\PSoC5/CapSense_Controller.c ****     CyIntEnable(CapSense_Controller_IsrCH0_ISR_NUMBER);
 358              		.loc 1 448 0
 359 0062 0B4B     		ldr	r3, .L5+16
 360 0064 0222     		movs	r2, #2
 361 0066 1A60     		str	r2, [r3]
 449:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) 
 450:Generated_Source\PSoC5/CapSense_Controller.c ****         CyIntEnable(CapSense_Controller_IsrCH1_ISR_NUMBER);
 451:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */
 452:Generated_Source\PSoC5/CapSense_Controller.c ****     
 453:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Set CapSense Enable state */
 454:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_CONTROL_REG |= CapSense_Controller_CTRL_CAPSENSE_EN;
 362              		.loc 1 454 0
 363 0068 0A4A     		ldr	r2, .L5+20
 364 006a 0A4B     		ldr	r3, .L5+20
 365 006c 1B78     		ldrb	r3, [r3]
 366 006e DBB2     		uxtb	r3, r3
 367 0070 63F07F03 		orn	r3, r3, #127
 368 0074 DBB2     		uxtb	r3, r3
 369 0076 1370     		strb	r3, [r2]
 455:Generated_Source\PSoC5/CapSense_Controller.c **** }
 370              		.loc 1 455 0
 371 0078 00BF     		nop
 372 007a 0837     		adds	r7, r7, #8
 373              		.cfi_def_cfa_offset 8
 374 007c BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 007e 80BD     		pop	{r7, pc}
 378              	.L6:
 379              		.align	2
 380              	.L5:
 381 0080 96640040 		.word	1073767574
 382 0084 BB430040 		.word	1073759163
 383 0088 AB430040 		.word	1073759147
 384 008c 70580040 		.word	1073764464
 385 0090 00E100E0 		.word	-536813312
 386 0094 72640040 		.word	1073767538
 387              		.cfi_endproc
 388              	.LFE1:
 389              		.size	CapSense_Controller_Enable, .-CapSense_Controller_Enable
 390              		.section	.text.CapSense_Controller_Start,"ax",%progbits
 391              		.align	2
 392              		.global	CapSense_Controller_Start
 393              		.thumb
 394              		.thumb_func
 395              		.type	CapSense_Controller_Start, %function
 396              	CapSense_Controller_Start:
 397              	.LFB2:
 456:Generated_Source\PSoC5/CapSense_Controller.c **** 
 457:Generated_Source\PSoC5/CapSense_Controller.c **** 
 458:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 16


 459:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_Start
 460:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
 461:Generated_Source\PSoC5/CapSense_Controller.c **** *
 462:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
 463:Generated_Source\PSoC5/CapSense_Controller.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 464:Generated_Source\PSoC5/CapSense_Controller.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 465:Generated_Source\PSoC5/CapSense_Controller.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 466:Generated_Source\PSoC5/CapSense_Controller.c **** *  applied for all sensors.
 467:Generated_Source\PSoC5/CapSense_Controller.c **** *
 468:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
 469:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
 470:Generated_Source\PSoC5/CapSense_Controller.c **** *
 471:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
 472:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
 473:Generated_Source\PSoC5/CapSense_Controller.c **** *
 474:Generated_Source\PSoC5/CapSense_Controller.c **** * Global Variables:
 475:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_initVar - used to check initial configuration, modified on 
 476:Generated_Source\PSoC5/CapSense_Controller.c **** *  first function call.
 477:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_lowLevelTuningDone - used to notify the Tuner GUI that 
 478:Generated_Source\PSoC5/CapSense_Controller.c **** *  tuning of scanning parameters are done.
 479:Generated_Source\PSoC5/CapSense_Controller.c **** *
 480:Generated_Source\PSoC5/CapSense_Controller.c **** * Reentrant:
 481:Generated_Source\PSoC5/CapSense_Controller.c **** *  No
 482:Generated_Source\PSoC5/CapSense_Controller.c **** *
 483:Generated_Source\PSoC5/CapSense_Controller.c **** * Note:
 484:Generated_Source\PSoC5/CapSense_Controller.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 485:Generated_Source\PSoC5/CapSense_Controller.c **** *  must be manually enabled as their long scan time is incompatible 
 486:Generated_Source\PSoC5/CapSense_Controller.c **** *  with the fast response required of other widget types. 
 487:Generated_Source\PSoC5/CapSense_Controller.c **** *
 488:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
 489:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_Start(void)  
 490:Generated_Source\PSoC5/CapSense_Controller.c **** {
 398              		.loc 1 490 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402 0000 80B5     		push	{r7, lr}
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 7, -8
 405              		.cfi_offset 14, -4
 406 0002 00AF     		add	r7, sp, #0
 407              		.cfi_def_cfa_register 7
 491:Generated_Source\PSoC5/CapSense_Controller.c ****     if (CapSense_Controller_initVar == 0u)
 408              		.loc 1 491 0
 409 0004 084B     		ldr	r3, .L9
 410 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 411 0008 002B     		cmp	r3, #0
 412 000a 04D1     		bne	.L8
 492:Generated_Source\PSoC5/CapSense_Controller.c ****     {
 493:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_Init();
 413              		.loc 1 493 0
 414 000c FFF7FEFF 		bl	CapSense_Controller_Init
 494:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_initVar = 1u;
 415              		.loc 1 494 0
 416 0010 054B     		ldr	r3, .L9
 417 0012 0122     		movs	r2, #1
 418 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 17


 419              	.L8:
 495:Generated_Source\PSoC5/CapSense_Controller.c ****     }
 496:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_Enable();
 420              		.loc 1 496 0
 421 0016 FFF7FEFF 		bl	CapSense_Controller_Enable
 497:Generated_Source\PSoC5/CapSense_Controller.c ****     
 498:Generated_Source\PSoC5/CapSense_Controller.c ****     /* AutoTunning start */
 499:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_TUNING_METHOD == CapSense_Controller_AUTO_TUNING)
 500:Generated_Source\PSoC5/CapSense_Controller.c ****         /* AutoTune by sensor or pair of sensor basis */
 501:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_AutoTune();
 422              		.loc 1 501 0
 423 001a FFF7FEFF 		bl	CapSense_Controller_AutoTune
 502:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_lowLevelTuningDone = 1u;
 424              		.loc 1 502 0
 425 001e 034B     		ldr	r3, .L9+4
 426 0020 0122     		movs	r2, #1
 427 0022 1A70     		strb	r2, [r3]
 503:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif /* (CapSense_Controller_TUNING_METHOD == CapSense_Controller_AUTO_TUNING) */
 504:Generated_Source\PSoC5/CapSense_Controller.c **** }
 428              		.loc 1 504 0
 429 0024 00BF     		nop
 430 0026 80BD     		pop	{r7, pc}
 431              	.L10:
 432              		.align	2
 433              	.L9:
 434 0028 00000000 		.word	CapSense_Controller_initVar
 435 002c 00000000 		.word	CapSense_Controller_lowLevelTuningDone
 436              		.cfi_endproc
 437              	.LFE2:
 438              		.size	CapSense_Controller_Start, .-CapSense_Controller_Start
 439              		.section	.text.CapSense_Controller_Stop,"ax",%progbits
 440              		.align	2
 441              		.global	CapSense_Controller_Stop
 442              		.thumb
 443              		.thumb_func
 444              		.type	CapSense_Controller_Stop, %function
 445              	CapSense_Controller_Stop:
 446              	.LFB3:
 505:Generated_Source\PSoC5/CapSense_Controller.c **** 
 506:Generated_Source\PSoC5/CapSense_Controller.c **** 
 507:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
 508:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_Stop
 509:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
 510:Generated_Source\PSoC5/CapSense_Controller.c **** *
 511:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
 512:Generated_Source\PSoC5/CapSense_Controller.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 513:Generated_Source\PSoC5/CapSense_Controller.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 514:Generated_Source\PSoC5/CapSense_Controller.c **** *  number of component used within CapSense.
 515:Generated_Source\PSoC5/CapSense_Controller.c **** *
 516:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
 517:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
 518:Generated_Source\PSoC5/CapSense_Controller.c **** *
 519:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
 520:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
 521:Generated_Source\PSoC5/CapSense_Controller.c **** *
 522:Generated_Source\PSoC5/CapSense_Controller.c **** * Side Effects:
 523:Generated_Source\PSoC5/CapSense_Controller.c **** *  This function should be called after scans will be completed.
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 18


 524:Generated_Source\PSoC5/CapSense_Controller.c **** *
 525:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
 526:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_Stop(void) 
 527:Generated_Source\PSoC5/CapSense_Controller.c **** {
 447              		.loc 1 527 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 1, uses_anonymous_args = 0
 451 0000 80B5     		push	{r7, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 00AF     		add	r7, sp, #0
 456              		.cfi_def_cfa_register 7
 528:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Stop Capsensing */
 529:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_CONTROL_REG &= (uint8)(~CapSense_Controller_CTRL_START);
 457              		.loc 1 529 0
 458 0004 1E4A     		ldr	r2, .L12
 459 0006 1E4B     		ldr	r3, .L12
 460 0008 1B78     		ldrb	r3, [r3]
 461 000a DBB2     		uxtb	r3, r3
 462 000c 23F00203 		bic	r3, r3, #2
 463 0010 DBB2     		uxtb	r3, r3
 464 0012 1370     		strb	r3, [r2]
 530:Generated_Source\PSoC5/CapSense_Controller.c ****     
 531:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Disable interrupt */
 532:Generated_Source\PSoC5/CapSense_Controller.c ****     CyIntDisable(CapSense_Controller_IsrCH0_ISR_NUMBER);
 465              		.loc 1 532 0
 466 0014 1B4B     		ldr	r3, .L12+4
 467 0016 0222     		movs	r2, #2
 468 0018 1A60     		str	r2, [r3]
 533:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) 
 534:Generated_Source\PSoC5/CapSense_Controller.c ****         CyIntDisable(CapSense_Controller_IsrCH1_ISR_NUMBER);
 535:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */
 536:Generated_Source\PSoC5/CapSense_Controller.c ****     
 537:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Clear all sensors */
 538:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_ClearSensors();
 469              		.loc 1 538 0
 470 001a FFF7FEFF 		bl	CapSense_Controller_ClearSensors
 539:Generated_Source\PSoC5/CapSense_Controller.c ****     
 540:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Disable Prescaler */
 541:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_UDB)
 542:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Do nothing  for UDB */
 543:Generated_Source\PSoC5/CapSense_Controller.c ****     #elif (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_FF)        
 544:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_Controller_PRESCALER_ACT_PWR_EN;
 545:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_Controller_PRESCALER_STBY_PWR_EN
 546:Generated_Source\PSoC5/CapSense_Controller.c ****         
 547:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 548:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Do nothing = config without prescaler */
 549:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_UDB) */
 550:Generated_Source\PSoC5/CapSense_Controller.c ****     
 551:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Disable ScanSpeed */
 552:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_Controller_SCANSPEED_CTRL_EN
 471              		.loc 1 552 0
 472 001e 1A4A     		ldr	r2, .L12+8
 473 0020 194B     		ldr	r3, .L12+8
 474 0022 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 19


 475 0024 DBB2     		uxtb	r3, r3
 476 0026 23F02003 		bic	r3, r3, #32
 477 002a DBB2     		uxtb	r3, r3
 478 002c 1370     		strb	r3, [r2]
 553:Generated_Source\PSoC5/CapSense_Controller.c ****     
 554:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Disable Measure CH0 */
 555:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATION_FF)
 556:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Window PWM */
 557:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_Controller_PWM_CH0_ACT_PWR_EN;
 558:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_Controller_PWM_CH0_STBY_PWR_EN;
 559:Generated_Source\PSoC5/CapSense_Controller.c **** 
 560:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Raw Counter */
 561:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_Controller_RAW_CH0_ACT_PWR_EN;
 562:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_Controller_RAW_CH0_STBY_PWR_EN;
 563:Generated_Source\PSoC5/CapSense_Controller.c **** 
 564:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 565:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Window PWM -  Do nothing */
 566:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Raw Counter - Do nothing */
 567:Generated_Source\PSoC5/CapSense_Controller.c ****         
 568:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATIO
 569:Generated_Source\PSoC5/CapSense_Controller.c ****     
 570:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Disable Measure CH1 */
 571:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 572:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLEMENTATION_F
 573:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Window PWM */
 574:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_Controller_PWM_CH1_ACT_PWR_EN;
 575:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_Controller_PWM_CH1_STBY_PWR_EN
 576:Generated_Source\PSoC5/CapSense_Controller.c ****     
 577:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Raw Counter */
 578:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_Controller_RAW_CH1_ACT_PWR_EN;
 579:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_Controller_RAW_CH1_STBY_PWR_EN
 580:Generated_Source\PSoC5/CapSense_Controller.c ****            
 581:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
 582:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Window PWM -  Do nothing */
 583:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Raw Counter - Do nothing */
 584:Generated_Source\PSoC5/CapSense_Controller.c ****         
 585:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLEMENT
 586:Generated_Source\PSoC5/CapSense_Controller.c ****     
 587:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 588:Generated_Source\PSoC5/CapSense_Controller.c ****     
 589:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Disable the Clock */
 590:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_CLOCK_SOURCE == CapSense_Controller_INTERNAL_CLOCK)
 591:Generated_Source\PSoC5/CapSense_Controller.c ****        CapSense_Controller_IntClock_Stop();
 479              		.loc 1 591 0
 480 002e FFF7FEFF 		bl	CapSense_Controller_IntClock_Stop
 592:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_CLOCK_SOURCE */
 593:Generated_Source\PSoC5/CapSense_Controller.c ****     
 594:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Disable power from Cmp and Idac */
 595:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_CompCH0_Stop();
 481              		.loc 1 595 0
 482 0032 FFF7FEFF 		bl	CapSense_Controller_CompCH0_Stop
 596:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_CURRENT_SOURCE)
 597:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_IdacCH0_Stop();
 483              		.loc 1 597 0
 484 0036 FFF7FEFF 		bl	CapSense_Controller_IdacCH0_Stop
 598:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_CURRENT_SOURCE */
 599:Generated_Source\PSoC5/CapSense_Controller.c ****     
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 20


 600:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) 
 601:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_CompCH1_Stop();
 602:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_CURRENT_SOURCE)
 603:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_IdacCH1_Stop();
 604:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_CURRENT_SOURCE */
 605:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */    
 606:Generated_Source\PSoC5/CapSense_Controller.c ****     
 607:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Disable Vref if as VDAC */
 608:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_VREF_OPTIONS == CapSense_Controller_VREF_VDAC)
 609:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_VdacRefCH0_Stop();
 610:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 611:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_VdacRefCH1_Stop();
 612:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_DESIGN_TYPE */
 613:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_VREF_OPTIONS */
 614:Generated_Source\PSoC5/CapSense_Controller.c **** 
 615:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_VREF_VDAC == CapSense_Controller_VREF_OPTIONS)
 616:Generated_Source\PSoC5/CapSense_Controller.c ****         /* The Idac turn off before */
 617:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 618:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Enable CapSense Buf */
 619:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_Controller_CSBUF_ENABLE);
 485              		.loc 1 619 0
 486 003a 144A     		ldr	r2, .L12+12
 487 003c 134B     		ldr	r3, .L12+12
 488 003e 1B78     		ldrb	r3, [r3]
 489 0040 DBB2     		uxtb	r3, r3
 490 0042 23F00103 		bic	r3, r3, #1
 491 0046 DBB2     		uxtb	r3, r3
 492 0048 1370     		strb	r3, [r2]
 620:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_Controller_BufCH0_ACT_PWR_EN
 493              		.loc 1 620 0
 494 004a 114A     		ldr	r2, .L12+16
 495 004c 104B     		ldr	r3, .L12+16
 496 004e 1B78     		ldrb	r3, [r3]
 497 0050 DBB2     		uxtb	r3, r3
 498 0052 23F01003 		bic	r3, r3, #16
 499 0056 DBB2     		uxtb	r3, r3
 500 0058 1370     		strb	r3, [r2]
 621:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_Controller_BufCH0_STBY_PWR_
 501              		.loc 1 621 0
 502 005a 0E4A     		ldr	r2, .L12+20
 503 005c 0D4B     		ldr	r3, .L12+20
 504 005e 1B78     		ldrb	r3, [r3]
 505 0060 DBB2     		uxtb	r3, r3
 506 0062 23F01003 		bic	r3, r3, #16
 507 0066 DBB2     		uxtb	r3, r3
 508 0068 1370     		strb	r3, [r2]
 622:Generated_Source\PSoC5/CapSense_Controller.c ****         
 623:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 624:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_Controller_CSBUF_ENABLE);
 625:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_Controller_BufCH1_ACT_PW
 626:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_Controller_BufCH1_STBY_
 627:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /*(CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) */
 628:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_VREF_VDAC == CapSense_Controller_VREF_OPTIONS) */
 629:Generated_Source\PSoC5/CapSense_Controller.c ****     
 630:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Set CapSense Disable state */
 631:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_CONTROL_REG &= (uint8)(~CapSense_Controller_CTRL_CAPSENSE_EN);
 509              		.loc 1 631 0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 21


 510 006a 054A     		ldr	r2, .L12
 511 006c 044B     		ldr	r3, .L12
 512 006e 1B78     		ldrb	r3, [r3]
 513 0070 DBB2     		uxtb	r3, r3
 514 0072 03F07F03 		and	r3, r3, #127
 515 0076 DBB2     		uxtb	r3, r3
 516 0078 1370     		strb	r3, [r2]
 632:Generated_Source\PSoC5/CapSense_Controller.c **** }
 517              		.loc 1 632 0
 518 007a 00BF     		nop
 519 007c 80BD     		pop	{r7, pc}
 520              	.L13:
 521 007e 00BF     		.align	2
 522              	.L12:
 523 0080 72640040 		.word	1073767538
 524 0084 80E100E0 		.word	-536813184
 525 0088 96640040 		.word	1073767574
 526 008c 70580040 		.word	1073764464
 527 0090 AB430040 		.word	1073759147
 528 0094 BB430040 		.word	1073759163
 529              		.cfi_endproc
 530              	.LFE3:
 531              		.size	CapSense_Controller_Stop, .-CapSense_Controller_Stop
 532              		.section	.text.CapSense_Controller_FindNextSensor,"ax",%progbits
 533              		.align	2
 534              		.global	CapSense_Controller_FindNextSensor
 535              		.thumb
 536              		.thumb_func
 537              		.type	CapSense_Controller_FindNextSensor, %function
 538              	CapSense_Controller_FindNextSensor:
 539              	.LFB4:
 633:Generated_Source\PSoC5/CapSense_Controller.c **** 
 634:Generated_Source\PSoC5/CapSense_Controller.c **** 
 635:Generated_Source\PSoC5/CapSense_Controller.c **** #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN)
 636:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
 637:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name: CapSense_Controller_FindNextSensor
 638:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
 639:Generated_Source\PSoC5/CapSense_Controller.c ****     *
 640:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
 641:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Finds next sensor to scan. 
 642:Generated_Source\PSoC5/CapSense_Controller.c ****     *
 643:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
 644:Generated_Source\PSoC5/CapSense_Controller.c ****     *  snsIndex:  Current index of sensor.
 645:Generated_Source\PSoC5/CapSense_Controller.c ****     *
 646:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
 647:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Returns the next sensor index to scan.
 648:Generated_Source\PSoC5/CapSense_Controller.c ****     *
 649:Generated_Source\PSoC5/CapSense_Controller.c ****     * Global Variables:
 650:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_sensorEnableMask[ ] - used to store bit masks of enabled 
 651:Generated_Source\PSoC5/CapSense_Controller.c ****     *  sensors.
 652:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_sensorEnableMask[0] contains the masked bits for sensors 0
 653:Generated_Source\PSoC5/CapSense_Controller.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 654:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_sensorEnableMask[1] contains the masked bits for sensors 
 655:Generated_Source\PSoC5/CapSense_Controller.c ****     *  8 through 15 (if needed), and so on.
 656:Generated_Source\PSoC5/CapSense_Controller.c ****     *    0 - sensor doesn't scan by CapSense_Controller_ScanEnabledWidgets().
 657:Generated_Source\PSoC5/CapSense_Controller.c ****     *    1 - sensor scans by CapSense_Controller_ScanEnabledWidgets().
 658:Generated_Source\PSoC5/CapSense_Controller.c ****     *
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 22


 659:Generated_Source\PSoC5/CapSense_Controller.c ****     * Note: 
 660:Generated_Source\PSoC5/CapSense_Controller.c ****     *  This function has effect on current scanning scanning and should not
 661:Generated_Source\PSoC5/CapSense_Controller.c ****     *  be used outisde of component.
 662:Generated_Source\PSoC5/CapSense_Controller.c ****     *
 663:Generated_Source\PSoC5/CapSense_Controller.c ****     *******************************************************************************/
 664:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8 CapSense_Controller_FindNextSensor(uint8 snsIndex) CYREENTRANT
 665:Generated_Source\PSoC5/CapSense_Controller.c ****     {
 540              		.loc 1 665 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 16
 543              		@ frame_needed = 1, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 545 0000 80B4     		push	{r7}
 546              		.cfi_def_cfa_offset 4
 547              		.cfi_offset 7, -4
 548 0002 85B0     		sub	sp, sp, #20
 549              		.cfi_def_cfa_offset 24
 550 0004 00AF     		add	r7, sp, #0
 551              		.cfi_def_cfa_register 7
 552 0006 0346     		mov	r3, r0
 553 0008 FB71     		strb	r3, [r7, #7]
 554              	.L17:
 666:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 pos;
 667:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 enMask;
 668:Generated_Source\PSoC5/CapSense_Controller.c ****         
 669:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Check if sensor enabled */
 670:Generated_Source\PSoC5/CapSense_Controller.c ****         do
 671:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 672:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Proceed with the next sensor */
 673:Generated_Source\PSoC5/CapSense_Controller.c ****             snsIndex++;
 555              		.loc 1 673 0
 556 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 557 000c 0133     		adds	r3, r3, #1
 558 000e FB71     		strb	r3, [r7, #7]
 674:Generated_Source\PSoC5/CapSense_Controller.c ****             if(snsIndex == CapSense_Controller_TOTAL_SENSOR_COUNT)
 559              		.loc 1 674 0
 560 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 561 0012 042B     		cmp	r3, #4
 562 0014 12D0     		beq	.L19
 675:Generated_Source\PSoC5/CapSense_Controller.c ****             {
 676:Generated_Source\PSoC5/CapSense_Controller.c ****                 break;
 677:Generated_Source\PSoC5/CapSense_Controller.c ****             }
 678:Generated_Source\PSoC5/CapSense_Controller.c ****             pos = (snsIndex >> 3u);
 563              		.loc 1 678 0
 564 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 565 0018 DB08     		lsrs	r3, r3, #3
 566 001a FB73     		strb	r3, [r7, #15]
 679:Generated_Source\PSoC5/CapSense_Controller.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 567              		.loc 1 679 0
 568 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 569 001e 03F00703 		and	r3, r3, #7
 570 0022 0122     		movs	r2, #1
 571 0024 02FA03F3 		lsl	r3, r2, r3
 572 0028 BB73     		strb	r3, [r7, #14]
 680:Generated_Source\PSoC5/CapSense_Controller.c ****         }    
 681:Generated_Source\PSoC5/CapSense_Controller.c ****         while((CapSense_Controller_sensorEnableMask[pos] & enMask) == 0u);
 573              		.loc 1 681 0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 23


 574 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 575 002c 074A     		ldr	r2, .L20
 576 002e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 577 0030 BB7B     		ldrb	r3, [r7, #14]
 578 0032 1340     		ands	r3, r3, r2
 579 0034 DBB2     		uxtb	r3, r3
 580 0036 002B     		cmp	r3, #0
 581 0038 E7D0     		beq	.L17
 582 003a 00E0     		b	.L16
 583              	.L19:
 676:Generated_Source\PSoC5/CapSense_Controller.c ****             }
 584              		.loc 1 676 0
 585 003c 00BF     		nop
 586              	.L16:
 682:Generated_Source\PSoC5/CapSense_Controller.c ****         
 683:Generated_Source\PSoC5/CapSense_Controller.c ****         return snsIndex;
 587              		.loc 1 683 0
 588 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 684:Generated_Source\PSoC5/CapSense_Controller.c ****     }
 589              		.loc 1 684 0
 590 0040 1846     		mov	r0, r3
 591 0042 1437     		adds	r7, r7, #20
 592              		.cfi_def_cfa_offset 4
 593 0044 BD46     		mov	sp, r7
 594              		.cfi_def_cfa_register 13
 595              		@ sp needed
 596 0046 80BC     		pop	{r7}
 597              		.cfi_restore 7
 598              		.cfi_def_cfa_offset 0
 599 0048 7047     		bx	lr
 600              	.L21:
 601 004a 00BF     		.align	2
 602              	.L20:
 603 004c 00000000 		.word	CapSense_Controller_sensorEnableMask
 604              		.cfi_endproc
 605              	.LFE4:
 606              		.size	CapSense_Controller_FindNextSensor, .-CapSense_Controller_FindNextSensor
 607              		.section	.text.CapSense_Controller_SetScanSlotSettings,"ax",%progbits
 608              		.align	2
 609              		.global	CapSense_Controller_SetScanSlotSettings
 610              		.thumb
 611              		.thumb_func
 612              		.type	CapSense_Controller_SetScanSlotSettings, %function
 613              	CapSense_Controller_SetScanSlotSettings:
 614              	.LFB5:
 685:Generated_Source\PSoC5/CapSense_Controller.c ****  #endif  /* CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN */
 686:Generated_Source\PSoC5/CapSense_Controller.c ****  
 687:Generated_Source\PSoC5/CapSense_Controller.c ****  
 688:Generated_Source\PSoC5/CapSense_Controller.c **** #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN)
 689:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
 690:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name: CapSense_Controller_FindNextPair
 691:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
 692:Generated_Source\PSoC5/CapSense_Controller.c ****     *
 693:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
 694:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 695:Generated_Source\PSoC5/CapSense_Controller.c ****     *  
 696:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 24


 697:Generated_Source\PSoC5/CapSense_Controller.c ****     *  snsIndex:  Current index pair of sensors.
 698:Generated_Source\PSoC5/CapSense_Controller.c ****     *
 699:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
 700:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Returns the next pair of sensors index to scan.
 701:Generated_Source\PSoC5/CapSense_Controller.c ****     *
 702:Generated_Source\PSoC5/CapSense_Controller.c ****     * Global Variables:
 703:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_sensorEnableMask[ ] - used to store bit masks of enabled 
 704:Generated_Source\PSoC5/CapSense_Controller.c ****     *  sensors.
 705:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_sensorEnableMask[0] contains the masked bits for sensors 0
 706:Generated_Source\PSoC5/CapSense_Controller.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 707:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_sensorEnableMask[1] contains the masked bits for sensors 
 708:Generated_Source\PSoC5/CapSense_Controller.c ****     *  8 through 15 (if needed), and so on.
 709:Generated_Source\PSoC5/CapSense_Controller.c ****     *    0 - sensor doesn't scan by CapSense_Controller_ScanEnabledWidgets().
 710:Generated_Source\PSoC5/CapSense_Controller.c ****     *    1 - sensor scans by CapSense_Controller_ScanEnabledWidgets().
 711:Generated_Source\PSoC5/CapSense_Controller.c ****     *
 712:Generated_Source\PSoC5/CapSense_Controller.c ****     * Note: 
 713:Generated_Source\PSoC5/CapSense_Controller.c ****     *  This function has effect on control signals set for scanning and should not
 714:Generated_Source\PSoC5/CapSense_Controller.c ****     *  be used outisde of component.
 715:Generated_Source\PSoC5/CapSense_Controller.c ****     *
 716:Generated_Source\PSoC5/CapSense_Controller.c ****     *******************************************************************************/
 717:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8 CapSense_Controller_FindNextPair(uint8 snsIndex) CYREENTRANT
 718:Generated_Source\PSoC5/CapSense_Controller.c ****     {
 719:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 posCh;
 720:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 enMaskCh;
 721:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 newRegValue;
 722:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 indexCh0 = snsIndex;
 723:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 indexCh1 = snsIndex + CapSense_Controller_TOTAL_SENSOR_COUNT__CH0;
 724:Generated_Source\PSoC5/CapSense_Controller.c ****         
 725:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Find enabled sensor on channel 0 */
 726:Generated_Source\PSoC5/CapSense_Controller.c ****         do
 727:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 728:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Procced the scanning */
 729:Generated_Source\PSoC5/CapSense_Controller.c ****             indexCh0++;
 730:Generated_Source\PSoC5/CapSense_Controller.c ****             if (indexCh0 >= CapSense_Controller_TOTAL_SENSOR_COUNT__CH0)
 731:Generated_Source\PSoC5/CapSense_Controller.c ****             {
 732:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Lets hadle now all from CH1 */
 733:Generated_Source\PSoC5/CapSense_Controller.c ****                 indexCh0 = CapSense_Controller_END_OF_SCAN__CH0;
 734:Generated_Source\PSoC5/CapSense_Controller.c ****                 break;
 735:Generated_Source\PSoC5/CapSense_Controller.c ****             }
 736:Generated_Source\PSoC5/CapSense_Controller.c ****             
 737:Generated_Source\PSoC5/CapSense_Controller.c ****             posCh = (indexCh0 >> 3u);
 738:Generated_Source\PSoC5/CapSense_Controller.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 739:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 740:Generated_Source\PSoC5/CapSense_Controller.c ****         while((CapSense_Controller_sensorEnableMask[posCh] & enMaskCh) == 0u);
 741:Generated_Source\PSoC5/CapSense_Controller.c ****         
 742:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Find enabled sensor on channel 1 */
 743:Generated_Source\PSoC5/CapSense_Controller.c ****         do
 744:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 745:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Procced the scanning */
 746:Generated_Source\PSoC5/CapSense_Controller.c ****             indexCh1++;        
 747:Generated_Source\PSoC5/CapSense_Controller.c ****             if (indexCh1 >= CapSense_Controller_TOTAL_SENSOR_COUNT)
 748:Generated_Source\PSoC5/CapSense_Controller.c ****             {
 749:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Lets hadle now all from CH0 */
 750:Generated_Source\PSoC5/CapSense_Controller.c ****                 indexCh1 = CapSense_Controller_END_OF_SCAN__CH1;
 751:Generated_Source\PSoC5/CapSense_Controller.c ****                 break;
 752:Generated_Source\PSoC5/CapSense_Controller.c ****             }
 753:Generated_Source\PSoC5/CapSense_Controller.c ****             
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 25


 754:Generated_Source\PSoC5/CapSense_Controller.c ****             posCh = (indexCh1 >> 3u);
 755:Generated_Source\PSoC5/CapSense_Controller.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 756:Generated_Source\PSoC5/CapSense_Controller.c ****         } 
 757:Generated_Source\PSoC5/CapSense_Controller.c ****         while((CapSense_Controller_sensorEnableMask[posCh] & enMaskCh) == 0u);
 758:Generated_Source\PSoC5/CapSense_Controller.c ****         
 759:Generated_Source\PSoC5/CapSense_Controller.c ****         indexCh1 -= CapSense_Controller_TOTAL_SENSOR_COUNT__CH0;
 760:Generated_Source\PSoC5/CapSense_Controller.c ****         
 761:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Find the pair to scan */
 762:Generated_Source\PSoC5/CapSense_Controller.c ****         if(indexCh0 == indexCh1)
 763:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 764:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Scans TWO Channels */
 765:Generated_Source\PSoC5/CapSense_Controller.c ****             snsIndex = indexCh0;
 766:Generated_Source\PSoC5/CapSense_Controller.c ****             
 767:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_CONTROL_REG |= (CapSense_Controller_CTRL_WINDOW_EN__CH0 | 
 768:Generated_Source\PSoC5/CapSense_Controller.c ****                                              CapSense_Controller_CTRL_WINDOW_EN__CH1);
 769:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 770:Generated_Source\PSoC5/CapSense_Controller.c ****         else if(indexCh0 < indexCh1)
 771:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 772:Generated_Source\PSoC5/CapSense_Controller.c ****            /* Scans Channel ONE only */
 773:Generated_Source\PSoC5/CapSense_Controller.c ****            snsIndex = indexCh0;
 774:Generated_Source\PSoC5/CapSense_Controller.c ****            
 775:Generated_Source\PSoC5/CapSense_Controller.c ****             newRegValue = CapSense_Controller_CONTROL_REG;
 776:Generated_Source\PSoC5/CapSense_Controller.c ****             newRegValue |= CapSense_Controller_CTRL_WINDOW_EN__CH0;
 777:Generated_Source\PSoC5/CapSense_Controller.c ****             newRegValue &= ~CapSense_Controller_CTRL_WINDOW_EN__CH1;
 778:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_CONTROL_REG = newRegValue;
 779:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 780:Generated_Source\PSoC5/CapSense_Controller.c ****         else
 781:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 782:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Scans Channel TWO only */
 783:Generated_Source\PSoC5/CapSense_Controller.c ****             snsIndex = indexCh1;
 784:Generated_Source\PSoC5/CapSense_Controller.c ****             
 785:Generated_Source\PSoC5/CapSense_Controller.c ****             newRegValue = CapSense_Controller_CONTROL_REG;
 786:Generated_Source\PSoC5/CapSense_Controller.c ****             newRegValue |= CapSense_Controller_CTRL_WINDOW_EN__CH1;
 787:Generated_Source\PSoC5/CapSense_Controller.c ****             newRegValue &= ~CapSense_Controller_CTRL_WINDOW_EN__CH0;
 788:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_CONTROL_REG = newRegValue;
 789:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 790:Generated_Source\PSoC5/CapSense_Controller.c ****         
 791:Generated_Source\PSoC5/CapSense_Controller.c ****         return (snsIndex);
 792:Generated_Source\PSoC5/CapSense_Controller.c ****     }
 793:Generated_Source\PSoC5/CapSense_Controller.c **** #endif  /* CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN */
 794:Generated_Source\PSoC5/CapSense_Controller.c **** 
 795:Generated_Source\PSoC5/CapSense_Controller.c **** 
 796:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
 797:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_SetScanSlotSettings
 798:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
 799:Generated_Source\PSoC5/CapSense_Controller.c **** *
 800:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
 801:Generated_Source\PSoC5/CapSense_Controller.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 802:Generated_Source\PSoC5/CapSense_Controller.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 803:Generated_Source\PSoC5/CapSense_Controller.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 804:Generated_Source\PSoC5/CapSense_Controller.c **** *  widget.
 805:Generated_Source\PSoC5/CapSense_Controller.c **** *
 806:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
 807:Generated_Source\PSoC5/CapSense_Controller.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 808:Generated_Source\PSoC5/CapSense_Controller.c **** *
 809:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
 810:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 26


 811:Generated_Source\PSoC5/CapSense_Controller.c **** *
 812:Generated_Source\PSoC5/CapSense_Controller.c **** * Global Variables:
 813:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_idacSettings[] - used to store idac value for every sensor.
 814:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_widgetResolution[] - used to store scan resolution of every 
 815:Generated_Source\PSoC5/CapSense_Controller.c **** *  widget.
 816:Generated_Source\PSoC5/CapSense_Controller.c **** *
 817:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
 818:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_SetScanSlotSettings(uint8 slot) CYREENTRANT
 819:Generated_Source\PSoC5/CapSense_Controller.c **** {
 615              		.loc 1 819 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 16
 618              		@ frame_needed = 1, uses_anonymous_args = 0
 619 0000 80B5     		push	{r7, lr}
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 7, -8
 622              		.cfi_offset 14, -4
 623 0002 84B0     		sub	sp, sp, #16
 624              		.cfi_def_cfa_offset 24
 625 0004 00AF     		add	r7, sp, #0
 626              		.cfi_def_cfa_register 7
 627 0006 0346     		mov	r3, r0
 628 0008 FB71     		strb	r3, [r7, #7]
 820:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8 widget;
 821:Generated_Source\PSoC5/CapSense_Controller.c ****     
 822:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN)
 823:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Define widget sensor belongs to */
 824:Generated_Source\PSoC5/CapSense_Controller.c ****         widget = CapSense_Controller_widgetNumber[slot];
 629              		.loc 1 824 0
 630 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 631 000c 0B4A     		ldr	r2, .L23
 632 000e D35C     		ldrb	r3, [r2, r3]
 633 0010 FB73     		strb	r3, [r7, #15]
 825:Generated_Source\PSoC5/CapSense_Controller.c ****         
 826:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Set Idac Value */
 827:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_CURRENT_SOURCE)
 828:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_IdacCH0_SetValue(CapSense_Controller_idacSettings[slot]);
 634              		.loc 1 828 0
 635 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 636 0014 0A4A     		ldr	r2, .L23+4
 637 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 638 0018 1846     		mov	r0, r3
 639 001a FFF7FEFF 		bl	CapSense_Controller_IdacCH0_SetValue
 829:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_CURRENT_SOURCE */
 830:Generated_Source\PSoC5/CapSense_Controller.c ****         
 831:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Window PWM */
 832:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATION_F
 833:Generated_Source\PSoC5/CapSense_Controller.c ****             CY_SET_REG16(CapSense_Controller_PWM_CH0_PERIOD_PTR,
 834:Generated_Source\PSoC5/CapSense_Controller.c ****                 ((uint16) CapSense_Controller_widgetResolution[widget] << 8u) | CapSense_Controller
 835:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
 836:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PWM_CH0_PERIOD_HI_REG = CapSense_Controller_widgetResolution[widget
 640              		.loc 1 836 0
 641 001e 094A     		ldr	r2, .L23+8
 642 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 643 0022 0949     		ldr	r1, .L23+12
 644 0024 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 645 0026 1370     		strb	r3, [r2]
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 27


 837:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENT
 838:Generated_Source\PSoC5/CapSense_Controller.c **** 
 839:Generated_Source\PSoC5/CapSense_Controller.c ****         #if ( (CapSense_Controller_MULTIPLE_PRESCALER_ENABLED) || \
 840:Generated_Source\PSoC5/CapSense_Controller.c ****               (CapSense_Controller_TUNING_METHOD == CapSense_Controller_AUTO_TUNING) )
 841:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_SetPrescaler(CapSense_Controller_analogSwitchDivider[slot]);
 646              		.loc 1 841 0
 647 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 648 002a 084A     		ldr	r2, .L23+16
 649 002c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 650 002e 1846     		mov	r0, r3
 651 0030 FFF7FEFF 		bl	CapSense_Controller_SetPrescaler
 842:Generated_Source\PSoC5/CapSense_Controller.c ****         #elif (CapSense_Controller_PRESCALER_OPTIONS)
 843:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_SetPrescaler(CapSense_Controller_analogSwitchDivider);
 844:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif /* ((CapSense_Controller_MULTIPLE_PRESCALER_ENABLED) || \
 845:Generated_Source\PSoC5/CapSense_Controller.c ****                *   (CapSense_Controller_TUNING_METHOD == CapSense_Controller_AUTO_TUNING))
 846:Generated_Source\PSoC5/CapSense_Controller.c ****                */
 847:Generated_Source\PSoC5/CapSense_Controller.c **** 
 848:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 849:Generated_Source\PSoC5/CapSense_Controller.c ****         if(slot < CapSense_Controller_TOTAL_SENSOR_COUNT__CH0)
 850:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 851:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Define widget sensor belongs to */
 852:Generated_Source\PSoC5/CapSense_Controller.c ****             widget = CapSense_Controller_widgetNumber[slot];
 853:Generated_Source\PSoC5/CapSense_Controller.c ****             
 854:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Set Idac Value */
 855:Generated_Source\PSoC5/CapSense_Controller.c ****             #if (CapSense_Controller_CURRENT_SOURCE)
 856:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_IdacCH0_SetValue(CapSense_Controller_idacSettings[slot]);
 857:Generated_Source\PSoC5/CapSense_Controller.c ****             #endif  /* CapSense_Controller_CURRENT_SOURCE */
 858:Generated_Source\PSoC5/CapSense_Controller.c ****             
 859:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Set Pwm Resolution */
 860:Generated_Source\PSoC5/CapSense_Controller.c ****             #if (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATI
 861:Generated_Source\PSoC5/CapSense_Controller.c ****                 CY_SET_REG16(CapSense_Controller_PWM_CH0_PERIOD_PTR,
 862:Generated_Source\PSoC5/CapSense_Controller.c ****                   ((uint16) CapSense_Controller_widgetResolution[widget] << 8u) | CapSense_Controll
 863:Generated_Source\PSoC5/CapSense_Controller.c ****             #else
 864:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_PWM_CH0_PERIOD_HI_REG = CapSense_Controller_widgetResolution[wi
 865:Generated_Source\PSoC5/CapSense_Controller.c ****             #endif  /* (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLE
 866:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 867:Generated_Source\PSoC5/CapSense_Controller.c ****         
 868:Generated_Source\PSoC5/CapSense_Controller.c ****         if(slot < CapSense_Controller_TOTAL_SENSOR_COUNT__CH1)
 869:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 870:Generated_Source\PSoC5/CapSense_Controller.c ****             widget = CapSense_Controller_widgetNumber[slot+CapSense_Controller_TOTAL_SENSOR_COUNT__
 871:Generated_Source\PSoC5/CapSense_Controller.c ****         
 872:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Set Idac Value */
 873:Generated_Source\PSoC5/CapSense_Controller.c ****             #if (CapSense_Controller_CURRENT_SOURCE)
 874:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_IdacCH1_SetValue(CapSense_Controller_idacSettings[slot+
 875:Generated_Source\PSoC5/CapSense_Controller.c ****                                                                              CapSense_Controller_TO
 876:Generated_Source\PSoC5/CapSense_Controller.c ****             #endif  /* CapSense_Controller_CURRENT_SOURCE */
 877:Generated_Source\PSoC5/CapSense_Controller.c ****             
 878:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Set Pwm Resolution */
 879:Generated_Source\PSoC5/CapSense_Controller.c ****             #if (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLEMENTATI
 880:Generated_Source\PSoC5/CapSense_Controller.c ****                 CY_SET_REG16(CapSense_Controller_PWM_CH1_PERIOD_PTR,
 881:Generated_Source\PSoC5/CapSense_Controller.c ****                   ((uint16) CapSense_Controller_widgetResolution[widget] << 8u) | CapSense_Controll
 882:Generated_Source\PSoC5/CapSense_Controller.c ****             #else
 883:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_PWM_CH1_PERIOD_HI_REG = CapSense_Controller_widgetResolution[wi
 884:Generated_Source\PSoC5/CapSense_Controller.c ****             #endif  /* (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLE
 885:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 886:Generated_Source\PSoC5/CapSense_Controller.c **** 
 887:Generated_Source\PSoC5/CapSense_Controller.c ****         #if ( (CapSense_Controller_MULTIPLE_PRESCALER_ENABLED) || \
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 28


 888:Generated_Source\PSoC5/CapSense_Controller.c ****               (CapSense_Controller_TUNING_METHOD == CapSense_Controller_AUTO_TUNING) )
 889:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_SetPrescaler(CapSense_Controller_analogSwitchDivider[slot]);
 890:Generated_Source\PSoC5/CapSense_Controller.c ****         #elif (CapSense_Controller_PRESCALER_OPTIONS)
 891:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_SetPrescaler(CapSense_Controller_analogSwitchDivider);
 892:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif /* ((CapSense_Controller_MULTIPLE_PRESCALER_ENABLED) || \
 893:Generated_Source\PSoC5/CapSense_Controller.c ****                *   (CapSense_Controller_TUNING_METHOD == CapSense_Controller_AUTO_TUNING))
 894:Generated_Source\PSoC5/CapSense_Controller.c ****                */
 895:Generated_Source\PSoC5/CapSense_Controller.c **** 
 896:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */
 897:Generated_Source\PSoC5/CapSense_Controller.c **** }
 652              		.loc 1 897 0
 653 0034 00BF     		nop
 654 0036 1037     		adds	r7, r7, #16
 655              		.cfi_def_cfa_offset 8
 656 0038 BD46     		mov	sp, r7
 657              		.cfi_def_cfa_register 13
 658              		@ sp needed
 659 003a 80BD     		pop	{r7, pc}
 660              	.L24:
 661              		.align	2
 662              	.L23:
 663 003c 00000000 		.word	CapSense_Controller_widgetNumber
 664 0040 00000000 		.word	CapSense_Controller_idacSettings
 665 0044 57650040 		.word	1073767767
 666 0048 00000000 		.word	CapSense_Controller_widgetResolution
 667 004c 00000000 		.word	CapSense_Controller_analogSwitchDivider
 668              		.cfi_endproc
 669              	.LFE5:
 670              		.size	CapSense_Controller_SetScanSlotSettings, .-CapSense_Controller_SetScanSlotSettings
 671              		.section	.text.CapSense_Controller_ScanSensor,"ax",%progbits
 672              		.align	2
 673              		.global	CapSense_Controller_ScanSensor
 674              		.thumb
 675              		.thumb_func
 676              		.type	CapSense_Controller_ScanSensor, %function
 677              	CapSense_Controller_ScanSensor:
 678              	.LFB6:
 898:Generated_Source\PSoC5/CapSense_Controller.c **** 
 899:Generated_Source\PSoC5/CapSense_Controller.c **** 
 900:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
 901:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_ScanSensor
 902:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
 903:Generated_Source\PSoC5/CapSense_Controller.c **** *
 904:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
 905:Generated_Source\PSoC5/CapSense_Controller.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 906:Generated_Source\PSoC5/CapSense_Controller.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 907:Generated_Source\PSoC5/CapSense_Controller.c **** *  at the same time. After scanning is complete the isr copies the measured 
 908:Generated_Source\PSoC5/CapSense_Controller.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 909:Generated_Source\PSoC5/CapSense_Controller.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 910:Generated_Source\PSoC5/CapSense_Controller.c **** *  This number is assigned by the CapSense customizer in sequence.
 911:Generated_Source\PSoC5/CapSense_Controller.c **** *
 912:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
 913:Generated_Source\PSoC5/CapSense_Controller.c **** *  sensor:  Sensor number.
 914:Generated_Source\PSoC5/CapSense_Controller.c **** *
 915:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
 916:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
 917:Generated_Source\PSoC5/CapSense_Controller.c **** *
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 29


 918:Generated_Source\PSoC5/CapSense_Controller.c **** * Global Variables:
 919:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_csv - used to provide status and mode of scanning process. 
 920:Generated_Source\PSoC5/CapSense_Controller.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 921:Generated_Source\PSoC5/CapSense_Controller.c **** *  For two channel design the additional bits are set to define if scan a 
 922:Generated_Source\PSoC5/CapSense_Controller.c **** *  pair of sensors or single one.
 923:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_sensorIndex - used to store sensor scanning sensor number.
 924:Generated_Source\PSoC5/CapSense_Controller.c **** *  Sets to provided sensor argument.
 925:Generated_Source\PSoC5/CapSense_Controller.c **** *
 926:Generated_Source\PSoC5/CapSense_Controller.c **** * Reentrant:
 927:Generated_Source\PSoC5/CapSense_Controller.c **** *  No
 928:Generated_Source\PSoC5/CapSense_Controller.c **** *
 929:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
 930:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_ScanSensor(uint8 sensor)  
 931:Generated_Source\PSoC5/CapSense_Controller.c **** {
 679              		.loc 1 931 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 8
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683 0000 80B5     		push	{r7, lr}
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 82B0     		sub	sp, sp, #8
 688              		.cfi_def_cfa_offset 16
 689 0004 00AF     		add	r7, sp, #0
 690              		.cfi_def_cfa_register 7
 691 0006 0346     		mov	r3, r0
 692 0008 FB71     		strb	r3, [r7, #7]
 932:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Clears status/control variable and set sensorIndex */
 933:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_csv = 0u;
 693              		.loc 1 933 0
 694 000a 084B     		ldr	r3, .L26
 695 000c 0022     		movs	r2, #0
 696 000e 1A70     		strb	r2, [r3]
 934:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_sensorIndex = sensor;
 697              		.loc 1 934 0
 698 0010 074A     		ldr	r2, .L26+4
 699 0012 FB79     		ldrb	r3, [r7, #7]
 700 0014 1370     		strb	r3, [r2]
 935:Generated_Source\PSoC5/CapSense_Controller.c ****     
 936:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN)
 937:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Start of sensor scan */
 938:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_csv = (CapSense_Controller_SW_STS_BUSY | CapSense_Controller_SW_CTRL_SI
 701              		.loc 1 938 0
 702 0016 054B     		ldr	r3, .L26
 703 0018 8122     		movs	r2, #129
 704 001a 1A70     		strb	r2, [r3]
 939:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PreScan(sensor);
 705              		.loc 1 939 0
 706 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 707 001e 1846     		mov	r0, r3
 708 0020 FFF7FEFF 		bl	CapSense_Controller_PreScan
 940:Generated_Source\PSoC5/CapSense_Controller.c ****         
 941:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
 942:Generated_Source\PSoC5/CapSense_Controller.c ****         /* CH0: check end of scan conditions */
 943:Generated_Source\PSoC5/CapSense_Controller.c ****         if(sensor < CapSense_Controller_TOTAL_SENSOR_COUNT__CH0)
 944:Generated_Source\PSoC5/CapSense_Controller.c ****         {
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 30


 945:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_CONTROL_REG |= CapSense_Controller_CTRL_WINDOW_EN__CH0;
 946:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 947:Generated_Source\PSoC5/CapSense_Controller.c ****         else
 948:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 949:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_CONTROL_REG &= ~CapSense_Controller_CTRL_WINDOW_EN__CH0;
 950:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 951:Generated_Source\PSoC5/CapSense_Controller.c ****         
 952:Generated_Source\PSoC5/CapSense_Controller.c ****         /* CH1: check end of scan conditions */
 953:Generated_Source\PSoC5/CapSense_Controller.c ****         if(sensor < CapSense_Controller_TOTAL_SENSOR_COUNT__CH1)
 954:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 955:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_CONTROL_REG |= CapSense_Controller_CTRL_WINDOW_EN__CH1;
 956:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 957:Generated_Source\PSoC5/CapSense_Controller.c ****         else
 958:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 959:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_CONTROL_REG &= ~CapSense_Controller_CTRL_WINDOW_EN__CH1;
 960:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 961:Generated_Source\PSoC5/CapSense_Controller.c ****         
 962:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Start sensor scan */
 963:Generated_Source\PSoC5/CapSense_Controller.c ****         if( ((CapSense_Controller_CONTROL_REG & CapSense_Controller_CTRL_WINDOW_EN__CH0) != 0u) || 
 964:Generated_Source\PSoC5/CapSense_Controller.c ****             ((CapSense_Controller_CONTROL_REG & CapSense_Controller_CTRL_WINDOW_EN__CH1) != 0u) )
 965:Generated_Source\PSoC5/CapSense_Controller.c ****         {
 966:Generated_Source\PSoC5/CapSense_Controller.c ****         
 967:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_csv |= (CapSense_Controller_SW_STS_BUSY | CapSense_Controller_SW_CT
 968:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PreScan(sensor);
 969:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 970:Generated_Source\PSoC5/CapSense_Controller.c ****         
 971:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */
 972:Generated_Source\PSoC5/CapSense_Controller.c **** }
 709              		.loc 1 972 0
 710 0024 00BF     		nop
 711 0026 0837     		adds	r7, r7, #8
 712              		.cfi_def_cfa_offset 8
 713 0028 BD46     		mov	sp, r7
 714              		.cfi_def_cfa_register 13
 715              		@ sp needed
 716 002a 80BD     		pop	{r7, pc}
 717              	.L27:
 718              		.align	2
 719              	.L26:
 720 002c 00000000 		.word	CapSense_Controller_csv
 721 0030 00000000 		.word	CapSense_Controller_sensorIndex
 722              		.cfi_endproc
 723              	.LFE6:
 724              		.size	CapSense_Controller_ScanSensor, .-CapSense_Controller_ScanSensor
 725              		.section	.text.CapSense_Controller_ScanEnabledWidgets,"ax",%progbits
 726              		.align	2
 727              		.global	CapSense_Controller_ScanEnabledWidgets
 728              		.thumb
 729              		.thumb_func
 730              		.type	CapSense_Controller_ScanEnabledWidgets, %function
 731              	CapSense_Controller_ScanEnabledWidgets:
 732              	.LFB7:
 973:Generated_Source\PSoC5/CapSense_Controller.c **** 
 974:Generated_Source\PSoC5/CapSense_Controller.c **** 
 975:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
 976:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_ScanEnableWidgets
 977:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 31


 978:Generated_Source\PSoC5/CapSense_Controller.c **** *
 979:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
 980:Generated_Source\PSoC5/CapSense_Controller.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 981:Generated_Source\PSoC5/CapSense_Controller.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 982:Generated_Source\PSoC5/CapSense_Controller.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 983:Generated_Source\PSoC5/CapSense_Controller.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 984:Generated_Source\PSoC5/CapSense_Controller.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 985:Generated_Source\PSoC5/CapSense_Controller.c **** *  incompatible with fast response desired of other widget types.
 986:Generated_Source\PSoC5/CapSense_Controller.c **** *
 987:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
 988:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
 989:Generated_Source\PSoC5/CapSense_Controller.c **** *
 990:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
 991:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
 992:Generated_Source\PSoC5/CapSense_Controller.c **** *
 993:Generated_Source\PSoC5/CapSense_Controller.c **** * Global Variables:
 994:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_csv - used to provide status and mode of scanning process. 
 995:Generated_Source\PSoC5/CapSense_Controller.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 996:Generated_Source\PSoC5/CapSense_Controller.c **** *  For two channel design the additional bits are set to define if scan a 
 997:Generated_Source\PSoC5/CapSense_Controller.c **** *  pair of sensors or single one. 
 998:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_sensorIndex - used to store sensor scanning sensor number.
 999:Generated_Source\PSoC5/CapSense_Controller.c **** *  Sets to 0xFF and provided to function CapSense_Controller_FindNextSensor or
1000:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_FindNextPair, these functions starts with sensor index
1001:Generated_Source\PSoC5/CapSense_Controller.c **** *  increment and overflow of uint8 gives desired index 0.
1002:Generated_Source\PSoC5/CapSense_Controller.c **** *
1003:Generated_Source\PSoC5/CapSense_Controller.c **** * Reentrant:
1004:Generated_Source\PSoC5/CapSense_Controller.c **** *  No
1005:Generated_Source\PSoC5/CapSense_Controller.c **** *
1006:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
1007:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_ScanEnabledWidgets(void) 
1008:Generated_Source\PSoC5/CapSense_Controller.c **** {
 733              		.loc 1 1008 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737 0000 80B5     		push	{r7, lr}
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 7, -8
 740              		.cfi_offset 14, -4
 741 0002 00AF     		add	r7, sp, #0
 742              		.cfi_def_cfa_register 7
1009:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Clears status/control variable and set sensorIndex */
1010:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_csv = 0u;
 743              		.loc 1 1010 0
 744 0004 124B     		ldr	r3, .L31
 745 0006 0022     		movs	r2, #0
 746 0008 1A70     		strb	r2, [r3]
1011:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_sensorIndex = 0xFFu;
 747              		.loc 1 1011 0
 748 000a 124B     		ldr	r3, .L31+4
 749 000c FF22     		movs	r2, #255
 750 000e 1A70     		strb	r2, [r3]
1012:Generated_Source\PSoC5/CapSense_Controller.c ****     
1013:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN)
1014:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Find next sensor */
1015:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_sensorIndex = CapSense_Controller_FindNextSensor(CapSense_Controller_se
 751              		.loc 1 1015 0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 32


 752 0010 104B     		ldr	r3, .L31+4
 753 0012 1B78     		ldrb	r3, [r3]
 754 0014 DBB2     		uxtb	r3, r3
 755 0016 1846     		mov	r0, r3
 756 0018 FFF7FEFF 		bl	CapSense_Controller_FindNextSensor
 757 001c 0346     		mov	r3, r0
 758 001e 1A46     		mov	r2, r3
 759 0020 0C4B     		ldr	r3, .L31+4
 760 0022 1A70     		strb	r2, [r3]
1016:Generated_Source\PSoC5/CapSense_Controller.c **** 
1017:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Check end of scan condition */
1018:Generated_Source\PSoC5/CapSense_Controller.c ****         if(CapSense_Controller_sensorIndex < CapSense_Controller_TOTAL_SENSOR_COUNT)
 761              		.loc 1 1018 0
 762 0024 0B4B     		ldr	r3, .L31+4
 763 0026 1B78     		ldrb	r3, [r3]
 764 0028 DBB2     		uxtb	r3, r3
 765 002a 032B     		cmp	r3, #3
 766 002c 0DD8     		bhi	.L30
1019:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1020:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_csv |= CapSense_Controller_SW_STS_BUSY;
 767              		.loc 1 1020 0
 768 002e 084B     		ldr	r3, .L31
 769 0030 1B78     		ldrb	r3, [r3]
 770 0032 DBB2     		uxtb	r3, r3
 771 0034 43F00103 		orr	r3, r3, #1
 772 0038 DAB2     		uxtb	r2, r3
 773 003a 054B     		ldr	r3, .L31
 774 003c 1A70     		strb	r2, [r3]
1021:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PreScan(CapSense_Controller_sensorIndex);
 775              		.loc 1 1021 0
 776 003e 054B     		ldr	r3, .L31+4
 777 0040 1B78     		ldrb	r3, [r3]
 778 0042 DBB2     		uxtb	r3, r3
 779 0044 1846     		mov	r0, r3
 780 0046 FFF7FEFF 		bl	CapSense_Controller_PreScan
 781              	.L30:
1022:Generated_Source\PSoC5/CapSense_Controller.c ****         }
1023:Generated_Source\PSoC5/CapSense_Controller.c ****         
1024:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
1025:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Find next sensor and set proper control register */
1026:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_sensorIndex = CapSense_Controller_FindNextPair(CapSense_Controller_sens
1027:Generated_Source\PSoC5/CapSense_Controller.c ****         
1028:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Start sensor scan */
1029:Generated_Source\PSoC5/CapSense_Controller.c ****         if((CapSense_Controller_sensorIndex < CapSense_Controller_TOTAL_SENSOR_COUNT__CH0) || 
1030:Generated_Source\PSoC5/CapSense_Controller.c ****            (CapSense_Controller_sensorIndex < CapSense_Controller_TOTAL_SENSOR_COUNT__CH1))
1031:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1032:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_csv |= CapSense_Controller_SW_STS_BUSY;
1033:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PreScan(CapSense_Controller_sensorIndex);
1034:Generated_Source\PSoC5/CapSense_Controller.c ****         }
1035:Generated_Source\PSoC5/CapSense_Controller.c ****         
1036:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */
1037:Generated_Source\PSoC5/CapSense_Controller.c **** }
 782              		.loc 1 1037 0
 783 004a 00BF     		nop
 784 004c 80BD     		pop	{r7, pc}
 785              	.L32:
 786 004e 00BF     		.align	2
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 33


 787              	.L31:
 788 0050 00000000 		.word	CapSense_Controller_csv
 789 0054 00000000 		.word	CapSense_Controller_sensorIndex
 790              		.cfi_endproc
 791              	.LFE7:
 792              		.size	CapSense_Controller_ScanEnabledWidgets, .-CapSense_Controller_ScanEnabledWidgets
 793              		.section	.text.CapSense_Controller_IsBusy,"ax",%progbits
 794              		.align	2
 795              		.global	CapSense_Controller_IsBusy
 796              		.thumb
 797              		.thumb_func
 798              		.type	CapSense_Controller_IsBusy, %function
 799              	CapSense_Controller_IsBusy:
 800              	.LFB8:
1038:Generated_Source\PSoC5/CapSense_Controller.c **** 
1039:Generated_Source\PSoC5/CapSense_Controller.c **** 
1040:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
1041:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_IsBusy
1042:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
1043:Generated_Source\PSoC5/CapSense_Controller.c **** *
1044:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
1045:Generated_Source\PSoC5/CapSense_Controller.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1046:Generated_Source\PSoC5/CapSense_Controller.c **** *  progress and 0 means that scanning is complete.
1047:Generated_Source\PSoC5/CapSense_Controller.c **** *
1048:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
1049:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
1050:Generated_Source\PSoC5/CapSense_Controller.c **** *
1051:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
1052:Generated_Source\PSoC5/CapSense_Controller.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1053:Generated_Source\PSoC5/CapSense_Controller.c **** *  completed.
1054:Generated_Source\PSoC5/CapSense_Controller.c **** *
1055:Generated_Source\PSoC5/CapSense_Controller.c **** * Global Variables:
1056:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_csv - used to provide status and mode of scanning process. 
1057:Generated_Source\PSoC5/CapSense_Controller.c **** *  Checks the busy status.
1058:Generated_Source\PSoC5/CapSense_Controller.c **** *
1059:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
1060:Generated_Source\PSoC5/CapSense_Controller.c **** uint8 CapSense_Controller_IsBusy(void) 
1061:Generated_Source\PSoC5/CapSense_Controller.c **** {
 801              		.loc 1 1061 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806 0000 80B4     		push	{r7}
 807              		.cfi_def_cfa_offset 4
 808              		.cfi_offset 7, -4
 809 0002 00AF     		add	r7, sp, #0
 810              		.cfi_def_cfa_register 7
1062:Generated_Source\PSoC5/CapSense_Controller.c ****     return ((0u != (CapSense_Controller_csv & CapSense_Controller_SW_STS_BUSY)) ? 1u : 0u);
 811              		.loc 1 1062 0
 812 0004 044B     		ldr	r3, .L35
 813 0006 1B78     		ldrb	r3, [r3]
 814 0008 DBB2     		uxtb	r3, r3
 815 000a 03F00103 		and	r3, r3, #1
 816 000e DBB2     		uxtb	r3, r3
1063:Generated_Source\PSoC5/CapSense_Controller.c **** }
 817              		.loc 1 1063 0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 34


 818 0010 1846     		mov	r0, r3
 819 0012 BD46     		mov	sp, r7
 820              		.cfi_def_cfa_register 13
 821              		@ sp needed
 822 0014 80BC     		pop	{r7}
 823              		.cfi_restore 7
 824              		.cfi_def_cfa_offset 0
 825 0016 7047     		bx	lr
 826              	.L36:
 827              		.align	2
 828              	.L35:
 829 0018 00000000 		.word	CapSense_Controller_csv
 830              		.cfi_endproc
 831              	.LFE8:
 832              		.size	CapSense_Controller_IsBusy, .-CapSense_Controller_IsBusy
 833              		.section	.text.CapSense_Controller_ReadSensorRaw,"ax",%progbits
 834              		.align	2
 835              		.global	CapSense_Controller_ReadSensorRaw
 836              		.thumb
 837              		.thumb_func
 838              		.type	CapSense_Controller_ReadSensorRaw, %function
 839              	CapSense_Controller_ReadSensorRaw:
 840              	.LFB9:
1064:Generated_Source\PSoC5/CapSense_Controller.c **** 
1065:Generated_Source\PSoC5/CapSense_Controller.c **** 
1066:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
1067:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_ReadSensorRaw
1068:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
1069:Generated_Source\PSoC5/CapSense_Controller.c **** *
1070:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
1071:Generated_Source\PSoC5/CapSense_Controller.c **** *  Returns scan sensor raw data from the CapSense_Controller_sensorRaw[] array. 
1072:Generated_Source\PSoC5/CapSense_Controller.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1073:Generated_Source\PSoC5/CapSense_Controller.c **** *  is assigned by the CapSense customizer in sequence.
1074:Generated_Source\PSoC5/CapSense_Controller.c **** *
1075:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
1076:Generated_Source\PSoC5/CapSense_Controller.c **** *  sensor:  Sensor number.
1077:Generated_Source\PSoC5/CapSense_Controller.c **** *
1078:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
1079:Generated_Source\PSoC5/CapSense_Controller.c **** *  Returns current raw data value for defined sensor number.
1080:Generated_Source\PSoC5/CapSense_Controller.c **** *
1081:Generated_Source\PSoC5/CapSense_Controller.c **** * Global Variables:
1082:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_sensorRaw[] - used to store sensors raw data.
1083:Generated_Source\PSoC5/CapSense_Controller.c **** *
1084:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
1085:Generated_Source\PSoC5/CapSense_Controller.c **** uint16 CapSense_Controller_ReadSensorRaw(uint8 sensor) 
1086:Generated_Source\PSoC5/CapSense_Controller.c **** {
 841              		.loc 1 1086 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 8
 844              		@ frame_needed = 1, uses_anonymous_args = 0
 845              		@ link register save eliminated.
 846 0000 80B4     		push	{r7}
 847              		.cfi_def_cfa_offset 4
 848              		.cfi_offset 7, -4
 849 0002 83B0     		sub	sp, sp, #12
 850              		.cfi_def_cfa_offset 16
 851 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 35


 852              		.cfi_def_cfa_register 7
 853 0006 0346     		mov	r3, r0
 854 0008 FB71     		strb	r3, [r7, #7]
1087:Generated_Source\PSoC5/CapSense_Controller.c ****     return (CapSense_Controller_sensorRaw[sensor]);
 855              		.loc 1 1087 0
 856 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 857 000c 034A     		ldr	r2, .L39
 858 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1088:Generated_Source\PSoC5/CapSense_Controller.c **** }
 859              		.loc 1 1088 0
 860 0012 1846     		mov	r0, r3
 861 0014 0C37     		adds	r7, r7, #12
 862              		.cfi_def_cfa_offset 4
 863 0016 BD46     		mov	sp, r7
 864              		.cfi_def_cfa_register 13
 865              		@ sp needed
 866 0018 80BC     		pop	{r7}
 867              		.cfi_restore 7
 868              		.cfi_def_cfa_offset 0
 869 001a 7047     		bx	lr
 870              	.L40:
 871              		.align	2
 872              	.L39:
 873 001c 00000000 		.word	CapSense_Controller_sensorRaw
 874              		.cfi_endproc
 875              	.LFE9:
 876              		.size	CapSense_Controller_ReadSensorRaw, .-CapSense_Controller_ReadSensorRaw
 877              		.section	.text.CapSense_Controller_ClearSensors,"ax",%progbits
 878              		.align	2
 879              		.global	CapSense_Controller_ClearSensors
 880              		.thumb
 881              		.thumb_func
 882              		.type	CapSense_Controller_ClearSensors, %function
 883              	CapSense_Controller_ClearSensors:
 884              	.LFB10:
1089:Generated_Source\PSoC5/CapSense_Controller.c **** 
1090:Generated_Source\PSoC5/CapSense_Controller.c **** 
1091:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
1092:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_ClearSensors
1093:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
1094:Generated_Source\PSoC5/CapSense_Controller.c **** *
1095:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
1096:Generated_Source\PSoC5/CapSense_Controller.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1097:Generated_Source\PSoC5/CapSense_Controller.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1098:Generated_Source\PSoC5/CapSense_Controller.c **** *
1099:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
1100:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
1101:Generated_Source\PSoC5/CapSense_Controller.c **** *
1102:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
1103:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
1104:Generated_Source\PSoC5/CapSense_Controller.c **** *
1105:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
1106:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_ClearSensors(void) 
1107:Generated_Source\PSoC5/CapSense_Controller.c **** {
 885              		.loc 1 1107 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 36


 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889 0000 80B5     		push	{r7, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 7, -8
 892              		.cfi_offset 14, -4
 893 0002 82B0     		sub	sp, sp, #8
 894              		.cfi_def_cfa_offset 16
 895 0004 00AF     		add	r7, sp, #0
 896              		.cfi_def_cfa_register 7
1108:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8 i;
1109:Generated_Source\PSoC5/CapSense_Controller.c ****    
1110:Generated_Source\PSoC5/CapSense_Controller.c ****     for (i = 0u; i < CapSense_Controller_TOTAL_SENSOR_COUNT; i++)
 897              		.loc 1 1110 0
 898 0006 0023     		movs	r3, #0
 899 0008 FB71     		strb	r3, [r7, #7]
 900 000a 06E0     		b	.L42
 901              	.L43:
1111:Generated_Source\PSoC5/CapSense_Controller.c ****     {
1112:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_DisableScanSlot(i);
 902              		.loc 1 1112 0 discriminator 3
 903 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 904 000e 1846     		mov	r0, r3
 905 0010 FFF7FEFF 		bl	CapSense_Controller_DisableSensor
1110:Generated_Source\PSoC5/CapSense_Controller.c ****     {
 906              		.loc 1 1110 0 discriminator 3
 907 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 908 0016 0133     		adds	r3, r3, #1
 909 0018 FB71     		strb	r3, [r7, #7]
 910              	.L42:
1110:Generated_Source\PSoC5/CapSense_Controller.c ****     {
 911              		.loc 1 1110 0 is_stmt 0 discriminator 1
 912 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 913 001c 032B     		cmp	r3, #3
 914 001e F5D9     		bls	.L43
1113:Generated_Source\PSoC5/CapSense_Controller.c ****     }
1114:Generated_Source\PSoC5/CapSense_Controller.c **** }
 915              		.loc 1 1114 0 is_stmt 1
 916 0020 00BF     		nop
 917 0022 0837     		adds	r7, r7, #8
 918              		.cfi_def_cfa_offset 8
 919 0024 BD46     		mov	sp, r7
 920              		.cfi_def_cfa_register 13
 921              		@ sp needed
 922 0026 80BD     		pop	{r7, pc}
 923              		.cfi_endproc
 924              	.LFE10:
 925              		.size	CapSense_Controller_ClearSensors, .-CapSense_Controller_ClearSensors
 926              		.section	.text.CapSense_Controller_EnableSensor,"ax",%progbits
 927              		.align	2
 928              		.global	CapSense_Controller_EnableSensor
 929              		.thumb
 930              		.thumb_func
 931              		.type	CapSense_Controller_EnableSensor, %function
 932              	CapSense_Controller_EnableSensor:
 933              	.LFB11:
1115:Generated_Source\PSoC5/CapSense_Controller.c **** 
1116:Generated_Source\PSoC5/CapSense_Controller.c **** 
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 37


1117:Generated_Source\PSoC5/CapSense_Controller.c **** #if (CapSense_Controller_IS_COMPLEX_SCANSLOTS)
1118:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
1119:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name: CapSense_Controller_EnableScanSlot
1120:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
1121:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1122:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
1123:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Configures the selected slot to measure during the next measurement 
1124:Generated_Source\PSoC5/CapSense_Controller.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1125:Generated_Source\PSoC5/CapSense_Controller.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1126:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1127:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
1128:Generated_Source\PSoC5/CapSense_Controller.c ****     *  slot:  Slot number.
1129:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1130:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
1131:Generated_Source\PSoC5/CapSense_Controller.c ****     *  None
1132:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1133:Generated_Source\PSoC5/CapSense_Controller.c ****     * Global Constants:
1134:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_portTable[]  - used to store the port number that pin 
1135:Generated_Source\PSoC5/CapSense_Controller.c ****     *  belongs to for every sensor.
1136:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_maskTable[]  - used to store the pin within the port for 
1137:Generated_Source\PSoC5/CapSense_Controller.c ****     *  every sensor.
1138:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_indexTable[] - used to store indexes of complex sensors.
1139:Generated_Source\PSoC5/CapSense_Controller.c ****     *  The offset and position in this array are stored in port and mask table for 
1140:Generated_Source\PSoC5/CapSense_Controller.c ****     *  complex sensors.
1141:Generated_Source\PSoC5/CapSense_Controller.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1142:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1143:Generated_Source\PSoC5/CapSense_Controller.c ****     *******************************************************************************/
1144:Generated_Source\PSoC5/CapSense_Controller.c ****     void CapSense_Controller_EnableScanSlot(uint8 slot) CYREENTRANT
1145:Generated_Source\PSoC5/CapSense_Controller.c ****     {
1146:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 j;
1147:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 snsNumber;
1148:Generated_Source\PSoC5/CapSense_Controller.c ****         const uint8 CYCODE *index;
1149:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Read the sensor type: single or complex */
1150:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 snsType = CapSense_Controller_portTable[slot];
1151:Generated_Source\PSoC5/CapSense_Controller.c ****         
1152:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Check if sensor is complex */
1153:Generated_Source\PSoC5/CapSense_Controller.c ****         if ((snsType & CapSense_Controller_COMPLEX_SS_FLAG) == 0u)
1154:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1155:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Enable sensor (signle) */
1156:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_EnableSensor(slot);
1157:Generated_Source\PSoC5/CapSense_Controller.c ****         }
1158:Generated_Source\PSoC5/CapSense_Controller.c ****         else
1159:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1160:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Enable complex sensor */
1161:Generated_Source\PSoC5/CapSense_Controller.c ****             snsType &= ~CapSense_Controller_COMPLEX_SS_FLAG;
1162:Generated_Source\PSoC5/CapSense_Controller.c ****             index = &CapSense_Controller_indexTable[snsType];
1163:Generated_Source\PSoC5/CapSense_Controller.c ****             snsNumber = CapSense_Controller_maskTable[slot];
1164:Generated_Source\PSoC5/CapSense_Controller.c ****                         
1165:Generated_Source\PSoC5/CapSense_Controller.c ****             for (j=0u; j < snsNumber; j++)
1166:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1167:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_EnableSensor(index[j]);
1168:Generated_Source\PSoC5/CapSense_Controller.c ****             }
1169:Generated_Source\PSoC5/CapSense_Controller.c ****         } 
1170:Generated_Source\PSoC5/CapSense_Controller.c ****     }
1171:Generated_Source\PSoC5/CapSense_Controller.c ****     
1172:Generated_Source\PSoC5/CapSense_Controller.c ****     
1173:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 38


1174:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name: CapSense_Controller_DisableScanSlot
1175:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
1176:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1177:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
1178:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1179:Generated_Source\PSoC5/CapSense_Controller.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1180:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1181:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
1182:Generated_Source\PSoC5/CapSense_Controller.c ****     *  slot:  Slot number.
1183:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1184:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
1185:Generated_Source\PSoC5/CapSense_Controller.c ****     *  None
1186:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1187:Generated_Source\PSoC5/CapSense_Controller.c ****     * Global Variables:
1188:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_portTable[]  - used to store the port number that pin 
1189:Generated_Source\PSoC5/CapSense_Controller.c ****     *  belongs to for every sensor.
1190:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_maskTable[]  - used to store the pin within the port for 
1191:Generated_Source\PSoC5/CapSense_Controller.c ****     *  every sensor.
1192:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_indexTable[] - used to store indexes of complex sensors.
1193:Generated_Source\PSoC5/CapSense_Controller.c ****     *  The offset and position in this array are stored in port and mask table for 
1194:Generated_Source\PSoC5/CapSense_Controller.c ****     *  complex sensors.
1195:Generated_Source\PSoC5/CapSense_Controller.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1196:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1197:Generated_Source\PSoC5/CapSense_Controller.c ****     *******************************************************************************/
1198:Generated_Source\PSoC5/CapSense_Controller.c ****     void CapSense_Controller_DisableScanSlot(uint8 slot) CYREENTRANT
1199:Generated_Source\PSoC5/CapSense_Controller.c ****     {
1200:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 j;
1201:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 snsNumber;
1202:Generated_Source\PSoC5/CapSense_Controller.c ****         const uint8 CYCODE *index;
1203:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Read the sensor type: single or complex */
1204:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 snsType = CapSense_Controller_portTable[slot];
1205:Generated_Source\PSoC5/CapSense_Controller.c ****         
1206:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Check if sensor is complex */
1207:Generated_Source\PSoC5/CapSense_Controller.c ****         if ((snsType & CapSense_Controller_COMPLEX_SS_FLAG) == 0u)
1208:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1209:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Disable sensor (signle) */
1210:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_DisableSensor(slot);
1211:Generated_Source\PSoC5/CapSense_Controller.c ****         }
1212:Generated_Source\PSoC5/CapSense_Controller.c ****         else
1213:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1214:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Disable complex sensor */
1215:Generated_Source\PSoC5/CapSense_Controller.c ****             snsType &= ~CapSense_Controller_COMPLEX_SS_FLAG;
1216:Generated_Source\PSoC5/CapSense_Controller.c ****             index = &CapSense_Controller_indexTable[snsType];
1217:Generated_Source\PSoC5/CapSense_Controller.c ****             snsNumber = CapSense_Controller_maskTable[slot];
1218:Generated_Source\PSoC5/CapSense_Controller.c ****                         
1219:Generated_Source\PSoC5/CapSense_Controller.c ****             for (j=0u; j < snsNumber; j++)
1220:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1221:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_DisableSensor(index[j]);
1222:Generated_Source\PSoC5/CapSense_Controller.c ****             }
1223:Generated_Source\PSoC5/CapSense_Controller.c ****         } 
1224:Generated_Source\PSoC5/CapSense_Controller.c ****     }
1225:Generated_Source\PSoC5/CapSense_Controller.c **** #endif  /* CapSense_Controller_IS_COMPLEX_SCANSLOTS */
1226:Generated_Source\PSoC5/CapSense_Controller.c **** 
1227:Generated_Source\PSoC5/CapSense_Controller.c **** 
1228:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
1229:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_EnableSensor
1230:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 39


1231:Generated_Source\PSoC5/CapSense_Controller.c **** *
1232:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
1233:Generated_Source\PSoC5/CapSense_Controller.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1234:Generated_Source\PSoC5/CapSense_Controller.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1235:Generated_Source\PSoC5/CapSense_Controller.c **** *  Analog Mux Bus. This also enables the comparator function.
1236:Generated_Source\PSoC5/CapSense_Controller.c **** *
1237:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
1238:Generated_Source\PSoC5/CapSense_Controller.c **** *  sensor:  Sensor number.
1239:Generated_Source\PSoC5/CapSense_Controller.c **** *
1240:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
1241:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
1242:Generated_Source\PSoC5/CapSense_Controller.c **** *
1243:Generated_Source\PSoC5/CapSense_Controller.c **** * Global Variables:
1244:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_portTable[] - used to store the port number that pin 
1245:Generated_Source\PSoC5/CapSense_Controller.c **** *  belongs to for every sensor.
1246:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_maskTable[] - used to store the pin within the port for 
1247:Generated_Source\PSoC5/CapSense_Controller.c **** *  every sensor.
1248:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_csTable[]   - used to store the pointers to CAPS_SEL 
1249:Generated_Source\PSoC5/CapSense_Controller.c **** *  registers for every port.
1250:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_pcTable[]   - used to store the pointers to PC pin 
1251:Generated_Source\PSoC5/CapSense_Controller.c **** *  register for every sensor.
1252:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_amuxIndex[] - used to store corrected AMUX index when 
1253:Generated_Source\PSoC5/CapSense_Controller.c **** *  complex sensors are defeined.
1254:Generated_Source\PSoC5/CapSense_Controller.c **** *
1255:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
1256:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_EnableSensor(uint8 sensor) CYREENTRANT
1257:Generated_Source\PSoC5/CapSense_Controller.c **** {
 934              		.loc 1 1257 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 16
 937              		@ frame_needed = 1, uses_anonymous_args = 0
 938 0000 80B5     		push	{r7, lr}
 939              		.cfi_def_cfa_offset 8
 940              		.cfi_offset 7, -8
 941              		.cfi_offset 14, -4
 942 0002 84B0     		sub	sp, sp, #16
 943              		.cfi_def_cfa_offset 24
 944 0004 00AF     		add	r7, sp, #0
 945              		.cfi_def_cfa_register 7
 946 0006 0346     		mov	r3, r0
 947 0008 FB71     		strb	r3, [r7, #7]
1258:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8 port = CapSense_Controller_portTable[sensor];
 948              		.loc 1 1258 0
 949 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 950 000c 134A     		ldr	r2, .L46
 951 000e D35C     		ldrb	r3, [r2, r3]
 952 0010 FB73     		strb	r3, [r7, #15]
1259:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8 mask = CapSense_Controller_maskTable[sensor];
 953              		.loc 1 1259 0
 954 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 955 0014 124A     		ldr	r2, .L46+4
 956 0016 D35C     		ldrb	r3, [r2, r3]
 957 0018 BB73     		strb	r3, [r7, #14]
1260:Generated_Source\PSoC5/CapSense_Controller.c ****     
1261:Generated_Source\PSoC5/CapSense_Controller.c ****     #if ((CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) && \
1262:Generated_Source\PSoC5/CapSense_Controller.c ****          (CapSense_Controller_IS_COMPLEX_SCANSLOTS))
1263:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 amuxCh = CapSense_Controller_amuxIndex[sensor];
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 40


1264:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* ((CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) && \
1265:Generated_Source\PSoC5/CapSense_Controller.c ****             *   (CapSense_Controller_IS_COMPLEX_SCANSLOTS))
1266:Generated_Source\PSoC5/CapSense_Controller.c ****             */
1267:Generated_Source\PSoC5/CapSense_Controller.c ****     
1268:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Make sensor High-Z */
1269:Generated_Source\PSoC5/CapSense_Controller.c ****     *CapSense_Controller_pcTable[sensor] = CapSense_Controller_PRT_PC_HIGHZ;
 958              		.loc 1 1269 0
 959 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 960 001c 114A     		ldr	r2, .L46+8
 961 001e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 962 0022 0922     		movs	r2, #9
 963 0024 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/CapSense_Controller.c ****     
1271:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Connect to DSI output */
1272:Generated_Source\PSoC5/CapSense_Controller.c **** 	if(port == 15u)
 964              		.loc 1 1272 0
 965 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966 0028 0F2B     		cmp	r3, #15
 967 002a 01D1     		bne	.L45
1273:Generated_Source\PSoC5/CapSense_Controller.c **** 	{
1274:Generated_Source\PSoC5/CapSense_Controller.c **** 		port = 7u;
 968              		.loc 1 1274 0
 969 002c 0723     		movs	r3, #7
 970 002e FB73     		strb	r3, [r7, #15]
 971              	.L45:
1275:Generated_Source\PSoC5/CapSense_Controller.c **** 	}
1276:Generated_Source\PSoC5/CapSense_Controller.c ****     *CapSense_Controller_csTable[port] |= mask;
 972              		.loc 1 1276 0
 973 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 974 0032 0D4A     		ldr	r2, .L46+12
 975 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 976 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 977 003a 0B49     		ldr	r1, .L46+12
 978 003c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 979 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 980 0042 BA7B     		ldrb	r2, [r7, #14]
 981 0044 0A43     		orrs	r2, r2, r1
 982 0046 D2B2     		uxtb	r2, r2
 983 0048 1A70     		strb	r2, [r3]
1277:Generated_Source\PSoC5/CapSense_Controller.c ****     
1278:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Connect to AMUX */
1279:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN)
1280:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_IS_COMPLEX_SCANSLOTS)
1281:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_AMuxCH0_Connect(CapSense_Controller_amuxIndex[sensor]);
1282:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1283:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_AMuxCH0_Connect(sensor);
 984              		.loc 1 1283 0
 985 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 986 004c 1846     		mov	r0, r3
 987 004e FFF7FEFF 		bl	CapSense_Controller_AMuxCH0_Set
1284:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_IS_COMPLEX_SCANSLOTS */
1285:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1286:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
1287:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_IS_COMPLEX_SCANSLOTS)
1288:Generated_Source\PSoC5/CapSense_Controller.c ****             if ((amuxCh & CapSense_Controller_CHANNEL1_FLAG) == 0u)
1289:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1290:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH0_Connect(amuxCh);
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 41


1291:Generated_Source\PSoC5/CapSense_Controller.c ****             } 
1292:Generated_Source\PSoC5/CapSense_Controller.c ****             else
1293:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1294:Generated_Source\PSoC5/CapSense_Controller.c ****                 amuxCh &= ~ CapSense_Controller_CHANNEL1_FLAG;
1295:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH1_Connect(amuxCh);
1296:Generated_Source\PSoC5/CapSense_Controller.c ****             }
1297:Generated_Source\PSoC5/CapSense_Controller.c ****             
1298:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1299:Generated_Source\PSoC5/CapSense_Controller.c ****             if (sensor < CapSense_Controller_TOTAL_SENSOR_COUNT__CH0) 
1300:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1301:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH0_Connect(sensor);
1302:Generated_Source\PSoC5/CapSense_Controller.c ****             } 
1303:Generated_Source\PSoC5/CapSense_Controller.c ****             else
1304:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1305:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH1_Connect(sensor - CapSense_Controller_TOTAL_SENSOR_COUNT
1306:Generated_Source\PSoC5/CapSense_Controller.c ****             }
1307:Generated_Source\PSoC5/CapSense_Controller.c ****             
1308:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_IS_COMPLEX_SCANSLOTS */
1309:Generated_Source\PSoC5/CapSense_Controller.c ****         
1310:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN */
1311:Generated_Source\PSoC5/CapSense_Controller.c **** }
 988              		.loc 1 1311 0
 989 0052 00BF     		nop
 990 0054 1037     		adds	r7, r7, #16
 991              		.cfi_def_cfa_offset 8
 992 0056 BD46     		mov	sp, r7
 993              		.cfi_def_cfa_register 13
 994              		@ sp needed
 995 0058 80BD     		pop	{r7, pc}
 996              	.L47:
 997 005a 00BF     		.align	2
 998              	.L46:
 999 005c 00000000 		.word	CapSense_Controller_portTable
 1000 0060 00000000 		.word	CapSense_Controller_maskTable
 1001 0064 00000000 		.word	CapSense_Controller_pcTable
 1002 0068 00000000 		.word	CapSense_Controller_csTable
 1003              		.cfi_endproc
 1004              	.LFE11:
 1005              		.size	CapSense_Controller_EnableSensor, .-CapSense_Controller_EnableSensor
 1006              		.section	.text.CapSense_Controller_DisableSensor,"ax",%progbits
 1007              		.align	2
 1008              		.global	CapSense_Controller_DisableSensor
 1009              		.thumb
 1010              		.thumb_func
 1011              		.type	CapSense_Controller_DisableSensor, %function
 1012              	CapSense_Controller_DisableSensor:
 1013              	.LFB12:
1312:Generated_Source\PSoC5/CapSense_Controller.c **** 
1313:Generated_Source\PSoC5/CapSense_Controller.c **** 
1314:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
1315:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_DisableSensor
1316:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
1317:Generated_Source\PSoC5/CapSense_Controller.c **** *
1318:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
1319:Generated_Source\PSoC5/CapSense_Controller.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1320:Generated_Source\PSoC5/CapSense_Controller.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1321:Generated_Source\PSoC5/CapSense_Controller.c **** *
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 42


1322:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
1323:Generated_Source\PSoC5/CapSense_Controller.c **** *  sensor:  Sensor number
1324:Generated_Source\PSoC5/CapSense_Controller.c **** *
1325:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
1326:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
1327:Generated_Source\PSoC5/CapSense_Controller.c **** *
1328:Generated_Source\PSoC5/CapSense_Controller.c **** * Global Variables:
1329:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_portTable[] - used to store the port number that pin 
1330:Generated_Source\PSoC5/CapSense_Controller.c **** *  belongs to for every sensor.
1331:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_maskTable[] - used to store the pin within the port for 
1332:Generated_Source\PSoC5/CapSense_Controller.c **** *  every sensor.
1333:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_csTable[]   - used to store the pointers to CAPS_SEL 
1334:Generated_Source\PSoC5/CapSense_Controller.c **** *  registers for every port.
1335:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_pcTable[]   - used to store the pointers to PC pin 
1336:Generated_Source\PSoC5/CapSense_Controller.c **** *  register for every sensor.
1337:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_amuxIndex[] - used to store corrected AMUX index when 
1338:Generated_Source\PSoC5/CapSense_Controller.c **** *  complex sensors are defeined.
1339:Generated_Source\PSoC5/CapSense_Controller.c **** *
1340:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
1341:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_DisableSensor(uint8 sensor) CYREENTRANT
1342:Generated_Source\PSoC5/CapSense_Controller.c **** {
 1014              		.loc 1 1342 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 16
 1017              		@ frame_needed = 1, uses_anonymous_args = 0
 1018 0000 80B5     		push	{r7, lr}
 1019              		.cfi_def_cfa_offset 8
 1020              		.cfi_offset 7, -8
 1021              		.cfi_offset 14, -4
 1022 0002 84B0     		sub	sp, sp, #16
 1023              		.cfi_def_cfa_offset 24
 1024 0004 00AF     		add	r7, sp, #0
 1025              		.cfi_def_cfa_register 7
 1026 0006 0346     		mov	r3, r0
 1027 0008 FB71     		strb	r3, [r7, #7]
1343:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8 port = CapSense_Controller_portTable[sensor];
 1028              		.loc 1 1343 0
 1029 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1030 000c 144A     		ldr	r2, .L50
 1031 000e D35C     		ldrb	r3, [r2, r3]
 1032 0010 FB73     		strb	r3, [r7, #15]
1344:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8 mask = CapSense_Controller_maskTable[sensor];
 1033              		.loc 1 1344 0
 1034 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1035 0014 134A     		ldr	r2, .L50+4
 1036 0016 D35C     		ldrb	r3, [r2, r3]
 1037 0018 BB73     		strb	r3, [r7, #14]
1345:Generated_Source\PSoC5/CapSense_Controller.c ****     
1346:Generated_Source\PSoC5/CapSense_Controller.c ****     #if ((CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) && \
1347:Generated_Source\PSoC5/CapSense_Controller.c ****          (CapSense_Controller_IS_COMPLEX_SCANSLOTS))
1348:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 amuxCh = CapSense_Controller_amuxIndex[sensor];
1349:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* ((CapSense_Controller_DESIGN_TYPE == CapSense_Controller_TWO_CHANNELS_DESIGN) && \
1350:Generated_Source\PSoC5/CapSense_Controller.c ****             *   (CapSense_Controller_IS_COMPLEX_SCANSLOTS))
1351:Generated_Source\PSoC5/CapSense_Controller.c ****             */
1352:Generated_Source\PSoC5/CapSense_Controller.c ****     
1353:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Disconnect from AMUX */
1354:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN)
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 43


1355:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_IS_COMPLEX_SCANSLOTS)
1356:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_AMuxCH0_Disconnect(CapSense_Controller_amuxIndex[sensor]);
1357:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1358:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_AMuxCH0_Disconnect(sensor);
 1038              		.loc 1 1358 0
 1039 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1040 001c 1846     		mov	r0, r3
 1041 001e FFF7FEFF 		bl	CapSense_Controller_AMuxCH0_Unset
1359:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_IS_COMPLEX_SCANSLOTS */
1360:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1361:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
1362:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_IS_COMPLEX_SCANSLOTS)
1363:Generated_Source\PSoC5/CapSense_Controller.c ****             if ((amuxCh & CapSense_Controller_CHANNEL1_FLAG) == 0u)
1364:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1365:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH0_Disconnect(amuxCh);
1366:Generated_Source\PSoC5/CapSense_Controller.c ****             } 
1367:Generated_Source\PSoC5/CapSense_Controller.c ****             else
1368:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1369:Generated_Source\PSoC5/CapSense_Controller.c ****                 amuxCh &= ~ CapSense_Controller_CHANNEL1_FLAG;
1370:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH1_Disconnect(amuxCh);
1371:Generated_Source\PSoC5/CapSense_Controller.c ****             }
1372:Generated_Source\PSoC5/CapSense_Controller.c ****             
1373:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1374:Generated_Source\PSoC5/CapSense_Controller.c ****             if (sensor < CapSense_Controller_TOTAL_SENSOR_COUNT__CH0) 
1375:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1376:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH0_Disconnect(sensor);
1377:Generated_Source\PSoC5/CapSense_Controller.c ****             } 
1378:Generated_Source\PSoC5/CapSense_Controller.c ****             else
1379:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1380:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH1_Disconnect(sensor - CapSense_Controller_TOTAL_SENSOR_CO
1381:Generated_Source\PSoC5/CapSense_Controller.c ****             }
1382:Generated_Source\PSoC5/CapSense_Controller.c ****             
1383:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_IS_COMPLEX_SCANSLOTS */
1384:Generated_Source\PSoC5/CapSense_Controller.c ****         
1385:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* CapSense_Controller_DESIGN_TYPE */
1386:Generated_Source\PSoC5/CapSense_Controller.c ****     
1387:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Disconnect from DSI output */
1388:Generated_Source\PSoC5/CapSense_Controller.c **** 	if(port == 15u)
 1042              		.loc 1 1388 0
 1043 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1044 0024 0F2B     		cmp	r3, #15
 1045 0026 01D1     		bne	.L49
1389:Generated_Source\PSoC5/CapSense_Controller.c **** 	{
1390:Generated_Source\PSoC5/CapSense_Controller.c **** 		port = 7u;
 1046              		.loc 1 1390 0
 1047 0028 0723     		movs	r3, #7
 1048 002a FB73     		strb	r3, [r7, #15]
 1049              	.L49:
1391:Generated_Source\PSoC5/CapSense_Controller.c **** 	}
1392:Generated_Source\PSoC5/CapSense_Controller.c ****     *CapSense_Controller_csTable[port] &= (uint8)~mask;
 1050              		.loc 1 1392 0
 1051 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1052 002e 0E4A     		ldr	r2, .L50+8
 1053 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1054 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1055 0036 0C49     		ldr	r1, .L50+8
 1056 0038 51F82220 		ldr	r2, [r1, r2, lsl #2]
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 44


 1057 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1058 003e BA7B     		ldrb	r2, [r7, #14]
 1059 0040 D243     		mvns	r2, r2
 1060 0042 D2B2     		uxtb	r2, r2
 1061 0044 0A40     		ands	r2, r2, r1
 1062 0046 D2B2     		uxtb	r2, r2
 1063 0048 1A70     		strb	r2, [r3]
1393:Generated_Source\PSoC5/CapSense_Controller.c ****     
1394:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Set sensor to inactive state */
1395:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_CONNECT_INACTIVE_SNS == CapSense_Controller_CIS_GND)
1396:Generated_Source\PSoC5/CapSense_Controller.c ****         *CapSense_Controller_pcTable[sensor] = CapSense_Controller_PRT_PC_GND;
 1064              		.loc 1 1396 0
 1065 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1066 004c 074A     		ldr	r2, .L50+12
 1067 004e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1068 0052 0822     		movs	r2, #8
 1069 0054 1A70     		strb	r2, [r3]
1397:Generated_Source\PSoC5/CapSense_Controller.c ****     #elif (CapSense_Controller_CONNECT_INACTIVE_SNS == CapSense_Controller_CIS_HIGHZ)
1398:Generated_Source\PSoC5/CapSense_Controller.c ****         *CapSense_Controller_pcTable[sensor] = CapSense_Controller_PRT_PC_HIGHZ;
1399:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
1400:Generated_Source\PSoC5/CapSense_Controller.c ****         *CapSense_Controller_pcTable[sensor] = CapSense_Controller_PRT_PC_SHIELD;
1401:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_CONNECT_INACTIVE_SNS == CapSense_Controller_CIS_GND) */
1402:Generated_Source\PSoC5/CapSense_Controller.c **** }
 1070              		.loc 1 1402 0
 1071 0056 00BF     		nop
 1072 0058 1037     		adds	r7, r7, #16
 1073              		.cfi_def_cfa_offset 8
 1074 005a BD46     		mov	sp, r7
 1075              		.cfi_def_cfa_register 13
 1076              		@ sp needed
 1077 005c 80BD     		pop	{r7, pc}
 1078              	.L51:
 1079 005e 00BF     		.align	2
 1080              	.L50:
 1081 0060 00000000 		.word	CapSense_Controller_portTable
 1082 0064 00000000 		.word	CapSense_Controller_maskTable
 1083 0068 00000000 		.word	CapSense_Controller_csTable
 1084 006c 00000000 		.word	CapSense_Controller_pcTable
 1085              		.cfi_endproc
 1086              	.LFE12:
 1087              		.size	CapSense_Controller_DisableSensor, .-CapSense_Controller_DisableSensor
 1088              		.section	.text.CapSense_Controller_PreScan,"ax",%progbits
 1089              		.align	2
 1090              		.global	CapSense_Controller_PreScan
 1091              		.thumb
 1092              		.thumb_func
 1093              		.type	CapSense_Controller_PreScan, %function
 1094              	CapSense_Controller_PreScan:
 1095              	.LFB13:
1403:Generated_Source\PSoC5/CapSense_Controller.c **** 
1404:Generated_Source\PSoC5/CapSense_Controller.c **** 
1405:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
1406:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_PreScan
1407:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
1408:Generated_Source\PSoC5/CapSense_Controller.c **** *
1409:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
1410:Generated_Source\PSoC5/CapSense_Controller.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 45


1411:Generated_Source\PSoC5/CapSense_Controller.c **** *  scanning process of the sensor.
1412:Generated_Source\PSoC5/CapSense_Controller.c **** *
1413:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
1414:Generated_Source\PSoC5/CapSense_Controller.c **** *  sensor:  Sensor number.
1415:Generated_Source\PSoC5/CapSense_Controller.c **** *
1416:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
1417:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
1418:Generated_Source\PSoC5/CapSense_Controller.c **** *
1419:Generated_Source\PSoC5/CapSense_Controller.c **** * Global Variables:
1420:Generated_Source\PSoC5/CapSense_Controller.c **** *  CapSense_Controller_rbTable[] - used to store pointers to PC pin registers for 
1421:Generated_Source\PSoC5/CapSense_Controller.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1422:Generated_Source\PSoC5/CapSense_Controller.c **** *  resistor.
1423:Generated_Source\PSoC5/CapSense_Controller.c **** *
1424:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
1425:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_PreScan(uint8 sensor) CYREENTRANT
1426:Generated_Source\PSoC5/CapSense_Controller.c **** {
 1096              		.loc 1 1426 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 8
 1099              		@ frame_needed = 1, uses_anonymous_args = 0
 1100 0000 80B5     		push	{r7, lr}
 1101              		.cfi_def_cfa_offset 8
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 82B0     		sub	sp, sp, #8
 1105              		.cfi_def_cfa_offset 16
 1106 0004 00AF     		add	r7, sp, #0
 1107              		.cfi_def_cfa_register 7
 1108 0006 0346     		mov	r3, r0
 1109 0008 FB71     		strb	r3, [r7, #7]
1427:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Set Sensor Settings */
1428:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_SetScanSlotSettings(sensor);
 1110              		.loc 1 1428 0
 1111 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1112 000c 1846     		mov	r0, r3
 1113 000e FFF7FEFF 		bl	CapSense_Controller_SetScanSlotSettings
1429:Generated_Source\PSoC5/CapSense_Controller.c ****     
1430:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1431:Generated_Source\PSoC5/CapSense_Controller.c ****     /* `#START CapSense_Controller_PreScan_DisableInt` */
1432:Generated_Source\PSoC5/CapSense_Controller.c **** 
1433:Generated_Source\PSoC5/CapSense_Controller.c ****     /* `#END` */
1434:Generated_Source\PSoC5/CapSense_Controller.c ****     
1435:Generated_Source\PSoC5/CapSense_Controller.c ****     #ifdef CapSense_Controller_PRE_SCAN_DISABLE_INT_CALLBACK
1436:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_PreScan_DisableInt_Callback();
1437:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif /* CapSense_Controller_PRE_SCAN_DISABLE_INT_CALLBACK */
1438:Generated_Source\PSoC5/CapSense_Controller.c **** 
1439:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Resets digital and pre-charge clocks */
1440:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_CONTROL_REG |= CapSense_Controller_CTRL_SYNC_EN;
 1114              		.loc 1 1440 0
 1115 0012 104A     		ldr	r2, .L53
 1116 0014 0F4B     		ldr	r3, .L53
 1117 0016 1B78     		ldrb	r3, [r3]
 1118 0018 DBB2     		uxtb	r3, r3
 1119 001a 43F00103 		orr	r3, r3, #1
 1120 001e DBB2     		uxtb	r3, r3
 1121 0020 1370     		strb	r3, [r2]
1441:Generated_Source\PSoC5/CapSense_Controller.c ****         
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 46


1442:Generated_Source\PSoC5/CapSense_Controller.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN)
1443:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SOURCE)
1444:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Disable Vref from AMux */
1445:Generated_Source\PSoC5/CapSense_Controller.c ****             #if (CapSense_Controller_VREF_VDAC == CapSense_Controller_VREF_OPTIONS)
1446:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH0_Disconnect(CapSense_Controller_AMuxCH0_VREF_CHANNEL);
1447:Generated_Source\PSoC5/CapSense_Controller.c ****             #else
1448:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_BufCH0_CAPS_CFG0_REG &= ~CapSense_Controller_CSBUF_ENABLE;
 1122              		.loc 1 1448 0
 1123 0022 0D4A     		ldr	r2, .L53+4
 1124 0024 0C4B     		ldr	r3, .L53+4
 1125 0026 1B78     		ldrb	r3, [r3]
 1126 0028 DBB2     		uxtb	r3, r3
 1127 002a 23F00103 		bic	r3, r3, #1
 1128 002e DBB2     		uxtb	r3, r3
 1129 0030 1370     		strb	r3, [r2]
1449:Generated_Source\PSoC5/CapSense_Controller.c ****             #endif  /* (CapSense_Controller_VREF_VDAC != CapSense_Controller_VREF_OPTIONS) */
1450:Generated_Source\PSoC5/CapSense_Controller.c **** 
1451:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Enable Sensor */
1452:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_EnableScanSlot(sensor);
 1130              		.loc 1 1452 0
 1131 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1132 0034 1846     		mov	r0, r3
 1133 0036 FFF7FEFF 		bl	CapSense_Controller_EnableSensor
1453:Generated_Source\PSoC5/CapSense_Controller.c ****             
1454:Generated_Source\PSoC5/CapSense_Controller.c ****         #elif (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SINK)
1455:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Connect IDAC */
1456:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_AMuxCH0_Connect(CapSense_Controller_AMuxCH0_IDAC_CHANNEL);
1457:Generated_Source\PSoC5/CapSense_Controller.c ****             
1458:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Enable Sensor */
1459:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_EnableScanSlot(sensor);
1460:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1461:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Disable CapSense Buffer */
1462:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_Controller_CSBUF_ENABLE;
1463:Generated_Source\PSoC5/CapSense_Controller.c ****             
1464:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1465:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Connect DSI output to Rb */
1466:Generated_Source\PSoC5/CapSense_Controller.c ****             *CapSense_Controller_rbTable[CapSense_Controller_extRbCh0Cur] |= CapSense_Controller_BY
1467:Generated_Source\PSoC5/CapSense_Controller.c ****             
1468:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Enable Sensor */
1469:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_EnableScanSlot(sensor);
1470:Generated_Source\PSoC5/CapSense_Controller.c ****              
1471:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Disable CapSense Buffer */
1472:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_BufCH0_CAPS_CFG0_REG &= ~CapSense_Controller_CSBUF_ENABLE;
1473:Generated_Source\PSoC5/CapSense_Controller.c ****         
1474:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SOURCE) */
1475:Generated_Source\PSoC5/CapSense_Controller.c ****         
1476:Generated_Source\PSoC5/CapSense_Controller.c ****     #else
1477:Generated_Source\PSoC5/CapSense_Controller.c **** 
1478:Generated_Source\PSoC5/CapSense_Controller.c ****         if((CapSense_Controller_CONTROL_REG & CapSense_Controller_CTRL_WINDOW_EN__CH0) != 0u)
1479:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1480:Generated_Source\PSoC5/CapSense_Controller.c ****             #if (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SOURCE)
1481:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Disable Vref from AMux */
1482:Generated_Source\PSoC5/CapSense_Controller.c ****                 #if (CapSense_Controller_VREF_VDAC == CapSense_Controller_VREF_OPTIONS)
1483:Generated_Source\PSoC5/CapSense_Controller.c ****                     CapSense_Controller_AMuxCH0_Disconnect(CapSense_Controller_AMuxCH0_VREF_CHANNEL
1484:Generated_Source\PSoC5/CapSense_Controller.c ****                 #else
1485:Generated_Source\PSoC5/CapSense_Controller.c ****                     CapSense_Controller_BufCH0_CAPS_CFG0_REG &= ~CapSense_Controller_CSBUF_ENABLE;
1486:Generated_Source\PSoC5/CapSense_Controller.c ****                 #endif  /* (CapSense_Controller_VREF_VDAC != CapSense_Controller_VREF_OPTIONS) */
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 47


1487:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1488:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Enable Sensor */
1489:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_EnableScanSlot(sensor);
1490:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1491:Generated_Source\PSoC5/CapSense_Controller.c ****             #elif (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SINK)
1492:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Connect IDAC */
1493:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH0_Connect(CapSense_Controller_AMuxCH0_IDAC_CHANNEL);
1494:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1495:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Enable Sensor */
1496:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_EnableScanSlot(sensor);
1497:Generated_Source\PSoC5/CapSense_Controller.c ****                     
1498:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Disable Vref from AMux */
1499:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_BufCH0_CAPS_CFG0_REG &= ~CapSense_Controller_CSBUF_ENABLE;
1500:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1501:Generated_Source\PSoC5/CapSense_Controller.c ****             #else
1502:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Connect DSI output to Rb */
1503:Generated_Source\PSoC5/CapSense_Controller.c ****                 *CapSense_Controller_rbTable[CapSense_Controller_extRbCh0Cur] |= CapSense_Controlle
1504:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1505:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Enable Sensor */
1506:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_EnableScanSlot(sensor);
1507:Generated_Source\PSoC5/CapSense_Controller.c ****                     
1508:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Disable Vref from AMux */
1509:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_BufCH0_CAPS_CFG0_REG &= ~CapSense_Controller_CSBUF_ENABLE;
1510:Generated_Source\PSoC5/CapSense_Controller.c ****             
1511:Generated_Source\PSoC5/CapSense_Controller.c ****             #endif  /* (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SOURCE) */
1512:Generated_Source\PSoC5/CapSense_Controller.c ****             
1513:Generated_Source\PSoC5/CapSense_Controller.c ****         }
1514:Generated_Source\PSoC5/CapSense_Controller.c ****         
1515:Generated_Source\PSoC5/CapSense_Controller.c ****         if((CapSense_Controller_CONTROL_REG & CapSense_Controller_CTRL_WINDOW_EN__CH1) != 0u)
1516:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1517:Generated_Source\PSoC5/CapSense_Controller.c ****             sensor += CapSense_Controller_TOTAL_SENSOR_COUNT__CH0;
1518:Generated_Source\PSoC5/CapSense_Controller.c ****             
1519:Generated_Source\PSoC5/CapSense_Controller.c ****             #if (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SOURCE)
1520:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Disable Vref from AMux */
1521:Generated_Source\PSoC5/CapSense_Controller.c ****                 #if (CapSense_Controller_VREF_VDAC == CapSense_Controller_VREF_OPTIONS)
1522:Generated_Source\PSoC5/CapSense_Controller.c ****                    CapSense_Controller_AMuxCH1_Disconnect(CapSense_Controller_AMuxCH1_VREF_CHANNEL)
1523:Generated_Source\PSoC5/CapSense_Controller.c ****                 #else 
1524:Generated_Source\PSoC5/CapSense_Controller.c ****                     CapSense_Controller_BufCH1_CAPS_CFG0_REG &= ~CapSense_Controller_CSBUF_ENABLE;
1525:Generated_Source\PSoC5/CapSense_Controller.c ****                 #endif  /* (CapSense_Controller_VREF_VDAC == CapSense_Controller_VREF_OPTIONS) */
1526:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1527:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Enable Sensor */
1528:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_EnableScanSlot(sensor);
1529:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1530:Generated_Source\PSoC5/CapSense_Controller.c ****             #elif (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SINK)
1531:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Connect IDAC */
1532:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH1_Connect(CapSense_Controller_AMuxCH1_IDAC_CHANNEL);
1533:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1534:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Enable Sensor */
1535:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_EnableScanSlot(sensor);
1536:Generated_Source\PSoC5/CapSense_Controller.c ****                     
1537:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Disable Vref from AMux */
1538:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_BufCH1_CAPS_CFG0_REG &= ~CapSense_Controller_CSBUF_ENABLE;
1539:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1540:Generated_Source\PSoC5/CapSense_Controller.c ****             #else
1541:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Connect DSI output to Rb */
1542:Generated_Source\PSoC5/CapSense_Controller.c ****                 *CapSense_Controller_rbTable[CapSense_Controller_extRbCh1Cur] |= CapSense_Controlle
1543:Generated_Source\PSoC5/CapSense_Controller.c ****                 
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 48


1544:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Enable Sensor */
1545:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_EnableScanSlot(sensor);
1546:Generated_Source\PSoC5/CapSense_Controller.c ****                 
1547:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Disable Vref from AMux */
1548:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_BufCH1_CAPS_CFG0_REG &= ~CapSense_Controller_CSBUF_ENABLE;
1549:Generated_Source\PSoC5/CapSense_Controller.c ****             
1550:Generated_Source\PSoC5/CapSense_Controller.c ****             #endif  /* (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SOURCE) */
1551:Generated_Source\PSoC5/CapSense_Controller.c ****         }
1552:Generated_Source\PSoC5/CapSense_Controller.c ****     
1553:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif  /* (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN) */
1554:Generated_Source\PSoC5/CapSense_Controller.c ****     
1555:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1556:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_CONTROL_REG |= CapSense_Controller_CTRL_START;
 1134              		.loc 1 1556 0
 1135 003a 064A     		ldr	r2, .L53
 1136 003c 054B     		ldr	r3, .L53
 1137 003e 1B78     		ldrb	r3, [r3]
 1138 0040 DBB2     		uxtb	r3, r3
 1139 0042 43F00203 		orr	r3, r3, #2
 1140 0046 DBB2     		uxtb	r3, r3
 1141 0048 1370     		strb	r3, [r2]
1557:Generated_Source\PSoC5/CapSense_Controller.c ****     
1558:Generated_Source\PSoC5/CapSense_Controller.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1559:Generated_Source\PSoC5/CapSense_Controller.c ****     /* `#START CapSense_Controller_PreScan_EnableInt` */
1560:Generated_Source\PSoC5/CapSense_Controller.c **** 
1561:Generated_Source\PSoC5/CapSense_Controller.c ****     /* `#END` */
1562:Generated_Source\PSoC5/CapSense_Controller.c **** 
1563:Generated_Source\PSoC5/CapSense_Controller.c ****     #ifdef CapSense_Controller_PRE_SCAN_ENABLE_INT_CALLBACK
1564:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_PreScan_EnableInt_Callback();
1565:Generated_Source\PSoC5/CapSense_Controller.c ****     #endif /* CapSense_Controller_PRE_SCAN_ENABLE_INT_CALLBACK */
1566:Generated_Source\PSoC5/CapSense_Controller.c **** }
 1142              		.loc 1 1566 0
 1143 004a 00BF     		nop
 1144 004c 0837     		adds	r7, r7, #8
 1145              		.cfi_def_cfa_offset 8
 1146 004e BD46     		mov	sp, r7
 1147              		.cfi_def_cfa_register 13
 1148              		@ sp needed
 1149 0050 80BD     		pop	{r7, pc}
 1150              	.L54:
 1151 0052 00BF     		.align	2
 1152              	.L53:
 1153 0054 72640040 		.word	1073767538
 1154 0058 70580040 		.word	1073764464
 1155              		.cfi_endproc
 1156              	.LFE13:
 1157              		.size	CapSense_Controller_PreScan, .-CapSense_Controller_PreScan
 1158              		.section	.text.CapSense_Controller_PostScan,"ax",%progbits
 1159              		.align	2
 1160              		.global	CapSense_Controller_PostScan
 1161              		.thumb
 1162              		.thumb_func
 1163              		.type	CapSense_Controller_PostScan, %function
 1164              	CapSense_Controller_PostScan:
 1165              	.LFB14:
1567:Generated_Source\PSoC5/CapSense_Controller.c **** 
1568:Generated_Source\PSoC5/CapSense_Controller.c **** 
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 49


1569:Generated_Source\PSoC5/CapSense_Controller.c **** #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN)
1570:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
1571:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name: CapSense_Controller_PostScan
1572:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
1573:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1574:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
1575:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Store results of measurament in CapSense_Controller_SensorResult[] array,
1576:Generated_Source\PSoC5/CapSense_Controller.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1577:Generated_Source\PSoC5/CapSense_Controller.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1578:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Only one channel designs.
1579:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1580:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
1581:Generated_Source\PSoC5/CapSense_Controller.c ****     *  sensor:  Sensor number.
1582:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1583:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
1584:Generated_Source\PSoC5/CapSense_Controller.c ****     *  None
1585:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1586:Generated_Source\PSoC5/CapSense_Controller.c ****     * Global Variables:
1587:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_sensorRaw[] - used to store sensors raw data.
1588:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1589:Generated_Source\PSoC5/CapSense_Controller.c ****     * Reentrant:
1590:Generated_Source\PSoC5/CapSense_Controller.c ****     *  No
1591:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1592:Generated_Source\PSoC5/CapSense_Controller.c ****     *******************************************************************************/
1593:Generated_Source\PSoC5/CapSense_Controller.c ****     void CapSense_Controller_PostScan(uint8 sensor) CYREENTRANT
1594:Generated_Source\PSoC5/CapSense_Controller.c ****     {
 1166              		.loc 1 1594 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 8
 1169              		@ frame_needed = 1, uses_anonymous_args = 0
 1170 0000 80B5     		push	{r7, lr}
 1171              		.cfi_def_cfa_offset 8
 1172              		.cfi_offset 7, -8
 1173              		.cfi_offset 14, -4
 1174 0002 82B0     		sub	sp, sp, #8
 1175              		.cfi_def_cfa_offset 16
 1176 0004 00AF     		add	r7, sp, #0
 1177              		.cfi_def_cfa_register 7
 1178 0006 0346     		mov	r3, r0
 1179 0008 FB71     		strb	r3, [r7, #7]
1595:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Stop Capsensing and rearm sync */
1596:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_CONTROL_REG &= (uint8)~(CapSense_Controller_CTRL_START | CapSense_Contr
 1180              		.loc 1 1596 0
 1181 000a 1E4A     		ldr	r2, .L56
 1182 000c 1D4B     		ldr	r3, .L56
 1183 000e 1B78     		ldrb	r3, [r3]
 1184 0010 DBB2     		uxtb	r3, r3
 1185 0012 23F00303 		bic	r3, r3, #3
 1186 0016 DBB2     		uxtb	r3, r3
 1187 0018 1370     		strb	r3, [r2]
1597:Generated_Source\PSoC5/CapSense_Controller.c ****         
1598:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Read SlotResult from Raw Counter */
1599:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATION_F
1600:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor]  = CapSense_Controller_MEASURE_FULL_RANGE - 
1601:Generated_Source\PSoC5/CapSense_Controller.c ****                                                       CY_GET_REG16(CapSense_Controller_RAW_CH0_COUN
1602:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1603:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor]  = ((uint16) CapSense_Controller_RAW_CH0_COUNTER_
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 50


 1188              		.loc 1 1603 0
 1189 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1190 001c 1A4A     		ldr	r2, .L56+4
 1191 001e 1278     		ldrb	r2, [r2]
 1192 0020 D2B2     		uxtb	r2, r2
 1193 0022 92B2     		uxth	r2, r2
 1194 0024 1202     		lsls	r2, r2, #8
 1195 0026 91B2     		uxth	r1, r2
 1196 0028 184A     		ldr	r2, .L56+8
 1197 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1604:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor] |= (uint16) CapSense_Controller_RAW_CH0_COUNTER_L
 1198              		.loc 1 1604 0
 1199 002e 184B     		ldr	r3, .L56+12
 1200 0030 1B78     		ldrb	r3, [r3]
 1201 0032 DBB2     		uxtb	r3, r3
 1202 0034 9AB2     		uxth	r2, r3
 1203 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1204 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1205 003a 1448     		ldr	r0, .L56+8
 1206 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1207 0040 0A43     		orrs	r2, r2, r1
 1208 0042 91B2     		uxth	r1, r2
 1209 0044 114A     		ldr	r2, .L56+8
 1210 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1605:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor]  = CapSense_Controller_MEASURE_FULL_RANGE -
 1211              		.loc 1 1605 0
 1212 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1606:Generated_Source\PSoC5/CapSense_Controller.c ****                                                       CapSense_Controller_sensorRaw[sensor];
 1213              		.loc 1 1606 0
 1214 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1215 004e 0F49     		ldr	r1, .L56+8
 1216 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1605:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor]  = CapSense_Controller_MEASURE_FULL_RANGE -
 1217              		.loc 1 1605 0
 1218 0054 D243     		mvns	r2, r2
 1219 0056 91B2     		uxth	r1, r2
 1220 0058 0C4A     		ldr	r2, .L56+8
 1221 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1607:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_IMPLEMENTATION == CapSense_Controller_MEASURE_IMPLEMENTATIO
1608:Generated_Source\PSoC5/CapSense_Controller.c ****         
1609:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Disable Sensor */
1610:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_DisableScanSlot(sensor);
 1222              		.loc 1 1610 0
 1223 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1224 0060 1846     		mov	r0, r3
 1225 0062 FFF7FEFF 		bl	CapSense_Controller_DisableSensor
1611:Generated_Source\PSoC5/CapSense_Controller.c ****         
1612:Generated_Source\PSoC5/CapSense_Controller.c ****         #if(CapSense_Controller_CURRENT_SOURCE)
1613:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Turn off IDAC */
1614:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_IdacCH0_SetValue(CapSense_Controller_TURN_OFF_IDAC);
 1226              		.loc 1 1614 0
 1227 0066 0020     		movs	r0, #0
 1228 0068 FFF7FEFF 		bl	CapSense_Controller_IdacCH0_SetValue
1615:Generated_Source\PSoC5/CapSense_Controller.c ****             #if (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SINK)
1616:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Disconnect IDAC */
1617:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH0_Disconnect(CapSense_Controller_AMuxCH0_IDAC_CHANNEL);
1618:Generated_Source\PSoC5/CapSense_Controller.c ****             #endif  /* (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SINK) */
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 51


1619:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1620:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Disconnect DSI output from Rb */
1621:Generated_Source\PSoC5/CapSense_Controller.c ****             *CapSense_Controller_rbTable[CapSense_Controller_extRbCh0Cur] &= ~CapSense_Controller_B
1622:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_CURRENT_SOURCE)*/
1623:Generated_Source\PSoC5/CapSense_Controller.c ****             
1624:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Enable Vref on AMUX */
1625:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_VREF_OPTIONS == CapSense_Controller_VREF_VDAC)
1626:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_AMuxCH0_Connect(CapSense_Controller_AMuxCH0_VREF_CHANNEL);
1627:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1628:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_BufCH0_CAPS_CFG0_REG |= CapSense_Controller_CSBUF_ENABLE;
 1229              		.loc 1 1628 0
 1230 006c 094A     		ldr	r2, .L56+16
 1231 006e 094B     		ldr	r3, .L56+16
 1232 0070 1B78     		ldrb	r3, [r3]
 1233 0072 DBB2     		uxtb	r3, r3
 1234 0074 43F00103 		orr	r3, r3, #1
 1235 0078 DBB2     		uxtb	r3, r3
 1236 007a 1370     		strb	r3, [r2]
1629:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_VREF_VDAC == CapSense_Controller_VREF_OPTIONS) */
1630:Generated_Source\PSoC5/CapSense_Controller.c ****     }
 1237              		.loc 1 1630 0
 1238 007c 00BF     		nop
 1239 007e 0837     		adds	r7, r7, #8
 1240              		.cfi_def_cfa_offset 8
 1241 0080 BD46     		mov	sp, r7
 1242              		.cfi_def_cfa_register 13
 1243              		@ sp needed
 1244 0082 80BD     		pop	{r7, pc}
 1245              	.L57:
 1246              		.align	2
 1247              	.L56:
 1248 0084 72640040 		.word	1073767538
 1249 0088 14640040 		.word	1073767444
 1250 008c 00000000 		.word	CapSense_Controller_sensorRaw
 1251 0090 04640040 		.word	1073767428
 1252 0094 70580040 		.word	1073764464
 1253              		.cfi_endproc
 1254              	.LFE14:
 1255              		.size	CapSense_Controller_PostScan, .-CapSense_Controller_PostScan
 1256              		.section	.text.CapSense_Controller_SetPrescaler,"ax",%progbits
 1257              		.align	2
 1258              		.global	CapSense_Controller_SetPrescaler
 1259              		.thumb
 1260              		.thumb_func
 1261              		.type	CapSense_Controller_SetPrescaler, %function
 1262              	CapSense_Controller_SetPrescaler:
 1263              	.LFB15:
1631:Generated_Source\PSoC5/CapSense_Controller.c ****     
1632:Generated_Source\PSoC5/CapSense_Controller.c **** #else
1633:Generated_Source\PSoC5/CapSense_Controller.c **** 
1634:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
1635:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name: CapSense_Controller_PostScan
1636:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
1637:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1638:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
1639:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Store results of measurament in CapSense_Controller_SensorResult[] array,
1640:Generated_Source\PSoC5/CapSense_Controller.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 52


1641:Generated_Source\PSoC5/CapSense_Controller.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1642:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Only used for channel 0 in two channes designs.
1643:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1644:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
1645:Generated_Source\PSoC5/CapSense_Controller.c ****     *  sensor:  Sensor number.
1646:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1647:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
1648:Generated_Source\PSoC5/CapSense_Controller.c ****     *  None
1649:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1650:Generated_Source\PSoC5/CapSense_Controller.c ****     * Global Variables:
1651:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_sensorRaw[] - used to store sensors raw data.
1652:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1653:Generated_Source\PSoC5/CapSense_Controller.c ****     * Reentrant:
1654:Generated_Source\PSoC5/CapSense_Controller.c ****     *  No
1655:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1656:Generated_Source\PSoC5/CapSense_Controller.c ****     *******************************************************************************/
1657:Generated_Source\PSoC5/CapSense_Controller.c ****     void CapSense_Controller_PostScanCh0(uint8 sensor) CYREENTRANT
1658:Generated_Source\PSoC5/CapSense_Controller.c ****     {
1659:Generated_Source\PSoC5/CapSense_Controller.c ****         if (((CapSense_Controller_CONTROL_REG & CapSense_Controller_CTRL_WINDOW_EN__CH0) == 0u) && 
1660:Generated_Source\PSoC5/CapSense_Controller.c ****             ((CapSense_Controller_CONTROL_REG & CapSense_Controller_CTRL_WINDOW_EN__CH1) == 0u)) 
1661:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1662:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Stop Capsensing and rearm sync */
1663:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_CONTROL_REG &= ~(CapSense_Controller_CTRL_START | CapSense_Controll
1664:Generated_Source\PSoC5/CapSense_Controller.c ****         }
1665:Generated_Source\PSoC5/CapSense_Controller.c ****         
1666:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Read SlotResult from Raw Counter */
1667:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENTATION_F
1668:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor]  = CapSense_Controller_MEASURE_FULL_RANGE - 
1669:Generated_Source\PSoC5/CapSense_Controller.c ****                                                       CY_GET_REG16(CapSense_Controller_RAW_CH0_COUN
1670:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1671:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor]  = ((uint16) CapSense_Controller_RAW_CH0_COUNTER_
1672:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor] |= (uint16) CapSense_Controller_RAW_CH0_COUNTER_L
1673:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor]  = CapSense_Controller_MEASURE_FULL_RANGE - 
1674:Generated_Source\PSoC5/CapSense_Controller.c ****                                                       CapSense_Controller_sensorRaw[sensor];
1675:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_IMPLEMENTATION_CH0 == CapSense_Controller_MEASURE_IMPLEMENT
1676:Generated_Source\PSoC5/CapSense_Controller.c ****         
1677:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Disable Sensor */
1678:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_DisableScanSlot(sensor);
1679:Generated_Source\PSoC5/CapSense_Controller.c ****         
1680:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_CURRENT_SOURCE)
1681:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Turn off IDAC */
1682:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_IdacCH0_SetValue(CapSense_Controller_TURN_OFF_IDAC);
1683:Generated_Source\PSoC5/CapSense_Controller.c ****             #if (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SINK)
1684:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Disconnect IDAC */
1685:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH0_Disconnect(CapSense_Controller_AMuxCH0_IDAC_CHANNEL);
1686:Generated_Source\PSoC5/CapSense_Controller.c ****             #endif  /* (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SINK) */
1687:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1688:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Disconnect DSI output from Rb */
1689:Generated_Source\PSoC5/CapSense_Controller.c ****             *CapSense_Controller_rbTable[CapSense_Controller_extRbCh0Cur] &= ~CapSense_Controller_B
1690:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_CURRENT_SOURCE)*/
1691:Generated_Source\PSoC5/CapSense_Controller.c ****         
1692:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Enable Vref on AMUX */
1693:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_VREF_OPTIONS == CapSense_Controller_VREF_VDAC)
1694:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_AMuxCH0_Connect(CapSense_Controller_AMuxCH0_VREF_CHANNEL);
1695:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1696:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_BufCH0_CAPS_CFG0_REG |= CapSense_Controller_CSBUF_ENABLE;
1697:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_VREF_VDAC == CapSense_Controller_VREF_OPTIONS) */
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 53


1698:Generated_Source\PSoC5/CapSense_Controller.c ****     }
1699:Generated_Source\PSoC5/CapSense_Controller.c ****     
1700:Generated_Source\PSoC5/CapSense_Controller.c ****     
1701:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
1702:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name: CapSense_Controller_PostScanCh1
1703:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
1704:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1705:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
1706:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Store results of measurament in CapSense_Controller_SensorResult[] array,
1707:Generated_Source\PSoC5/CapSense_Controller.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1708:Generated_Source\PSoC5/CapSense_Controller.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1709:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Only used for channel 1 in two channes designs.
1710:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1711:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
1712:Generated_Source\PSoC5/CapSense_Controller.c ****     *  sensor:  Sensor number.
1713:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1714:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
1715:Generated_Source\PSoC5/CapSense_Controller.c ****     *  None
1716:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1717:Generated_Source\PSoC5/CapSense_Controller.c ****     * Global Variables:
1718:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_sensorRaw[] - used to store sensors raw data.
1719:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1720:Generated_Source\PSoC5/CapSense_Controller.c ****     * Reentrant:
1721:Generated_Source\PSoC5/CapSense_Controller.c ****     *  No
1722:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1723:Generated_Source\PSoC5/CapSense_Controller.c ****     *******************************************************************************/
1724:Generated_Source\PSoC5/CapSense_Controller.c ****     void CapSense_Controller_PostScanCh1(uint8 sensor) CYREENTRANT
1725:Generated_Source\PSoC5/CapSense_Controller.c ****     {
1726:Generated_Source\PSoC5/CapSense_Controller.c ****         if (((CapSense_Controller_CONTROL_REG & CapSense_Controller_CTRL_WINDOW_EN__CH0) == 0u) && 
1727:Generated_Source\PSoC5/CapSense_Controller.c ****             ((CapSense_Controller_CONTROL_REG & CapSense_Controller_CTRL_WINDOW_EN__CH1) == 0u))
1728:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1729:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Stop Capsensing and rearm sync */
1730:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_CONTROL_REG &= ~(CapSense_Controller_CTRL_START | CapSense_Controll
1731:Generated_Source\PSoC5/CapSense_Controller.c ****         }
1732:Generated_Source\PSoC5/CapSense_Controller.c ****         
1733:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Read SlotResult from Raw Counter */
1734:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLEMENTATION_F
1735:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor]  = CapSense_Controller_MEASURE_FULL_RANGE - 
1736:Generated_Source\PSoC5/CapSense_Controller.c ****                                                       CY_GET_REG16(CapSense_Controller_RAW_CH1_COUN
1737:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1738:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor]  = ((uint16) CapSense_Controller_RAW_CH1_COUNTER_
1739:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor] |= (uint16) CapSense_Controller_RAW_CH1_COUNTER_L
1740:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_sensorRaw[sensor]  = CapSense_Controller_MEASURE_FULL_RANGE - 
1741:Generated_Source\PSoC5/CapSense_Controller.c ****                                                       CapSense_Controller_sensorRaw[sensor];
1742:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_IMPLEMENTATION_CH1 == CapSense_Controller_MEASURE_IMPLEMENT
1743:Generated_Source\PSoC5/CapSense_Controller.c ****         
1744:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Disable Sensor */
1745:Generated_Source\PSoC5/CapSense_Controller.c ****         CapSense_Controller_DisableScanSlot(sensor);
1746:Generated_Source\PSoC5/CapSense_Controller.c ****         
1747:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_CURRENT_SOURCE)
1748:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Turn off IDAC */
1749:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_IdacCH1_SetValue(CapSense_Controller_TURN_OFF_IDAC);
1750:Generated_Source\PSoC5/CapSense_Controller.c ****             #if (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SINK)
1751:Generated_Source\PSoC5/CapSense_Controller.c ****                 /* Disconnect IDAC */
1752:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_AMuxCH1_Disconnect(CapSense_Controller_AMuxCH1_IDAC_CHANNEL);
1753:Generated_Source\PSoC5/CapSense_Controller.c ****             #endif  /* (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_IDAC_SINK) */
1754:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 54


1755:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Disconnect DSI output from Rb */
1756:Generated_Source\PSoC5/CapSense_Controller.c ****             *CapSense_Controller_rbTable[CapSense_Controller_extRbCh1Cur] &= ~CapSense_Controller_B
1757:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_CURRENT_SOURCE)*/
1758:Generated_Source\PSoC5/CapSense_Controller.c **** 
1759:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Enable Vref on AMUX */
1760:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_VREF_OPTIONS == CapSense_Controller_VREF_VDAC)
1761:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_AMuxCH1_Connect(CapSense_Controller_AMuxCH1_VREF_CHANNEL);
1762:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1763:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_BufCH1_CAPS_CFG0_REG |= CapSense_Controller_CSBUF_ENABLE;
1764:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_VREF_VDAC == CapSense_Controller_VREF_OPTIONS) */
1765:Generated_Source\PSoC5/CapSense_Controller.c ****     }
1766:Generated_Source\PSoC5/CapSense_Controller.c ****     
1767:Generated_Source\PSoC5/CapSense_Controller.c **** #endif  /* CapSense_Controller_DESIGN_TYPE */
1768:Generated_Source\PSoC5/CapSense_Controller.c **** 
1769:Generated_Source\PSoC5/CapSense_Controller.c **** 
1770:Generated_Source\PSoC5/CapSense_Controller.c **** #if (CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_EXTERNAL_RB)
1771:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
1772:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name:  CapSense_Controller_InitRb
1773:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
1774:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1775:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
1776:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1777:Generated_Source\PSoC5/CapSense_Controller.c ****     *  while next measure.
1778:Generated_Source\PSoC5/CapSense_Controller.c ****     *  This function is available only if Current Source is External Resistor.
1779:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1780:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
1781:Generated_Source\PSoC5/CapSense_Controller.c ****     *  None
1782:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1783:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
1784:Generated_Source\PSoC5/CapSense_Controller.c ****     *  None
1785:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1786:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************/
1787:Generated_Source\PSoC5/CapSense_Controller.c ****     void CapSense_Controller_InitRb(void) 
1788:Generated_Source\PSoC5/CapSense_Controller.c ****     {
1789:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 i;
1790:Generated_Source\PSoC5/CapSense_Controller.c ****         
1791:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Disable all Rb */
1792:Generated_Source\PSoC5/CapSense_Controller.c ****         for(i = 0u; i < CapSense_Controller_TOTAL_RB_NUMBER; i++)
1793:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1794:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Make High-Z */
1795:Generated_Source\PSoC5/CapSense_Controller.c ****             *CapSense_Controller_rbTable[i] = CapSense_Controller_PRT_PC_HIGHZ;
1796:Generated_Source\PSoC5/CapSense_Controller.c ****         }
1797:Generated_Source\PSoC5/CapSense_Controller.c ****     }
1798:Generated_Source\PSoC5/CapSense_Controller.c ****     
1799:Generated_Source\PSoC5/CapSense_Controller.c ****     
1800:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
1801:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name: CapSense_Controller_SetRBleed
1802:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
1803:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1804:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
1805:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1806:Generated_Source\PSoC5/CapSense_Controller.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1807:Generated_Source\PSoC5/CapSense_Controller.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1808:Generated_Source\PSoC5/CapSense_Controller.c ****     *  This function is available only if Current Source is External Resistor.
1809:Generated_Source\PSoC5/CapSense_Controller.c ****     * 
1810:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
1811:Generated_Source\PSoC5/CapSense_Controller.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 55


1812:Generated_Source\PSoC5/CapSense_Controller.c ****     *  customizer.
1813:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1814:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
1815:Generated_Source\PSoC5/CapSense_Controller.c ****     *  None
1816:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1817:Generated_Source\PSoC5/CapSense_Controller.c ****     * Global Variables:
1818:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_extRbCh0Cur - used to store current number of active 
1819:Generated_Source\PSoC5/CapSense_Controller.c ****     *  bleed resistor (Rb) of channel 0.
1820:Generated_Source\PSoC5/CapSense_Controller.c ****     *  CapSense_Controller_extRbCh1Cur - used to store current number of active 
1821:Generated_Source\PSoC5/CapSense_Controller.c ****     *  bleed resistor (Rb) of channel 1.
1822:Generated_Source\PSoC5/CapSense_Controller.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1823:Generated_Source\PSoC5/CapSense_Controller.c ****     *  cycle.
1824:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1825:Generated_Source\PSoC5/CapSense_Controller.c ****     * Reentrant:
1826:Generated_Source\PSoC5/CapSense_Controller.c ****     *  No
1827:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1828:Generated_Source\PSoC5/CapSense_Controller.c ****     *******************************************************************************/
1829:Generated_Source\PSoC5/CapSense_Controller.c ****     void CapSense_Controller_SetRBleed(uint8 rbleed) 
1830:Generated_Source\PSoC5/CapSense_Controller.c ****     {
1831:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN)
1832:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_extRbCh0Cur = rbleed;
1833:Generated_Source\PSoC5/CapSense_Controller.c ****             
1834:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1835:Generated_Source\PSoC5/CapSense_Controller.c ****             if(rbleed < CapSense_Controller_TOTAL_RB_NUMBER__CH0)
1836:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1837:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_extRbCh0Cur = rbleed;
1838:Generated_Source\PSoC5/CapSense_Controller.c ****             }
1839:Generated_Source\PSoC5/CapSense_Controller.c ****             else
1840:Generated_Source\PSoC5/CapSense_Controller.c ****             {
1841:Generated_Source\PSoC5/CapSense_Controller.c ****                 CapSense_Controller_extRbCh1Cur = (rbleed - CapSense_Controller_TOTAL_RB_NUMBER__CH
1842:Generated_Source\PSoC5/CapSense_Controller.c ****             }
1843:Generated_Source\PSoC5/CapSense_Controller.c ****     
1844:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN */ 
1845:Generated_Source\PSoC5/CapSense_Controller.c ****     }
1846:Generated_Source\PSoC5/CapSense_Controller.c **** #endif /* CapSense_Controller_CURRENT_SOURCE == CapSense_Controller_EXTERNAL_RB */ 
1847:Generated_Source\PSoC5/CapSense_Controller.c **** 
1848:Generated_Source\PSoC5/CapSense_Controller.c **** #if (CapSense_Controller_PRESCALER_OPTIONS)
1849:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
1850:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name: CapSense_Controller_SetPrescaler
1851:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
1852:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1853:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
1854:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Sets analog switch divider.
1855:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1856:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
1857:Generated_Source\PSoC5/CapSense_Controller.c ****     *  prescaler:  Sets prescaler divider values.
1858:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1859:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
1860:Generated_Source\PSoC5/CapSense_Controller.c ****     *  None
1861:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1862:Generated_Source\PSoC5/CapSense_Controller.c ****     *******************************************************************************/
1863:Generated_Source\PSoC5/CapSense_Controller.c ****     void CapSense_Controller_SetPrescaler(uint8 prescaler) CYREENTRANT
1864:Generated_Source\PSoC5/CapSense_Controller.c ****     {
 1264              		.loc 1 1864 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 8
 1267              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 56


 1268              		@ link register save eliminated.
 1269 0000 80B4     		push	{r7}
 1270              		.cfi_def_cfa_offset 4
 1271              		.cfi_offset 7, -4
 1272 0002 83B0     		sub	sp, sp, #12
 1273              		.cfi_def_cfa_offset 16
 1274 0004 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
 1276 0006 0346     		mov	r3, r0
 1277 0008 FB71     		strb	r3, [r7, #7]
1865:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Set Prescaler */
1866:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_UDB)
1867:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PRESCALER_PERIOD_REG = prescaler;
 1278              		.loc 1 1867 0
 1279 000a 064A     		ldr	r2, .L59
 1280 000c FB79     		ldrb	r3, [r7, #7]
 1281 000e 1370     		strb	r3, [r2]
1868:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1282              		.loc 1 1868 0
 1283 0010 054A     		ldr	r2, .L59+4
 1284 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1285 0014 5B08     		lsrs	r3, r3, #1
 1286 0016 DBB2     		uxtb	r3, r3
 1287 0018 1370     		strb	r3, [r2]
1869:Generated_Source\PSoC5/CapSense_Controller.c ****         #elif (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_FF)
1870:Generated_Source\PSoC5/CapSense_Controller.c ****             CY_SET_REG16(CapSense_Controller_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1871:Generated_Source\PSoC5/CapSense_Controller.c ****             CY_SET_REG16(CapSense_Controller_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1872:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1873:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Do nothing = config without prescaler */
1874:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_UDB) */
1875:Generated_Source\PSoC5/CapSense_Controller.c ****     }
 1288              		.loc 1 1875 0
 1289 001a 00BF     		nop
 1290 001c 0C37     		adds	r7, r7, #12
 1291              		.cfi_def_cfa_offset 4
 1292 001e BD46     		mov	sp, r7
 1293              		.cfi_def_cfa_register 13
 1294              		@ sp needed
 1295 0020 80BC     		pop	{r7}
 1296              		.cfi_restore 7
 1297              		.cfi_def_cfa_offset 0
 1298 0022 7047     		bx	lr
 1299              	.L60:
 1300              		.align	2
 1301              	.L59:
 1302 0024 25640040 		.word	1073767461
 1303 0028 35640040 		.word	1073767477
 1304              		.cfi_endproc
 1305              	.LFE15:
 1306              		.size	CapSense_Controller_SetPrescaler, .-CapSense_Controller_SetPrescaler
 1307              		.section	.text.CapSense_Controller_GetPrescaler,"ax",%progbits
 1308              		.align	2
 1309              		.global	CapSense_Controller_GetPrescaler
 1310              		.thumb
 1311              		.thumb_func
 1312              		.type	CapSense_Controller_GetPrescaler, %function
 1313              	CapSense_Controller_GetPrescaler:
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 57


 1314              	.LFB16:
1876:Generated_Source\PSoC5/CapSense_Controller.c **** 
1877:Generated_Source\PSoC5/CapSense_Controller.c **** 
1878:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
1879:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name: CapSense_Controller_GetPrescaler
1880:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
1881:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1882:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
1883:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Gets analog switch divider.
1884:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1885:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
1886:Generated_Source\PSoC5/CapSense_Controller.c ****     *  None
1887:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1888:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
1889:Generated_Source\PSoC5/CapSense_Controller.c ****     *   Returns the prescaler divider value.
1890:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1891:Generated_Source\PSoC5/CapSense_Controller.c ****     *******************************************************************************/
1892:Generated_Source\PSoC5/CapSense_Controller.c ****     uint8 CapSense_Controller_GetPrescaler(void) 
1893:Generated_Source\PSoC5/CapSense_Controller.c ****     {
 1315              		.loc 1 1893 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 8
 1318              		@ frame_needed = 1, uses_anonymous_args = 0
 1319              		@ link register save eliminated.
 1320 0000 80B4     		push	{r7}
 1321              		.cfi_def_cfa_offset 4
 1322              		.cfi_offset 7, -4
 1323 0002 83B0     		sub	sp, sp, #12
 1324              		.cfi_def_cfa_offset 16
 1325 0004 00AF     		add	r7, sp, #0
 1326              		.cfi_def_cfa_register 7
1894:Generated_Source\PSoC5/CapSense_Controller.c ****         uint8 prescaler = 0u;
 1327              		.loc 1 1894 0
 1328 0006 0023     		movs	r3, #0
 1329 0008 FB71     		strb	r3, [r7, #7]
1895:Generated_Source\PSoC5/CapSense_Controller.c **** 
1896:Generated_Source\PSoC5/CapSense_Controller.c ****         /* Get Prescaler */
1897:Generated_Source\PSoC5/CapSense_Controller.c ****         #if (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_UDB)
1898:Generated_Source\PSoC5/CapSense_Controller.c ****             prescaler = CapSense_Controller_PRESCALER_PERIOD_REG;
 1330              		.loc 1 1898 0
 1331 000a 044B     		ldr	r3, .L63
 1332 000c 1B78     		ldrb	r3, [r3]
 1333 000e FB71     		strb	r3, [r7, #7]
1899:Generated_Source\PSoC5/CapSense_Controller.c ****             
1900:Generated_Source\PSoC5/CapSense_Controller.c ****         #elif (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_FF)
1901:Generated_Source\PSoC5/CapSense_Controller.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_Controller_PRESCALER_PERIOD_PTR);
1902:Generated_Source\PSoC5/CapSense_Controller.c ****             
1903:Generated_Source\PSoC5/CapSense_Controller.c ****         #else
1904:Generated_Source\PSoC5/CapSense_Controller.c ****             /* Do nothing = config without prescaler */
1905:Generated_Source\PSoC5/CapSense_Controller.c ****         #endif  /* (CapSense_Controller_PRESCALER_OPTIONS == CapSense_Controller_PRESCALER_UDB) */
1906:Generated_Source\PSoC5/CapSense_Controller.c ****         
1907:Generated_Source\PSoC5/CapSense_Controller.c ****         return (prescaler);
 1334              		.loc 1 1907 0
 1335 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1908:Generated_Source\PSoC5/CapSense_Controller.c ****     }
 1336              		.loc 1 1908 0
 1337 0012 1846     		mov	r0, r3
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 58


 1338 0014 0C37     		adds	r7, r7, #12
 1339              		.cfi_def_cfa_offset 4
 1340 0016 BD46     		mov	sp, r7
 1341              		.cfi_def_cfa_register 13
 1342              		@ sp needed
 1343 0018 80BC     		pop	{r7}
 1344              		.cfi_restore 7
 1345              		.cfi_def_cfa_offset 0
 1346 001a 7047     		bx	lr
 1347              	.L64:
 1348              		.align	2
 1349              	.L63:
 1350 001c 25640040 		.word	1073767461
 1351              		.cfi_endproc
 1352              	.LFE16:
 1353              		.size	CapSense_Controller_GetPrescaler, .-CapSense_Controller_GetPrescaler
 1354              		.section	.text.CapSense_Controller_SetScanSpeed,"ax",%progbits
 1355              		.align	2
 1356              		.global	CapSense_Controller_SetScanSpeed
 1357              		.thumb
 1358              		.thumb_func
 1359              		.type	CapSense_Controller_SetScanSpeed, %function
 1360              	CapSense_Controller_SetScanSpeed:
 1361              	.LFB17:
1909:Generated_Source\PSoC5/CapSense_Controller.c **** #endif  /* CapSense_Controller_PRESCALER_OPTIONS */
1910:Generated_Source\PSoC5/CapSense_Controller.c **** 
1911:Generated_Source\PSoC5/CapSense_Controller.c **** 
1912:Generated_Source\PSoC5/CapSense_Controller.c **** /*******************************************************************************
1913:Generated_Source\PSoC5/CapSense_Controller.c **** * Function Name: CapSense_Controller_SetScanSpeed
1914:Generated_Source\PSoC5/CapSense_Controller.c **** ********************************************************************************
1915:Generated_Source\PSoC5/CapSense_Controller.c **** *
1916:Generated_Source\PSoC5/CapSense_Controller.c **** * Summary:
1917:Generated_Source\PSoC5/CapSense_Controller.c **** *  Sets ScanSpeed divider.
1918:Generated_Source\PSoC5/CapSense_Controller.c **** *
1919:Generated_Source\PSoC5/CapSense_Controller.c **** * Parameters:
1920:Generated_Source\PSoC5/CapSense_Controller.c **** *  scanspeed:  Sets ScanSpeed divider.
1921:Generated_Source\PSoC5/CapSense_Controller.c **** *
1922:Generated_Source\PSoC5/CapSense_Controller.c **** * Return:
1923:Generated_Source\PSoC5/CapSense_Controller.c **** *  None
1924:Generated_Source\PSoC5/CapSense_Controller.c **** *
1925:Generated_Source\PSoC5/CapSense_Controller.c **** *******************************************************************************/
1926:Generated_Source\PSoC5/CapSense_Controller.c **** void CapSense_Controller_SetScanSpeed(uint8 scanSpeed) 
1927:Generated_Source\PSoC5/CapSense_Controller.c **** {
 1362              		.loc 1 1927 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 8
 1365              		@ frame_needed = 1, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 1367 0000 80B4     		push	{r7}
 1368              		.cfi_def_cfa_offset 4
 1369              		.cfi_offset 7, -4
 1370 0002 83B0     		sub	sp, sp, #12
 1371              		.cfi_def_cfa_offset 16
 1372 0004 00AF     		add	r7, sp, #0
 1373              		.cfi_def_cfa_register 7
 1374 0006 0346     		mov	r3, r0
 1375 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 59


1928:Generated_Source\PSoC5/CapSense_Controller.c ****     CapSense_Controller_SCANSPEED_PERIOD_REG = scanSpeed; 
 1376              		.loc 1 1928 0
 1377 000a 044A     		ldr	r2, .L66
 1378 000c FB79     		ldrb	r3, [r7, #7]
 1379 000e 1370     		strb	r3, [r2]
1929:Generated_Source\PSoC5/CapSense_Controller.c **** }
 1380              		.loc 1 1929 0
 1381 0010 00BF     		nop
 1382 0012 0C37     		adds	r7, r7, #12
 1383              		.cfi_def_cfa_offset 4
 1384 0014 BD46     		mov	sp, r7
 1385              		.cfi_def_cfa_register 13
 1386              		@ sp needed
 1387 0016 80BC     		pop	{r7}
 1388              		.cfi_restore 7
 1389              		.cfi_def_cfa_offset 0
 1390 0018 7047     		bx	lr
 1391              	.L67:
 1392 001a 00BF     		.align	2
 1393              	.L66:
 1394 001c 86640040 		.word	1073767558
 1395              		.cfi_endproc
 1396              	.LFE17:
 1397              		.size	CapSense_Controller_SetScanSpeed, .-CapSense_Controller_SetScanSpeed
 1398              		.section	.text.CapSense_Controller_SetAnalogSwitchesSource,"ax",%progbits
 1399              		.align	2
 1400              		.global	CapSense_Controller_SetAnalogSwitchesSource
 1401              		.thumb
 1402              		.thumb_func
 1403              		.type	CapSense_Controller_SetAnalogSwitchesSource, %function
 1404              	CapSense_Controller_SetAnalogSwitchesSource:
 1405              	.LFB18:
1930:Generated_Source\PSoC5/CapSense_Controller.c **** 
1931:Generated_Source\PSoC5/CapSense_Controller.c **** 
1932:Generated_Source\PSoC5/CapSense_Controller.c **** #if (CapSense_Controller_PRS_OPTIONS)
1933:Generated_Source\PSoC5/CapSense_Controller.c ****     /*******************************************************************************
1934:Generated_Source\PSoC5/CapSense_Controller.c ****     * Function Name: CapSense_Controller_SetAnalogSwitchesSource
1935:Generated_Source\PSoC5/CapSense_Controller.c ****     ********************************************************************************
1936:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1937:Generated_Source\PSoC5/CapSense_Controller.c ****     * Summary:
1938:Generated_Source\PSoC5/CapSense_Controller.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1939:Generated_Source\PSoC5/CapSense_Controller.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1940:Generated_Source\PSoC5/CapSense_Controller.c ****     *  This function is used in auto-tuning procedure.
1941:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1942:Generated_Source\PSoC5/CapSense_Controller.c ****     * Parameters:
1943:Generated_Source\PSoC5/CapSense_Controller.c ****     *  src:  analog switches source:
1944:Generated_Source\PSoC5/CapSense_Controller.c ****     *           CapSense_Controller_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1945:Generated_Source\PSoC5/CapSense_Controller.c ****     *           CapSense_Controller_ANALOG_SWITCHES_SRC_PRS - selects PRS
1946:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1947:Generated_Source\PSoC5/CapSense_Controller.c ****     * Return:
1948:Generated_Source\PSoC5/CapSense_Controller.c ****     *  None
1949:Generated_Source\PSoC5/CapSense_Controller.c ****     *
1950:Generated_Source\PSoC5/CapSense_Controller.c ****     * Reentrant:
1951:Generated_Source\PSoC5/CapSense_Controller.c ****     *  No
1952:Generated_Source\PSoC5/CapSense_Controller.c ****     *******************************************************************************/
1953:Generated_Source\PSoC5/CapSense_Controller.c ****     void CapSense_Controller_SetAnalogSwitchesSource(uint8 src)
1954:Generated_Source\PSoC5/CapSense_Controller.c ****                       
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 60


1955:Generated_Source\PSoC5/CapSense_Controller.c ****     {
 1406              		.loc 1 1955 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 8
 1409              		@ frame_needed = 1, uses_anonymous_args = 0
 1410              		@ link register save eliminated.
 1411 0000 80B4     		push	{r7}
 1412              		.cfi_def_cfa_offset 4
 1413              		.cfi_offset 7, -4
 1414 0002 83B0     		sub	sp, sp, #12
 1415              		.cfi_def_cfa_offset 16
 1416 0004 00AF     		add	r7, sp, #0
 1417              		.cfi_def_cfa_register 7
 1418 0006 0346     		mov	r3, r0
 1419 0008 FB71     		strb	r3, [r7, #7]
1956:Generated_Source\PSoC5/CapSense_Controller.c ****         if(src == CapSense_Controller_ANALOG_SWITCHES_SRC_PRESCALER)
 1420              		.loc 1 1956 0
 1421 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1422 000c 012B     		cmp	r3, #1
 1423 000e 08D1     		bne	.L69
1957:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1958:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_CONTROL_REG &= (uint8)~0x10u;
 1424              		.loc 1 1958 0
 1425 0010 0A4A     		ldr	r2, .L72
 1426 0012 0A4B     		ldr	r3, .L72
 1427 0014 1B78     		ldrb	r3, [r3]
 1428 0016 DBB2     		uxtb	r3, r3
 1429 0018 23F01003 		bic	r3, r3, #16
 1430 001c DBB2     		uxtb	r3, r3
 1431 001e 1370     		strb	r3, [r2]
1959:Generated_Source\PSoC5/CapSense_Controller.c ****         }
1960:Generated_Source\PSoC5/CapSense_Controller.c ****         else
1961:Generated_Source\PSoC5/CapSense_Controller.c ****         {
1962:Generated_Source\PSoC5/CapSense_Controller.c ****             CapSense_Controller_CONTROL_REG |= 0x10u;
1963:Generated_Source\PSoC5/CapSense_Controller.c ****         }
1964:Generated_Source\PSoC5/CapSense_Controller.c ****     }
 1432              		.loc 1 1964 0
 1433 0020 07E0     		b	.L71
 1434              	.L69:
1962:Generated_Source\PSoC5/CapSense_Controller.c ****         }
 1435              		.loc 1 1962 0
 1436 0022 064A     		ldr	r2, .L72
 1437 0024 054B     		ldr	r3, .L72
 1438 0026 1B78     		ldrb	r3, [r3]
 1439 0028 DBB2     		uxtb	r3, r3
 1440 002a 43F01003 		orr	r3, r3, #16
 1441 002e DBB2     		uxtb	r3, r3
 1442 0030 1370     		strb	r3, [r2]
 1443              	.L71:
 1444              		.loc 1 1964 0
 1445 0032 00BF     		nop
 1446 0034 0C37     		adds	r7, r7, #12
 1447              		.cfi_def_cfa_offset 4
 1448 0036 BD46     		mov	sp, r7
 1449              		.cfi_def_cfa_register 13
 1450              		@ sp needed
 1451 0038 80BC     		pop	{r7}
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 61


 1452              		.cfi_restore 7
 1453              		.cfi_def_cfa_offset 0
 1454 003a 7047     		bx	lr
 1455              	.L73:
 1456              		.align	2
 1457              	.L72:
 1458 003c 72640040 		.word	1073767538
 1459              		.cfi_endproc
 1460              	.LFE18:
 1461              		.size	CapSense_Controller_SetAnalogSwitchesSource, .-CapSense_Controller_SetAnalogSwitchesSource
 1462              		.text
 1463              	.Letext0:
 1464              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1465              		.section	.debug_info,"",%progbits
 1466              	.Ldebug_info0:
 1467 0000 50050000 		.4byte	0x550
 1468 0004 0400     		.2byte	0x4
 1469 0006 00000000 		.4byte	.Ldebug_abbrev0
 1470 000a 04       		.byte	0x4
 1471 000b 01       		.uleb128 0x1
 1472 000c 28000000 		.4byte	.LASF62
 1473 0010 0C       		.byte	0xc
 1474 0011 94040000 		.4byte	.LASF63
 1475 0015 07020000 		.4byte	.LASF64
 1476 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1477 001d 00000000 		.4byte	0
 1478 0021 00000000 		.4byte	.Ldebug_line0
 1479 0025 02       		.uleb128 0x2
 1480 0026 01       		.byte	0x1
 1481 0027 06       		.byte	0x6
 1482 0028 42010000 		.4byte	.LASF0
 1483 002c 02       		.uleb128 0x2
 1484 002d 01       		.byte	0x1
 1485 002e 08       		.byte	0x8
 1486 002f 5F040000 		.4byte	.LASF1
 1487 0033 02       		.uleb128 0x2
 1488 0034 02       		.byte	0x2
 1489 0035 05       		.byte	0x5
 1490 0036 C1040000 		.4byte	.LASF2
 1491 003a 02       		.uleb128 0x2
 1492 003b 02       		.byte	0x2
 1493 003c 07       		.byte	0x7
 1494 003d 1D030000 		.4byte	.LASF3
 1495 0041 02       		.uleb128 0x2
 1496 0042 04       		.byte	0x4
 1497 0043 05       		.byte	0x5
 1498 0044 CA010000 		.4byte	.LASF4
 1499 0048 02       		.uleb128 0x2
 1500 0049 04       		.byte	0x4
 1501 004a 07       		.byte	0x7
 1502 004b F0020000 		.4byte	.LASF5
 1503 004f 02       		.uleb128 0x2
 1504 0050 08       		.byte	0x8
 1505 0051 05       		.byte	0x5
 1506 0052 34010000 		.4byte	.LASF6
 1507 0056 02       		.uleb128 0x2
 1508 0057 08       		.byte	0x8
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 62


 1509 0058 07       		.byte	0x7
 1510 0059 DB000000 		.4byte	.LASF7
 1511 005d 03       		.uleb128 0x3
 1512 005e 04       		.byte	0x4
 1513 005f 05       		.byte	0x5
 1514 0060 696E7400 		.ascii	"int\000"
 1515 0064 02       		.uleb128 0x2
 1516 0065 04       		.byte	0x4
 1517 0066 07       		.byte	0x7
 1518 0067 C0020000 		.4byte	.LASF8
 1519 006b 04       		.uleb128 0x4
 1520 006c D9010000 		.4byte	.LASF9
 1521 0070 02       		.byte	0x2
 1522 0071 E401     		.2byte	0x1e4
 1523 0073 2C000000 		.4byte	0x2c
 1524 0077 04       		.uleb128 0x4
 1525 0078 00000000 		.4byte	.LASF10
 1526 007c 02       		.byte	0x2
 1527 007d E501     		.2byte	0x1e5
 1528 007f 3A000000 		.4byte	0x3a
 1529 0083 04       		.uleb128 0x4
 1530 0084 4F020000 		.4byte	.LASF11
 1531 0088 02       		.byte	0x2
 1532 0089 E601     		.2byte	0x1e6
 1533 008b 48000000 		.4byte	0x48
 1534 008f 02       		.uleb128 0x2
 1535 0090 04       		.byte	0x4
 1536 0091 04       		.byte	0x4
 1537 0092 0E040000 		.4byte	.LASF12
 1538 0096 02       		.uleb128 0x2
 1539 0097 08       		.byte	0x8
 1540 0098 04       		.byte	0x4
 1541 0099 DF010000 		.4byte	.LASF13
 1542 009d 02       		.uleb128 0x2
 1543 009e 01       		.byte	0x1
 1544 009f 08       		.byte	0x8
 1545 00a0 82050000 		.4byte	.LASF14
 1546 00a4 04       		.uleb128 0x4
 1547 00a5 1E040000 		.4byte	.LASF15
 1548 00a9 02       		.byte	0x2
 1549 00aa 8E02     		.2byte	0x28e
 1550 00ac B0000000 		.4byte	0xb0
 1551 00b0 05       		.uleb128 0x5
 1552 00b1 6B000000 		.4byte	0x6b
 1553 00b5 04       		.uleb128 0x4
 1554 00b6 D3010000 		.4byte	.LASF16
 1555 00ba 02       		.byte	0x2
 1556 00bb 8F02     		.2byte	0x28f
 1557 00bd C1000000 		.4byte	0xc1
 1558 00c1 05       		.uleb128 0x5
 1559 00c2 77000000 		.4byte	0x77
 1560 00c6 04       		.uleb128 0x4
 1561 00c7 5A030000 		.4byte	.LASF17
 1562 00cb 02       		.byte	0x2
 1563 00cc 9002     		.2byte	0x290
 1564 00ce D2000000 		.4byte	0xd2
 1565 00d2 05       		.uleb128 0x5
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 63


 1566 00d3 83000000 		.4byte	0x83
 1567 00d7 02       		.uleb128 0x2
 1568 00d8 08       		.byte	0x8
 1569 00d9 04       		.byte	0x4
 1570 00da AE030000 		.4byte	.LASF18
 1571 00de 02       		.uleb128 0x2
 1572 00df 04       		.byte	0x4
 1573 00e0 07       		.byte	0x7
 1574 00e1 60030000 		.4byte	.LASF19
 1575 00e5 06       		.uleb128 0x6
 1576 00e6 FE040000 		.4byte	.LASF20
 1577 00ea 01       		.byte	0x1
 1578 00eb 6F       		.byte	0x6f
 1579 00ec 00000000 		.4byte	.LFB0
 1580 00f0 48010000 		.4byte	.LFE0-.LFB0
 1581 00f4 01       		.uleb128 0x1
 1582 00f5 9C       		.byte	0x9c
 1583 00f6 09010000 		.4byte	0x109
 1584 00fa 07       		.uleb128 0x7
 1585 00fb BD050000 		.4byte	.LASF22
 1586 00ff 01       		.byte	0x1
 1587 0100 76       		.byte	0x76
 1588 0101 6B000000 		.4byte	0x6b
 1589 0105 02       		.uleb128 0x2
 1590 0106 91       		.byte	0x91
 1591 0107 77       		.sleb128 -9
 1592 0108 00       		.byte	0
 1593 0109 08       		.uleb128 0x8
 1594 010a 23040000 		.4byte	.LASF21
 1595 010e 01       		.byte	0x1
 1596 010f 5001     		.2byte	0x150
 1597 0111 00000000 		.4byte	.LFB1
 1598 0115 98000000 		.4byte	.LFE1-.LFB1
 1599 0119 01       		.uleb128 0x1
 1600 011a 9C       		.byte	0x9c
 1601 011b 2F010000 		.4byte	0x12f
 1602 011f 09       		.uleb128 0x9
 1603 0120 BD050000 		.4byte	.LASF22
 1604 0124 01       		.byte	0x1
 1605 0125 5201     		.2byte	0x152
 1606 0127 6B000000 		.4byte	0x6b
 1607 012b 02       		.uleb128 0x2
 1608 012c 91       		.byte	0x91
 1609 012d 77       		.sleb128 -9
 1610 012e 00       		.byte	0
 1611 012f 0A       		.uleb128 0xa
 1612 0130 87050000 		.4byte	.LASF23
 1613 0134 01       		.byte	0x1
 1614 0135 E901     		.2byte	0x1e9
 1615 0137 00000000 		.4byte	.LFB2
 1616 013b 30000000 		.4byte	.LFE2-.LFB2
 1617 013f 01       		.uleb128 0x1
 1618 0140 9C       		.byte	0x9c
 1619 0141 0A       		.uleb128 0xa
 1620 0142 7A020000 		.4byte	.LASF24
 1621 0146 01       		.byte	0x1
 1622 0147 0E02     		.2byte	0x20e
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 64


 1623 0149 00000000 		.4byte	.LFB3
 1624 014d 98000000 		.4byte	.LFE3-.LFB3
 1625 0151 01       		.uleb128 0x1
 1626 0152 9C       		.byte	0x9c
 1627 0153 0B       		.uleb128 0xb
 1628 0154 CD020000 		.4byte	.LASF33
 1629 0158 01       		.byte	0x1
 1630 0159 9802     		.2byte	0x298
 1631 015b 6B000000 		.4byte	0x6b
 1632 015f 00000000 		.4byte	.LFB4
 1633 0163 50000000 		.4byte	.LFE4-.LFB4
 1634 0167 01       		.uleb128 0x1
 1635 0168 9C       		.byte	0x9c
 1636 0169 9B010000 		.4byte	0x19b
 1637 016d 0C       		.uleb128 0xc
 1638 016e 1F000000 		.4byte	.LASF27
 1639 0172 01       		.byte	0x1
 1640 0173 9802     		.2byte	0x298
 1641 0175 6B000000 		.4byte	0x6b
 1642 0179 02       		.uleb128 0x2
 1643 017a 91       		.byte	0x91
 1644 017b 6F       		.sleb128 -17
 1645 017c 0D       		.uleb128 0xd
 1646 017d 706F7300 		.ascii	"pos\000"
 1647 0181 01       		.byte	0x1
 1648 0182 9A02     		.2byte	0x29a
 1649 0184 6B000000 		.4byte	0x6b
 1650 0188 02       		.uleb128 0x2
 1651 0189 91       		.byte	0x91
 1652 018a 77       		.sleb128 -9
 1653 018b 09       		.uleb128 0x9
 1654 018c 07040000 		.4byte	.LASF25
 1655 0190 01       		.byte	0x1
 1656 0191 9B02     		.2byte	0x29b
 1657 0193 6B000000 		.4byte	0x6b
 1658 0197 02       		.uleb128 0x2
 1659 0198 91       		.byte	0x91
 1660 0199 76       		.sleb128 -10
 1661 019a 00       		.byte	0
 1662 019b 08       		.uleb128 0x8
 1663 019c 33050000 		.4byte	.LASF26
 1664 01a0 01       		.byte	0x1
 1665 01a1 3203     		.2byte	0x332
 1666 01a3 00000000 		.4byte	.LFB5
 1667 01a7 50000000 		.4byte	.LFE5-.LFB5
 1668 01ab 01       		.uleb128 0x1
 1669 01ac 9C       		.byte	0x9c
 1670 01ad D0010000 		.4byte	0x1d0
 1671 01b1 0C       		.uleb128 0xc
 1672 01b2 37030000 		.4byte	.LASF28
 1673 01b6 01       		.byte	0x1
 1674 01b7 3203     		.2byte	0x332
 1675 01b9 6B000000 		.4byte	0x6b
 1676 01bd 02       		.uleb128 0x2
 1677 01be 91       		.byte	0x91
 1678 01bf 6F       		.sleb128 -17
 1679 01c0 09       		.uleb128 0x9
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 65


 1680 01c1 CB040000 		.4byte	.LASF29
 1681 01c5 01       		.byte	0x1
 1682 01c6 3403     		.2byte	0x334
 1683 01c8 6B000000 		.4byte	0x6b
 1684 01cc 02       		.uleb128 0x2
 1685 01cd 91       		.byte	0x91
 1686 01ce 77       		.sleb128 -9
 1687 01cf 00       		.byte	0
 1688 01d0 08       		.uleb128 0x8
 1689 01d1 56020000 		.4byte	.LASF30
 1690 01d5 01       		.byte	0x1
 1691 01d6 A203     		.2byte	0x3a2
 1692 01d8 00000000 		.4byte	.LFB6
 1693 01dc 34000000 		.4byte	.LFE6-.LFB6
 1694 01e0 01       		.uleb128 0x1
 1695 01e1 9C       		.byte	0x9c
 1696 01e2 F6010000 		.4byte	0x1f6
 1697 01e6 0C       		.uleb128 0xc
 1698 01e7 30030000 		.4byte	.LASF31
 1699 01eb 01       		.byte	0x1
 1700 01ec A203     		.2byte	0x3a2
 1701 01ee 6B000000 		.4byte	0x6b
 1702 01f2 02       		.uleb128 0x2
 1703 01f3 91       		.byte	0x91
 1704 01f4 77       		.sleb128 -9
 1705 01f5 00       		.byte	0
 1706 01f6 0A       		.uleb128 0xa
 1707 01f7 6D040000 		.4byte	.LASF32
 1708 01fb 01       		.byte	0x1
 1709 01fc EF03     		.2byte	0x3ef
 1710 01fe 00000000 		.4byte	.LFB7
 1711 0202 58000000 		.4byte	.LFE7-.LFB7
 1712 0206 01       		.uleb128 0x1
 1713 0207 9C       		.byte	0x9c
 1714 0208 0E       		.uleb128 0xe
 1715 0209 02030000 		.4byte	.LASF65
 1716 020d 01       		.byte	0x1
 1717 020e 2404     		.2byte	0x424
 1718 0210 6B000000 		.4byte	0x6b
 1719 0214 00000000 		.4byte	.LFB8
 1720 0218 1C000000 		.4byte	.LFE8-.LFB8
 1721 021c 01       		.uleb128 0x1
 1722 021d 9C       		.byte	0x9c
 1723 021e 0B       		.uleb128 0xb
 1724 021f BA030000 		.4byte	.LASF34
 1725 0223 01       		.byte	0x1
 1726 0224 3D04     		.2byte	0x43d
 1727 0226 77000000 		.4byte	0x77
 1728 022a 00000000 		.4byte	.LFB9
 1729 022e 20000000 		.4byte	.LFE9-.LFB9
 1730 0232 01       		.uleb128 0x1
 1731 0233 9C       		.byte	0x9c
 1732 0234 48020000 		.4byte	0x248
 1733 0238 0C       		.uleb128 0xc
 1734 0239 30030000 		.4byte	.LASF31
 1735 023d 01       		.byte	0x1
 1736 023e 3D04     		.2byte	0x43d
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 66


 1737 0240 6B000000 		.4byte	0x6b
 1738 0244 02       		.uleb128 0x2
 1739 0245 91       		.byte	0x91
 1740 0246 77       		.sleb128 -9
 1741 0247 00       		.byte	0
 1742 0248 08       		.uleb128 0x8
 1743 0249 F2000000 		.4byte	.LASF35
 1744 024d 01       		.byte	0x1
 1745 024e 5204     		.2byte	0x452
 1746 0250 00000000 		.4byte	.LFB10
 1747 0254 28000000 		.4byte	.LFE10-.LFB10
 1748 0258 01       		.uleb128 0x1
 1749 0259 9C       		.byte	0x9c
 1750 025a 6C020000 		.4byte	0x26c
 1751 025e 0D       		.uleb128 0xd
 1752 025f 6900     		.ascii	"i\000"
 1753 0261 01       		.byte	0x1
 1754 0262 5404     		.2byte	0x454
 1755 0264 6B000000 		.4byte	0x6b
 1756 0268 02       		.uleb128 0x2
 1757 0269 91       		.byte	0x91
 1758 026a 77       		.sleb128 -9
 1759 026b 00       		.byte	0
 1760 026c 08       		.uleb128 0x8
 1761 026d E6030000 		.4byte	.LASF36
 1762 0271 01       		.byte	0x1
 1763 0272 E804     		.2byte	0x4e8
 1764 0274 00000000 		.4byte	.LFB11
 1765 0278 6C000000 		.4byte	.LFE11-.LFB11
 1766 027c 01       		.uleb128 0x1
 1767 027d 9C       		.byte	0x9c
 1768 027e B0020000 		.4byte	0x2b0
 1769 0282 0C       		.uleb128 0xc
 1770 0283 30030000 		.4byte	.LASF31
 1771 0287 01       		.byte	0x1
 1772 0288 E804     		.2byte	0x4e8
 1773 028a 6B000000 		.4byte	0x6b
 1774 028e 02       		.uleb128 0x2
 1775 028f 91       		.byte	0x91
 1776 0290 6F       		.sleb128 -17
 1777 0291 09       		.uleb128 0x9
 1778 0292 93020000 		.4byte	.LASF37
 1779 0296 01       		.byte	0x1
 1780 0297 EA04     		.2byte	0x4ea
 1781 0299 6B000000 		.4byte	0x6b
 1782 029d 02       		.uleb128 0x2
 1783 029e 91       		.byte	0x91
 1784 029f 77       		.sleb128 -9
 1785 02a0 09       		.uleb128 0x9
 1786 02a1 75020000 		.4byte	.LASF38
 1787 02a5 01       		.byte	0x1
 1788 02a6 EB04     		.2byte	0x4eb
 1789 02a8 6B000000 		.4byte	0x6b
 1790 02ac 02       		.uleb128 0x2
 1791 02ad 91       		.byte	0x91
 1792 02ae 76       		.sleb128 -10
 1793 02af 00       		.byte	0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 67


 1794 02b0 08       		.uleb128 0x8
 1795 02b1 4E010000 		.4byte	.LASF39
 1796 02b5 01       		.byte	0x1
 1797 02b6 3D05     		.2byte	0x53d
 1798 02b8 00000000 		.4byte	.LFB12
 1799 02bc 70000000 		.4byte	.LFE12-.LFB12
 1800 02c0 01       		.uleb128 0x1
 1801 02c1 9C       		.byte	0x9c
 1802 02c2 F4020000 		.4byte	0x2f4
 1803 02c6 0C       		.uleb128 0xc
 1804 02c7 30030000 		.4byte	.LASF31
 1805 02cb 01       		.byte	0x1
 1806 02cc 3D05     		.2byte	0x53d
 1807 02ce 6B000000 		.4byte	0x6b
 1808 02d2 02       		.uleb128 0x2
 1809 02d3 91       		.byte	0x91
 1810 02d4 6F       		.sleb128 -17
 1811 02d5 09       		.uleb128 0x9
 1812 02d6 93020000 		.4byte	.LASF37
 1813 02da 01       		.byte	0x1
 1814 02db 3F05     		.2byte	0x53f
 1815 02dd 6B000000 		.4byte	0x6b
 1816 02e1 02       		.uleb128 0x2
 1817 02e2 91       		.byte	0x91
 1818 02e3 77       		.sleb128 -9
 1819 02e4 09       		.uleb128 0x9
 1820 02e5 75020000 		.4byte	.LASF38
 1821 02e9 01       		.byte	0x1
 1822 02ea 4005     		.2byte	0x540
 1823 02ec 6B000000 		.4byte	0x6b
 1824 02f0 02       		.uleb128 0x2
 1825 02f1 91       		.byte	0x91
 1826 02f2 76       		.sleb128 -10
 1827 02f3 00       		.byte	0
 1828 02f4 08       		.uleb128 0x8
 1829 02f5 2B060000 		.4byte	.LASF40
 1830 02f9 01       		.byte	0x1
 1831 02fa 9105     		.2byte	0x591
 1832 02fc 00000000 		.4byte	.LFB13
 1833 0300 5C000000 		.4byte	.LFE13-.LFB13
 1834 0304 01       		.uleb128 0x1
 1835 0305 9C       		.byte	0x9c
 1836 0306 1A030000 		.4byte	0x31a
 1837 030a 0C       		.uleb128 0xc
 1838 030b 30030000 		.4byte	.LASF31
 1839 030f 01       		.byte	0x1
 1840 0310 9105     		.2byte	0x591
 1841 0312 6B000000 		.4byte	0x6b
 1842 0316 02       		.uleb128 0x2
 1843 0317 91       		.byte	0x91
 1844 0318 77       		.sleb128 -9
 1845 0319 00       		.byte	0
 1846 031a 08       		.uleb128 0x8
 1847 031b AD010000 		.4byte	.LASF41
 1848 031f 01       		.byte	0x1
 1849 0320 3906     		.2byte	0x639
 1850 0322 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 68


 1851 0326 98000000 		.4byte	.LFE14-.LFB14
 1852 032a 01       		.uleb128 0x1
 1853 032b 9C       		.byte	0x9c
 1854 032c 40030000 		.4byte	0x340
 1855 0330 0C       		.uleb128 0xc
 1856 0331 30030000 		.4byte	.LASF31
 1857 0335 01       		.byte	0x1
 1858 0336 3906     		.2byte	0x639
 1859 0338 6B000000 		.4byte	0x6b
 1860 033c 02       		.uleb128 0x2
 1861 033d 91       		.byte	0x91
 1862 033e 77       		.sleb128 -9
 1863 033f 00       		.byte	0
 1864 0340 0F       		.uleb128 0xf
 1865 0341 13010000 		.4byte	.LASF42
 1866 0345 01       		.byte	0x1
 1867 0346 4707     		.2byte	0x747
 1868 0348 00000000 		.4byte	.LFB15
 1869 034c 2C000000 		.4byte	.LFE15-.LFB15
 1870 0350 01       		.uleb128 0x1
 1871 0351 9C       		.byte	0x9c
 1872 0352 66030000 		.4byte	0x366
 1873 0356 0C       		.uleb128 0xc
 1874 0357 14040000 		.4byte	.LASF43
 1875 035b 01       		.byte	0x1
 1876 035c 4707     		.2byte	0x747
 1877 035e 6B000000 		.4byte	0x6b
 1878 0362 02       		.uleb128 0x2
 1879 0363 91       		.byte	0x91
 1880 0364 77       		.sleb128 -9
 1881 0365 00       		.byte	0
 1882 0366 0B       		.uleb128 0xb
 1883 0367 3E040000 		.4byte	.LASF44
 1884 036b 01       		.byte	0x1
 1885 036c 6407     		.2byte	0x764
 1886 036e 6B000000 		.4byte	0x6b
 1887 0372 00000000 		.4byte	.LFB16
 1888 0376 20000000 		.4byte	.LFE16-.LFB16
 1889 037a 01       		.uleb128 0x1
 1890 037b 9C       		.byte	0x9c
 1891 037c 90030000 		.4byte	0x390
 1892 0380 09       		.uleb128 0x9
 1893 0381 14040000 		.4byte	.LASF43
 1894 0385 01       		.byte	0x1
 1895 0386 6607     		.2byte	0x766
 1896 0388 6B000000 		.4byte	0x6b
 1897 038c 02       		.uleb128 0x2
 1898 038d 91       		.byte	0x91
 1899 038e 77       		.sleb128 -9
 1900 038f 00       		.byte	0
 1901 0390 0F       		.uleb128 0xf
 1902 0391 70010000 		.4byte	.LASF45
 1903 0395 01       		.byte	0x1
 1904 0396 8607     		.2byte	0x786
 1905 0398 00000000 		.4byte	.LFB17
 1906 039c 20000000 		.4byte	.LFE17-.LFB17
 1907 03a0 01       		.uleb128 0x1
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 69


 1908 03a1 9C       		.byte	0x9c
 1909 03a2 B6030000 		.4byte	0x3b6
 1910 03a6 0C       		.uleb128 0xc
 1911 03a7 DC030000 		.4byte	.LASF46
 1912 03ab 01       		.byte	0x1
 1913 03ac 8607     		.2byte	0x786
 1914 03ae 6B000000 		.4byte	0x6b
 1915 03b2 02       		.uleb128 0x2
 1916 03b3 91       		.byte	0x91
 1917 03b4 77       		.sleb128 -9
 1918 03b5 00       		.byte	0
 1919 03b6 0F       		.uleb128 0xf
 1920 03b7 D2040000 		.4byte	.LASF47
 1921 03bb 01       		.byte	0x1
 1922 03bc A107     		.2byte	0x7a1
 1923 03be 00000000 		.4byte	.LFB18
 1924 03c2 40000000 		.4byte	.LFE18-.LFB18
 1925 03c6 01       		.uleb128 0x1
 1926 03c7 9C       		.byte	0x9c
 1927 03c8 DC030000 		.4byte	0x3dc
 1928 03cc 10       		.uleb128 0x10
 1929 03cd 73726300 		.ascii	"src\000"
 1930 03d1 01       		.byte	0x1
 1931 03d2 A107     		.2byte	0x7a1
 1932 03d4 6B000000 		.4byte	0x6b
 1933 03d8 02       		.uleb128 0x2
 1934 03d9 91       		.byte	0x91
 1935 03da 77       		.sleb128 -9
 1936 03db 00       		.byte	0
 1937 03dc 07       		.uleb128 0x7
 1938 03dd A1050000 		.4byte	.LASF48
 1939 03e1 01       		.byte	0x1
 1940 03e2 16       		.byte	0x16
 1941 03e3 6B000000 		.4byte	0x6b
 1942 03e7 05       		.uleb128 0x5
 1943 03e8 03       		.byte	0x3
 1944 03e9 00000000 		.4byte	CapSense_Controller_initVar
 1945 03ed 11       		.uleb128 0x11
 1946 03ee 5B050000 		.4byte	.LASF49
 1947 03f2 01       		.byte	0x1
 1948 03f3 1E       		.byte	0x1e
 1949 03f4 6B000000 		.4byte	0x6b
 1950 03f8 05       		.uleb128 0x5
 1951 03f9 03       		.byte	0x3
 1952 03fa 00000000 		.4byte	CapSense_Controller_lowLevelTuningDone
 1953 03fe 11       		.uleb128 0x11
 1954 03ff 07000000 		.4byte	.LASF50
 1955 0403 01       		.byte	0x1
 1956 0404 19       		.byte	0x19
 1957 0405 B0000000 		.4byte	0xb0
 1958 0409 05       		.uleb128 0x5
 1959 040a 03       		.byte	0x3
 1960 040b 00000000 		.4byte	CapSense_Controller_csv
 1961 040f 11       		.uleb128 0x11
 1962 0410 8E030000 		.4byte	.LASF51
 1963 0414 01       		.byte	0x1
 1964 0415 1A       		.byte	0x1a
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 70


 1965 0416 B0000000 		.4byte	0xb0
 1966 041a 05       		.uleb128 0x5
 1967 041b 03       		.byte	0x3
 1968 041c 00000000 		.4byte	CapSense_Controller_sensorIndex
 1969 0420 12       		.uleb128 0x12
 1970 0421 77000000 		.4byte	0x77
 1971 0425 30040000 		.4byte	0x430
 1972 0429 13       		.uleb128 0x13
 1973 042a DE000000 		.4byte	0xde
 1974 042e 03       		.byte	0x3
 1975 042f 00       		.byte	0
 1976 0430 11       		.uleb128 0x11
 1977 0431 3C030000 		.4byte	.LASF52
 1978 0435 01       		.byte	0x1
 1979 0436 29       		.byte	0x29
 1980 0437 20040000 		.4byte	0x420
 1981 043b 05       		.uleb128 0x5
 1982 043c 03       		.byte	0x3
 1983 043d 00000000 		.4byte	CapSense_Controller_sensorRaw
 1984 0441 12       		.uleb128 0x12
 1985 0442 6B000000 		.4byte	0x6b
 1986 0446 51040000 		.4byte	0x451
 1987 044a 13       		.uleb128 0x13
 1988 044b DE000000 		.4byte	0xde
 1989 044f 00       		.byte	0
 1990 0450 00       		.byte	0
 1991 0451 11       		.uleb128 0x11
 1992 0452 69030000 		.4byte	.LASF53
 1993 0456 01       		.byte	0x1
 1994 0457 2B       		.byte	0x2b
 1995 0458 41040000 		.4byte	0x441
 1996 045c 05       		.uleb128 0x5
 1997 045d 03       		.byte	0x3
 1998 045e 00000000 		.4byte	CapSense_Controller_sensorEnableMask
 1999 0462 12       		.uleb128 0x12
 2000 0463 78040000 		.4byte	0x478
 2001 0467 72040000 		.4byte	0x472
 2002 046b 13       		.uleb128 0x13
 2003 046c DE000000 		.4byte	0xde
 2004 0470 03       		.byte	0x3
 2005 0471 00       		.byte	0
 2006 0472 14       		.uleb128 0x14
 2007 0473 04       		.byte	0x4
 2008 0474 6B000000 		.4byte	0x6b
 2009 0478 15       		.uleb128 0x15
 2010 0479 72040000 		.4byte	0x472
 2011 047d 11       		.uleb128 0x11
 2012 047e 17050000 		.4byte	.LASF54
 2013 0482 01       		.byte	0x1
 2014 0483 2E       		.byte	0x2e
 2015 0484 8E040000 		.4byte	0x48e
 2016 0488 05       		.uleb128 0x5
 2017 0489 03       		.byte	0x3
 2018 048a 00000000 		.4byte	CapSense_Controller_pcTable
 2019 048e 15       		.uleb128 0x15
 2020 048f 62040000 		.4byte	0x462
 2021 0493 12       		.uleb128 0x12
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 71


 2022 0494 A3040000 		.4byte	0x4a3
 2023 0498 A3040000 		.4byte	0x4a3
 2024 049c 13       		.uleb128 0x13
 2025 049d DE000000 		.4byte	0xde
 2026 04a1 03       		.byte	0x3
 2027 04a2 00       		.byte	0
 2028 04a3 15       		.uleb128 0x15
 2029 04a4 6B000000 		.4byte	0x6b
 2030 04a8 11       		.uleb128 0x11
 2031 04a9 0D060000 		.4byte	.LASF55
 2032 04ad 01       		.byte	0x1
 2033 04ae 35       		.byte	0x35
 2034 04af B9040000 		.4byte	0x4b9
 2035 04b3 05       		.uleb128 0x5
 2036 04b4 03       		.byte	0x3
 2037 04b5 00000000 		.4byte	CapSense_Controller_portTable
 2038 04b9 15       		.uleb128 0x15
 2039 04ba 93040000 		.4byte	0x493
 2040 04be 11       		.uleb128 0x11
 2041 04bf EF050000 		.4byte	.LASF56
 2042 04c3 01       		.byte	0x1
 2043 04c4 3C       		.byte	0x3c
 2044 04c5 CF040000 		.4byte	0x4cf
 2045 04c9 05       		.uleb128 0x5
 2046 04ca 03       		.byte	0x3
 2047 04cb 00000000 		.4byte	CapSense_Controller_maskTable
 2048 04cf 15       		.uleb128 0x15
 2049 04d0 93040000 		.4byte	0x493
 2050 04d4 12       		.uleb128 0x12
 2051 04d5 78040000 		.4byte	0x478
 2052 04d9 E4040000 		.4byte	0x4e4
 2053 04dd 13       		.uleb128 0x13
 2054 04de DE000000 		.4byte	0xde
 2055 04e2 07       		.byte	0x7
 2056 04e3 00       		.byte	0
 2057 04e4 11       		.uleb128 0x11
 2058 04e5 91010000 		.4byte	.LASF57
 2059 04e9 01       		.byte	0x1
 2060 04ea 43       		.byte	0x43
 2061 04eb F5040000 		.4byte	0x4f5
 2062 04ef 05       		.uleb128 0x5
 2063 04f0 03       		.byte	0x3
 2064 04f1 00000000 		.4byte	CapSense_Controller_csTable
 2065 04f5 15       		.uleb128 0x15
 2066 04f6 D4040000 		.4byte	0x4d4
 2067 04fa 12       		.uleb128 0x12
 2068 04fb 6B000000 		.4byte	0x6b
 2069 04ff 0A050000 		.4byte	0x50a
 2070 0503 13       		.uleb128 0x13
 2071 0504 DE000000 		.4byte	0xde
 2072 0508 03       		.byte	0x3
 2073 0509 00       		.byte	0
 2074 050a 11       		.uleb128 0x11
 2075 050b CE050000 		.4byte	.LASF58
 2076 050f 01       		.byte	0x1
 2077 0510 49       		.byte	0x49
 2078 0511 FA040000 		.4byte	0x4fa
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 72


 2079 0515 05       		.uleb128 0x5
 2080 0516 03       		.byte	0x3
 2081 0517 00000000 		.4byte	CapSense_Controller_idacSettings
 2082 051b 11       		.uleb128 0x11
 2083 051c B6000000 		.4byte	.LASF59
 2084 0520 01       		.byte	0x1
 2085 0521 4D       		.byte	0x4d
 2086 0522 FA040000 		.4byte	0x4fa
 2087 0526 05       		.uleb128 0x5
 2088 0527 03       		.byte	0x3
 2089 0528 00000000 		.4byte	CapSense_Controller_widgetResolution
 2090 052c 11       		.uleb128 0x11
 2091 052d 98020000 		.4byte	.LASF60
 2092 0531 01       		.byte	0x1
 2093 0532 54       		.byte	0x54
 2094 0533 FA040000 		.4byte	0x4fa
 2095 0537 05       		.uleb128 0x5
 2096 0538 03       		.byte	0x3
 2097 0539 00000000 		.4byte	CapSense_Controller_analogSwitchDivider
 2098 053d 11       		.uleb128 0x11
 2099 053e E6010000 		.4byte	.LASF61
 2100 0542 01       		.byte	0x1
 2101 0543 55       		.byte	0x55
 2102 0544 4E050000 		.4byte	0x54e
 2103 0548 05       		.uleb128 0x5
 2104 0549 03       		.byte	0x3
 2105 054a 00000000 		.4byte	CapSense_Controller_widgetNumber
 2106 054e 15       		.uleb128 0x15
 2107 054f 93040000 		.4byte	0x493
 2108 0553 00       		.byte	0
 2109              		.section	.debug_abbrev,"",%progbits
 2110              	.Ldebug_abbrev0:
 2111 0000 01       		.uleb128 0x1
 2112 0001 11       		.uleb128 0x11
 2113 0002 01       		.byte	0x1
 2114 0003 25       		.uleb128 0x25
 2115 0004 0E       		.uleb128 0xe
 2116 0005 13       		.uleb128 0x13
 2117 0006 0B       		.uleb128 0xb
 2118 0007 03       		.uleb128 0x3
 2119 0008 0E       		.uleb128 0xe
 2120 0009 1B       		.uleb128 0x1b
 2121 000a 0E       		.uleb128 0xe
 2122 000b 55       		.uleb128 0x55
 2123 000c 17       		.uleb128 0x17
 2124 000d 11       		.uleb128 0x11
 2125 000e 01       		.uleb128 0x1
 2126 000f 10       		.uleb128 0x10
 2127 0010 17       		.uleb128 0x17
 2128 0011 00       		.byte	0
 2129 0012 00       		.byte	0
 2130 0013 02       		.uleb128 0x2
 2131 0014 24       		.uleb128 0x24
 2132 0015 00       		.byte	0
 2133 0016 0B       		.uleb128 0xb
 2134 0017 0B       		.uleb128 0xb
 2135 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 73


 2136 0019 0B       		.uleb128 0xb
 2137 001a 03       		.uleb128 0x3
 2138 001b 0E       		.uleb128 0xe
 2139 001c 00       		.byte	0
 2140 001d 00       		.byte	0
 2141 001e 03       		.uleb128 0x3
 2142 001f 24       		.uleb128 0x24
 2143 0020 00       		.byte	0
 2144 0021 0B       		.uleb128 0xb
 2145 0022 0B       		.uleb128 0xb
 2146 0023 3E       		.uleb128 0x3e
 2147 0024 0B       		.uleb128 0xb
 2148 0025 03       		.uleb128 0x3
 2149 0026 08       		.uleb128 0x8
 2150 0027 00       		.byte	0
 2151 0028 00       		.byte	0
 2152 0029 04       		.uleb128 0x4
 2153 002a 16       		.uleb128 0x16
 2154 002b 00       		.byte	0
 2155 002c 03       		.uleb128 0x3
 2156 002d 0E       		.uleb128 0xe
 2157 002e 3A       		.uleb128 0x3a
 2158 002f 0B       		.uleb128 0xb
 2159 0030 3B       		.uleb128 0x3b
 2160 0031 05       		.uleb128 0x5
 2161 0032 49       		.uleb128 0x49
 2162 0033 13       		.uleb128 0x13
 2163 0034 00       		.byte	0
 2164 0035 00       		.byte	0
 2165 0036 05       		.uleb128 0x5
 2166 0037 35       		.uleb128 0x35
 2167 0038 00       		.byte	0
 2168 0039 49       		.uleb128 0x49
 2169 003a 13       		.uleb128 0x13
 2170 003b 00       		.byte	0
 2171 003c 00       		.byte	0
 2172 003d 06       		.uleb128 0x6
 2173 003e 2E       		.uleb128 0x2e
 2174 003f 01       		.byte	0x1
 2175 0040 3F       		.uleb128 0x3f
 2176 0041 19       		.uleb128 0x19
 2177 0042 03       		.uleb128 0x3
 2178 0043 0E       		.uleb128 0xe
 2179 0044 3A       		.uleb128 0x3a
 2180 0045 0B       		.uleb128 0xb
 2181 0046 3B       		.uleb128 0x3b
 2182 0047 0B       		.uleb128 0xb
 2183 0048 27       		.uleb128 0x27
 2184 0049 19       		.uleb128 0x19
 2185 004a 11       		.uleb128 0x11
 2186 004b 01       		.uleb128 0x1
 2187 004c 12       		.uleb128 0x12
 2188 004d 06       		.uleb128 0x6
 2189 004e 40       		.uleb128 0x40
 2190 004f 18       		.uleb128 0x18
 2191 0050 9642     		.uleb128 0x2116
 2192 0052 19       		.uleb128 0x19
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 74


 2193 0053 01       		.uleb128 0x1
 2194 0054 13       		.uleb128 0x13
 2195 0055 00       		.byte	0
 2196 0056 00       		.byte	0
 2197 0057 07       		.uleb128 0x7
 2198 0058 34       		.uleb128 0x34
 2199 0059 00       		.byte	0
 2200 005a 03       		.uleb128 0x3
 2201 005b 0E       		.uleb128 0xe
 2202 005c 3A       		.uleb128 0x3a
 2203 005d 0B       		.uleb128 0xb
 2204 005e 3B       		.uleb128 0x3b
 2205 005f 0B       		.uleb128 0xb
 2206 0060 49       		.uleb128 0x49
 2207 0061 13       		.uleb128 0x13
 2208 0062 02       		.uleb128 0x2
 2209 0063 18       		.uleb128 0x18
 2210 0064 00       		.byte	0
 2211 0065 00       		.byte	0
 2212 0066 08       		.uleb128 0x8
 2213 0067 2E       		.uleb128 0x2e
 2214 0068 01       		.byte	0x1
 2215 0069 3F       		.uleb128 0x3f
 2216 006a 19       		.uleb128 0x19
 2217 006b 03       		.uleb128 0x3
 2218 006c 0E       		.uleb128 0xe
 2219 006d 3A       		.uleb128 0x3a
 2220 006e 0B       		.uleb128 0xb
 2221 006f 3B       		.uleb128 0x3b
 2222 0070 05       		.uleb128 0x5
 2223 0071 27       		.uleb128 0x27
 2224 0072 19       		.uleb128 0x19
 2225 0073 11       		.uleb128 0x11
 2226 0074 01       		.uleb128 0x1
 2227 0075 12       		.uleb128 0x12
 2228 0076 06       		.uleb128 0x6
 2229 0077 40       		.uleb128 0x40
 2230 0078 18       		.uleb128 0x18
 2231 0079 9642     		.uleb128 0x2116
 2232 007b 19       		.uleb128 0x19
 2233 007c 01       		.uleb128 0x1
 2234 007d 13       		.uleb128 0x13
 2235 007e 00       		.byte	0
 2236 007f 00       		.byte	0
 2237 0080 09       		.uleb128 0x9
 2238 0081 34       		.uleb128 0x34
 2239 0082 00       		.byte	0
 2240 0083 03       		.uleb128 0x3
 2241 0084 0E       		.uleb128 0xe
 2242 0085 3A       		.uleb128 0x3a
 2243 0086 0B       		.uleb128 0xb
 2244 0087 3B       		.uleb128 0x3b
 2245 0088 05       		.uleb128 0x5
 2246 0089 49       		.uleb128 0x49
 2247 008a 13       		.uleb128 0x13
 2248 008b 02       		.uleb128 0x2
 2249 008c 18       		.uleb128 0x18
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 75


 2250 008d 00       		.byte	0
 2251 008e 00       		.byte	0
 2252 008f 0A       		.uleb128 0xa
 2253 0090 2E       		.uleb128 0x2e
 2254 0091 00       		.byte	0
 2255 0092 3F       		.uleb128 0x3f
 2256 0093 19       		.uleb128 0x19
 2257 0094 03       		.uleb128 0x3
 2258 0095 0E       		.uleb128 0xe
 2259 0096 3A       		.uleb128 0x3a
 2260 0097 0B       		.uleb128 0xb
 2261 0098 3B       		.uleb128 0x3b
 2262 0099 05       		.uleb128 0x5
 2263 009a 27       		.uleb128 0x27
 2264 009b 19       		.uleb128 0x19
 2265 009c 11       		.uleb128 0x11
 2266 009d 01       		.uleb128 0x1
 2267 009e 12       		.uleb128 0x12
 2268 009f 06       		.uleb128 0x6
 2269 00a0 40       		.uleb128 0x40
 2270 00a1 18       		.uleb128 0x18
 2271 00a2 9642     		.uleb128 0x2116
 2272 00a4 19       		.uleb128 0x19
 2273 00a5 00       		.byte	0
 2274 00a6 00       		.byte	0
 2275 00a7 0B       		.uleb128 0xb
 2276 00a8 2E       		.uleb128 0x2e
 2277 00a9 01       		.byte	0x1
 2278 00aa 3F       		.uleb128 0x3f
 2279 00ab 19       		.uleb128 0x19
 2280 00ac 03       		.uleb128 0x3
 2281 00ad 0E       		.uleb128 0xe
 2282 00ae 3A       		.uleb128 0x3a
 2283 00af 0B       		.uleb128 0xb
 2284 00b0 3B       		.uleb128 0x3b
 2285 00b1 05       		.uleb128 0x5
 2286 00b2 27       		.uleb128 0x27
 2287 00b3 19       		.uleb128 0x19
 2288 00b4 49       		.uleb128 0x49
 2289 00b5 13       		.uleb128 0x13
 2290 00b6 11       		.uleb128 0x11
 2291 00b7 01       		.uleb128 0x1
 2292 00b8 12       		.uleb128 0x12
 2293 00b9 06       		.uleb128 0x6
 2294 00ba 40       		.uleb128 0x40
 2295 00bb 18       		.uleb128 0x18
 2296 00bc 9742     		.uleb128 0x2117
 2297 00be 19       		.uleb128 0x19
 2298 00bf 01       		.uleb128 0x1
 2299 00c0 13       		.uleb128 0x13
 2300 00c1 00       		.byte	0
 2301 00c2 00       		.byte	0
 2302 00c3 0C       		.uleb128 0xc
 2303 00c4 05       		.uleb128 0x5
 2304 00c5 00       		.byte	0
 2305 00c6 03       		.uleb128 0x3
 2306 00c7 0E       		.uleb128 0xe
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 76


 2307 00c8 3A       		.uleb128 0x3a
 2308 00c9 0B       		.uleb128 0xb
 2309 00ca 3B       		.uleb128 0x3b
 2310 00cb 05       		.uleb128 0x5
 2311 00cc 49       		.uleb128 0x49
 2312 00cd 13       		.uleb128 0x13
 2313 00ce 02       		.uleb128 0x2
 2314 00cf 18       		.uleb128 0x18
 2315 00d0 00       		.byte	0
 2316 00d1 00       		.byte	0
 2317 00d2 0D       		.uleb128 0xd
 2318 00d3 34       		.uleb128 0x34
 2319 00d4 00       		.byte	0
 2320 00d5 03       		.uleb128 0x3
 2321 00d6 08       		.uleb128 0x8
 2322 00d7 3A       		.uleb128 0x3a
 2323 00d8 0B       		.uleb128 0xb
 2324 00d9 3B       		.uleb128 0x3b
 2325 00da 05       		.uleb128 0x5
 2326 00db 49       		.uleb128 0x49
 2327 00dc 13       		.uleb128 0x13
 2328 00dd 02       		.uleb128 0x2
 2329 00de 18       		.uleb128 0x18
 2330 00df 00       		.byte	0
 2331 00e0 00       		.byte	0
 2332 00e1 0E       		.uleb128 0xe
 2333 00e2 2E       		.uleb128 0x2e
 2334 00e3 00       		.byte	0
 2335 00e4 3F       		.uleb128 0x3f
 2336 00e5 19       		.uleb128 0x19
 2337 00e6 03       		.uleb128 0x3
 2338 00e7 0E       		.uleb128 0xe
 2339 00e8 3A       		.uleb128 0x3a
 2340 00e9 0B       		.uleb128 0xb
 2341 00ea 3B       		.uleb128 0x3b
 2342 00eb 05       		.uleb128 0x5
 2343 00ec 27       		.uleb128 0x27
 2344 00ed 19       		.uleb128 0x19
 2345 00ee 49       		.uleb128 0x49
 2346 00ef 13       		.uleb128 0x13
 2347 00f0 11       		.uleb128 0x11
 2348 00f1 01       		.uleb128 0x1
 2349 00f2 12       		.uleb128 0x12
 2350 00f3 06       		.uleb128 0x6
 2351 00f4 40       		.uleb128 0x40
 2352 00f5 18       		.uleb128 0x18
 2353 00f6 9742     		.uleb128 0x2117
 2354 00f8 19       		.uleb128 0x19
 2355 00f9 00       		.byte	0
 2356 00fa 00       		.byte	0
 2357 00fb 0F       		.uleb128 0xf
 2358 00fc 2E       		.uleb128 0x2e
 2359 00fd 01       		.byte	0x1
 2360 00fe 3F       		.uleb128 0x3f
 2361 00ff 19       		.uleb128 0x19
 2362 0100 03       		.uleb128 0x3
 2363 0101 0E       		.uleb128 0xe
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 77


 2364 0102 3A       		.uleb128 0x3a
 2365 0103 0B       		.uleb128 0xb
 2366 0104 3B       		.uleb128 0x3b
 2367 0105 05       		.uleb128 0x5
 2368 0106 27       		.uleb128 0x27
 2369 0107 19       		.uleb128 0x19
 2370 0108 11       		.uleb128 0x11
 2371 0109 01       		.uleb128 0x1
 2372 010a 12       		.uleb128 0x12
 2373 010b 06       		.uleb128 0x6
 2374 010c 40       		.uleb128 0x40
 2375 010d 18       		.uleb128 0x18
 2376 010e 9742     		.uleb128 0x2117
 2377 0110 19       		.uleb128 0x19
 2378 0111 01       		.uleb128 0x1
 2379 0112 13       		.uleb128 0x13
 2380 0113 00       		.byte	0
 2381 0114 00       		.byte	0
 2382 0115 10       		.uleb128 0x10
 2383 0116 05       		.uleb128 0x5
 2384 0117 00       		.byte	0
 2385 0118 03       		.uleb128 0x3
 2386 0119 08       		.uleb128 0x8
 2387 011a 3A       		.uleb128 0x3a
 2388 011b 0B       		.uleb128 0xb
 2389 011c 3B       		.uleb128 0x3b
 2390 011d 05       		.uleb128 0x5
 2391 011e 49       		.uleb128 0x49
 2392 011f 13       		.uleb128 0x13
 2393 0120 02       		.uleb128 0x2
 2394 0121 18       		.uleb128 0x18
 2395 0122 00       		.byte	0
 2396 0123 00       		.byte	0
 2397 0124 11       		.uleb128 0x11
 2398 0125 34       		.uleb128 0x34
 2399 0126 00       		.byte	0
 2400 0127 03       		.uleb128 0x3
 2401 0128 0E       		.uleb128 0xe
 2402 0129 3A       		.uleb128 0x3a
 2403 012a 0B       		.uleb128 0xb
 2404 012b 3B       		.uleb128 0x3b
 2405 012c 0B       		.uleb128 0xb
 2406 012d 49       		.uleb128 0x49
 2407 012e 13       		.uleb128 0x13
 2408 012f 3F       		.uleb128 0x3f
 2409 0130 19       		.uleb128 0x19
 2410 0131 02       		.uleb128 0x2
 2411 0132 18       		.uleb128 0x18
 2412 0133 00       		.byte	0
 2413 0134 00       		.byte	0
 2414 0135 12       		.uleb128 0x12
 2415 0136 01       		.uleb128 0x1
 2416 0137 01       		.byte	0x1
 2417 0138 49       		.uleb128 0x49
 2418 0139 13       		.uleb128 0x13
 2419 013a 01       		.uleb128 0x1
 2420 013b 13       		.uleb128 0x13
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 78


 2421 013c 00       		.byte	0
 2422 013d 00       		.byte	0
 2423 013e 13       		.uleb128 0x13
 2424 013f 21       		.uleb128 0x21
 2425 0140 00       		.byte	0
 2426 0141 49       		.uleb128 0x49
 2427 0142 13       		.uleb128 0x13
 2428 0143 2F       		.uleb128 0x2f
 2429 0144 0B       		.uleb128 0xb
 2430 0145 00       		.byte	0
 2431 0146 00       		.byte	0
 2432 0147 14       		.uleb128 0x14
 2433 0148 0F       		.uleb128 0xf
 2434 0149 00       		.byte	0
 2435 014a 0B       		.uleb128 0xb
 2436 014b 0B       		.uleb128 0xb
 2437 014c 49       		.uleb128 0x49
 2438 014d 13       		.uleb128 0x13
 2439 014e 00       		.byte	0
 2440 014f 00       		.byte	0
 2441 0150 15       		.uleb128 0x15
 2442 0151 26       		.uleb128 0x26
 2443 0152 00       		.byte	0
 2444 0153 49       		.uleb128 0x49
 2445 0154 13       		.uleb128 0x13
 2446 0155 00       		.byte	0
 2447 0156 00       		.byte	0
 2448 0157 00       		.byte	0
 2449              		.section	.debug_aranges,"",%progbits
 2450 0000 AC000000 		.4byte	0xac
 2451 0004 0200     		.2byte	0x2
 2452 0006 00000000 		.4byte	.Ldebug_info0
 2453 000a 04       		.byte	0x4
 2454 000b 00       		.byte	0
 2455 000c 0000     		.2byte	0
 2456 000e 0000     		.2byte	0
 2457 0010 00000000 		.4byte	.LFB0
 2458 0014 48010000 		.4byte	.LFE0-.LFB0
 2459 0018 00000000 		.4byte	.LFB1
 2460 001c 98000000 		.4byte	.LFE1-.LFB1
 2461 0020 00000000 		.4byte	.LFB2
 2462 0024 30000000 		.4byte	.LFE2-.LFB2
 2463 0028 00000000 		.4byte	.LFB3
 2464 002c 98000000 		.4byte	.LFE3-.LFB3
 2465 0030 00000000 		.4byte	.LFB4
 2466 0034 50000000 		.4byte	.LFE4-.LFB4
 2467 0038 00000000 		.4byte	.LFB5
 2468 003c 50000000 		.4byte	.LFE5-.LFB5
 2469 0040 00000000 		.4byte	.LFB6
 2470 0044 34000000 		.4byte	.LFE6-.LFB6
 2471 0048 00000000 		.4byte	.LFB7
 2472 004c 58000000 		.4byte	.LFE7-.LFB7
 2473 0050 00000000 		.4byte	.LFB8
 2474 0054 1C000000 		.4byte	.LFE8-.LFB8
 2475 0058 00000000 		.4byte	.LFB9
 2476 005c 20000000 		.4byte	.LFE9-.LFB9
 2477 0060 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 79


 2478 0064 28000000 		.4byte	.LFE10-.LFB10
 2479 0068 00000000 		.4byte	.LFB11
 2480 006c 6C000000 		.4byte	.LFE11-.LFB11
 2481 0070 00000000 		.4byte	.LFB12
 2482 0074 70000000 		.4byte	.LFE12-.LFB12
 2483 0078 00000000 		.4byte	.LFB13
 2484 007c 5C000000 		.4byte	.LFE13-.LFB13
 2485 0080 00000000 		.4byte	.LFB14
 2486 0084 98000000 		.4byte	.LFE14-.LFB14
 2487 0088 00000000 		.4byte	.LFB15
 2488 008c 2C000000 		.4byte	.LFE15-.LFB15
 2489 0090 00000000 		.4byte	.LFB16
 2490 0094 20000000 		.4byte	.LFE16-.LFB16
 2491 0098 00000000 		.4byte	.LFB17
 2492 009c 20000000 		.4byte	.LFE17-.LFB17
 2493 00a0 00000000 		.4byte	.LFB18
 2494 00a4 40000000 		.4byte	.LFE18-.LFB18
 2495 00a8 00000000 		.4byte	0
 2496 00ac 00000000 		.4byte	0
 2497              		.section	.debug_ranges,"",%progbits
 2498              	.Ldebug_ranges0:
 2499 0000 00000000 		.4byte	.LFB0
 2500 0004 48010000 		.4byte	.LFE0
 2501 0008 00000000 		.4byte	.LFB1
 2502 000c 98000000 		.4byte	.LFE1
 2503 0010 00000000 		.4byte	.LFB2
 2504 0014 30000000 		.4byte	.LFE2
 2505 0018 00000000 		.4byte	.LFB3
 2506 001c 98000000 		.4byte	.LFE3
 2507 0020 00000000 		.4byte	.LFB4
 2508 0024 50000000 		.4byte	.LFE4
 2509 0028 00000000 		.4byte	.LFB5
 2510 002c 50000000 		.4byte	.LFE5
 2511 0030 00000000 		.4byte	.LFB6
 2512 0034 34000000 		.4byte	.LFE6
 2513 0038 00000000 		.4byte	.LFB7
 2514 003c 58000000 		.4byte	.LFE7
 2515 0040 00000000 		.4byte	.LFB8
 2516 0044 1C000000 		.4byte	.LFE8
 2517 0048 00000000 		.4byte	.LFB9
 2518 004c 20000000 		.4byte	.LFE9
 2519 0050 00000000 		.4byte	.LFB10
 2520 0054 28000000 		.4byte	.LFE10
 2521 0058 00000000 		.4byte	.LFB11
 2522 005c 6C000000 		.4byte	.LFE11
 2523 0060 00000000 		.4byte	.LFB12
 2524 0064 70000000 		.4byte	.LFE12
 2525 0068 00000000 		.4byte	.LFB13
 2526 006c 5C000000 		.4byte	.LFE13
 2527 0070 00000000 		.4byte	.LFB14
 2528 0074 98000000 		.4byte	.LFE14
 2529 0078 00000000 		.4byte	.LFB15
 2530 007c 2C000000 		.4byte	.LFE15
 2531 0080 00000000 		.4byte	.LFB16
 2532 0084 20000000 		.4byte	.LFE16
 2533 0088 00000000 		.4byte	.LFB17
 2534 008c 20000000 		.4byte	.LFE17
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 80


 2535 0090 00000000 		.4byte	.LFB18
 2536 0094 40000000 		.4byte	.LFE18
 2537 0098 00000000 		.4byte	0
 2538 009c 00000000 		.4byte	0
 2539              		.section	.debug_line,"",%progbits
 2540              	.Ldebug_line0:
 2541 0000 5F020000 		.section	.debug_str,"MS",%progbits,1
 2541      02005000 
 2541      00000201 
 2541      FB0E0D00 
 2541      01010101 
 2542              	.LASF10:
 2543 0000 75696E74 		.ascii	"uint16\000"
 2543      313600
 2544              	.LASF50:
 2545 0007 43617053 		.ascii	"CapSense_Controller_csv\000"
 2545      656E7365 
 2545      5F436F6E 
 2545      74726F6C 
 2545      6C65725F 
 2546              	.LASF27:
 2547 001f 736E7349 		.ascii	"snsIndex\000"
 2547      6E646578 
 2547      00
 2548              	.LASF62:
 2549 0028 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2549      43313120 
 2549      352E342E 
 2549      31203230 
 2549      31363036 
 2550 005b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2550      20726576 
 2550      6973696F 
 2550      6E203233 
 2550      37373135 
 2551 008e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2551      66756E63 
 2551      74696F6E 
 2551      2D736563 
 2551      74696F6E 
 2552              	.LASF59:
 2553 00b6 43617053 		.ascii	"CapSense_Controller_widgetResolution\000"
 2553      656E7365 
 2553      5F436F6E 
 2553      74726F6C 
 2553      6C65725F 
 2554              	.LASF7:
 2555 00db 6C6F6E67 		.ascii	"long long unsigned int\000"
 2555      206C6F6E 
 2555      6720756E 
 2555      7369676E 
 2555      65642069 
 2556              	.LASF35:
 2557 00f2 43617053 		.ascii	"CapSense_Controller_ClearSensors\000"
 2557      656E7365 
 2557      5F436F6E 
 2557      74726F6C 
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 81


 2557      6C65725F 
 2558              	.LASF42:
 2559 0113 43617053 		.ascii	"CapSense_Controller_SetPrescaler\000"
 2559      656E7365 
 2559      5F436F6E 
 2559      74726F6C 
 2559      6C65725F 
 2560              	.LASF6:
 2561 0134 6C6F6E67 		.ascii	"long long int\000"
 2561      206C6F6E 
 2561      6720696E 
 2561      7400
 2562              	.LASF0:
 2563 0142 7369676E 		.ascii	"signed char\000"
 2563      65642063 
 2563      68617200 
 2564              	.LASF39:
 2565 014e 43617053 		.ascii	"CapSense_Controller_DisableSensor\000"
 2565      656E7365 
 2565      5F436F6E 
 2565      74726F6C 
 2565      6C65725F 
 2566              	.LASF45:
 2567 0170 43617053 		.ascii	"CapSense_Controller_SetScanSpeed\000"
 2567      656E7365 
 2567      5F436F6E 
 2567      74726F6C 
 2567      6C65725F 
 2568              	.LASF57:
 2569 0191 43617053 		.ascii	"CapSense_Controller_csTable\000"
 2569      656E7365 
 2569      5F436F6E 
 2569      74726F6C 
 2569      6C65725F 
 2570              	.LASF41:
 2571 01ad 43617053 		.ascii	"CapSense_Controller_PostScan\000"
 2571      656E7365 
 2571      5F436F6E 
 2571      74726F6C 
 2571      6C65725F 
 2572              	.LASF4:
 2573 01ca 6C6F6E67 		.ascii	"long int\000"
 2573      20696E74 
 2573      00
 2574              	.LASF16:
 2575 01d3 72656731 		.ascii	"reg16\000"
 2575      3600
 2576              	.LASF9:
 2577 01d9 75696E74 		.ascii	"uint8\000"
 2577      3800
 2578              	.LASF13:
 2579 01df 646F7562 		.ascii	"double\000"
 2579      6C6500
 2580              	.LASF61:
 2581 01e6 43617053 		.ascii	"CapSense_Controller_widgetNumber\000"
 2581      656E7365 
 2581      5F436F6E 
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 82


 2581      74726F6C 
 2581      6C65725F 
 2582              	.LASF64:
 2583 0207 433A5C55 		.ascii	"C:\\Users\\Ahmad Negm\\Desktop\\6.115\\FP\\psoc_vga"
 2583      73657273 
 2583      5C41686D 
 2583      6164204E 
 2583      65676D5C 
 2584 0234 5F70726F 		.ascii	"_project Dev Kit\\vga.cydsn\000"
 2584      6A656374 
 2584      20446576 
 2584      204B6974 
 2584      5C766761 
 2585              	.LASF11:
 2586 024f 75696E74 		.ascii	"uint32\000"
 2586      333200
 2587              	.LASF30:
 2588 0256 43617053 		.ascii	"CapSense_Controller_ScanSensor\000"
 2588      656E7365 
 2588      5F436F6E 
 2588      74726F6C 
 2588      6C65725F 
 2589              	.LASF38:
 2590 0275 6D61736B 		.ascii	"mask\000"
 2590      00
 2591              	.LASF24:
 2592 027a 43617053 		.ascii	"CapSense_Controller_Stop\000"
 2592      656E7365 
 2592      5F436F6E 
 2592      74726F6C 
 2592      6C65725F 
 2593              	.LASF37:
 2594 0293 706F7274 		.ascii	"port\000"
 2594      00
 2595              	.LASF60:
 2596 0298 43617053 		.ascii	"CapSense_Controller_analogSwitchDivider\000"
 2596      656E7365 
 2596      5F436F6E 
 2596      74726F6C 
 2596      6C65725F 
 2597              	.LASF8:
 2598 02c0 756E7369 		.ascii	"unsigned int\000"
 2598      676E6564 
 2598      20696E74 
 2598      00
 2599              	.LASF33:
 2600 02cd 43617053 		.ascii	"CapSense_Controller_FindNextSensor\000"
 2600      656E7365 
 2600      5F436F6E 
 2600      74726F6C 
 2600      6C65725F 
 2601              	.LASF5:
 2602 02f0 6C6F6E67 		.ascii	"long unsigned int\000"
 2602      20756E73 
 2602      69676E65 
 2602      6420696E 
 2602      7400
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 83


 2603              	.LASF65:
 2604 0302 43617053 		.ascii	"CapSense_Controller_IsBusy\000"
 2604      656E7365 
 2604      5F436F6E 
 2604      74726F6C 
 2604      6C65725F 
 2605              	.LASF3:
 2606 031d 73686F72 		.ascii	"short unsigned int\000"
 2606      7420756E 
 2606      7369676E 
 2606      65642069 
 2606      6E7400
 2607              	.LASF31:
 2608 0330 73656E73 		.ascii	"sensor\000"
 2608      6F7200
 2609              	.LASF28:
 2610 0337 736C6F74 		.ascii	"slot\000"
 2610      00
 2611              	.LASF52:
 2612 033c 43617053 		.ascii	"CapSense_Controller_sensorRaw\000"
 2612      656E7365 
 2612      5F436F6E 
 2612      74726F6C 
 2612      6C65725F 
 2613              	.LASF17:
 2614 035a 72656733 		.ascii	"reg32\000"
 2614      3200
 2615              	.LASF19:
 2616 0360 73697A65 		.ascii	"sizetype\000"
 2616      74797065 
 2616      00
 2617              	.LASF53:
 2618 0369 43617053 		.ascii	"CapSense_Controller_sensorEnableMask\000"
 2618      656E7365 
 2618      5F436F6E 
 2618      74726F6C 
 2618      6C65725F 
 2619              	.LASF51:
 2620 038e 43617053 		.ascii	"CapSense_Controller_sensorIndex\000"
 2620      656E7365 
 2620      5F436F6E 
 2620      74726F6C 
 2620      6C65725F 
 2621              	.LASF18:
 2622 03ae 6C6F6E67 		.ascii	"long double\000"
 2622      20646F75 
 2622      626C6500 
 2623              	.LASF34:
 2624 03ba 43617053 		.ascii	"CapSense_Controller_ReadSensorRaw\000"
 2624      656E7365 
 2624      5F436F6E 
 2624      74726F6C 
 2624      6C65725F 
 2625              	.LASF46:
 2626 03dc 7363616E 		.ascii	"scanSpeed\000"
 2626      53706565 
 2626      6400
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 84


 2627              	.LASF36:
 2628 03e6 43617053 		.ascii	"CapSense_Controller_EnableSensor\000"
 2628      656E7365 
 2628      5F436F6E 
 2628      74726F6C 
 2628      6C65725F 
 2629              	.LASF25:
 2630 0407 656E4D61 		.ascii	"enMask\000"
 2630      736B00
 2631              	.LASF12:
 2632 040e 666C6F61 		.ascii	"float\000"
 2632      7400
 2633              	.LASF43:
 2634 0414 70726573 		.ascii	"prescaler\000"
 2634      63616C65 
 2634      7200
 2635              	.LASF15:
 2636 041e 72656738 		.ascii	"reg8\000"
 2636      00
 2637              	.LASF21:
 2638 0423 43617053 		.ascii	"CapSense_Controller_Enable\000"
 2638      656E7365 
 2638      5F436F6E 
 2638      74726F6C 
 2638      6C65725F 
 2639              	.LASF44:
 2640 043e 43617053 		.ascii	"CapSense_Controller_GetPrescaler\000"
 2640      656E7365 
 2640      5F436F6E 
 2640      74726F6C 
 2640      6C65725F 
 2641              	.LASF1:
 2642 045f 756E7369 		.ascii	"unsigned char\000"
 2642      676E6564 
 2642      20636861 
 2642      7200
 2643              	.LASF32:
 2644 046d 43617053 		.ascii	"CapSense_Controller_ScanEnabledWidgets\000"
 2644      656E7365 
 2644      5F436F6E 
 2644      74726F6C 
 2644      6C65725F 
 2645              	.LASF63:
 2646 0494 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_Controller.c\000"
 2646      72617465 
 2646      645F536F 
 2646      75726365 
 2646      5C50536F 
 2647              	.LASF2:
 2648 04c1 73686F72 		.ascii	"short int\000"
 2648      7420696E 
 2648      7400
 2649              	.LASF29:
 2650 04cb 77696467 		.ascii	"widget\000"
 2650      657400
 2651              	.LASF47:
 2652 04d2 43617053 		.ascii	"CapSense_Controller_SetAnalogSwitchesSource\000"
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 85


 2652      656E7365 
 2652      5F436F6E 
 2652      74726F6C 
 2652      6C65725F 
 2653              	.LASF20:
 2654 04fe 43617053 		.ascii	"CapSense_Controller_Init\000"
 2654      656E7365 
 2654      5F436F6E 
 2654      74726F6C 
 2654      6C65725F 
 2655              	.LASF54:
 2656 0517 43617053 		.ascii	"CapSense_Controller_pcTable\000"
 2656      656E7365 
 2656      5F436F6E 
 2656      74726F6C 
 2656      6C65725F 
 2657              	.LASF26:
 2658 0533 43617053 		.ascii	"CapSense_Controller_SetScanSlotSettings\000"
 2658      656E7365 
 2658      5F436F6E 
 2658      74726F6C 
 2658      6C65725F 
 2659              	.LASF49:
 2660 055b 43617053 		.ascii	"CapSense_Controller_lowLevelTuningDone\000"
 2660      656E7365 
 2660      5F436F6E 
 2660      74726F6C 
 2660      6C65725F 
 2661              	.LASF14:
 2662 0582 63686172 		.ascii	"char\000"
 2662      00
 2663              	.LASF23:
 2664 0587 43617053 		.ascii	"CapSense_Controller_Start\000"
 2664      656E7365 
 2664      5F436F6E 
 2664      74726F6C 
 2664      6C65725F 
 2665              	.LASF48:
 2666 05a1 43617053 		.ascii	"CapSense_Controller_initVar\000"
 2666      656E7365 
 2666      5F436F6E 
 2666      74726F6C 
 2666      6C65725F 
 2667              	.LASF22:
 2668 05bd 656E6162 		.ascii	"enableInterrupts\000"
 2668      6C65496E 
 2668      74657272 
 2668      75707473 
 2668      00
 2669              	.LASF58:
 2670 05ce 43617053 		.ascii	"CapSense_Controller_idacSettings\000"
 2670      656E7365 
 2670      5F436F6E 
 2670      74726F6C 
 2670      6C65725F 
 2671              	.LASF56:
 2672 05ef 43617053 		.ascii	"CapSense_Controller_maskTable\000"
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\ccUmKzO1.s 			page 86


 2672      656E7365 
 2672      5F436F6E 
 2672      74726F6C 
 2672      6C65725F 
 2673              	.LASF55:
 2674 060d 43617053 		.ascii	"CapSense_Controller_portTable\000"
 2674      656E7365 
 2674      5F436F6E 
 2674      74726F6C 
 2674      6C65725F 
 2675              	.LASF40:
 2676 062b 43617053 		.ascii	"CapSense_Controller_PreScan\000"
 2676      656E7365 
 2676      5F436F6E 
 2676      74726F6C 
 2676      6C65725F 
 2677              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
