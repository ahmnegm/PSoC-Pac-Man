ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Controller_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_Controller_rawFilterData1,8,4
  20              		.comm	CapSense_Controller_sensorBaseline,8,4
  21              		.comm	CapSense_Controller_sensorBaselineLow,4,4
  22              		.comm	CapSense_Controller_sensorSignal,4,4
  23              		.comm	CapSense_Controller_sensorOnMask,1,4
  24              		.comm	CapSense_Controller_lowBaselineResetCnt,4,4
  25              		.global	CapSense_Controller_fingerThreshold
  26              		.data
  27              		.align	2
  28              		.type	CapSense_Controller_fingerThreshold, %object
  29              		.size	CapSense_Controller_fingerThreshold, 4
  30              	CapSense_Controller_fingerThreshold:
  31 0000 64       		.byte	100
  32 0001 64       		.byte	100
  33 0002 64       		.byte	100
  34 0003 64       		.byte	100
  35              		.global	CapSense_Controller_noiseThreshold
  36              		.align	2
  37              		.type	CapSense_Controller_noiseThreshold, %object
  38              		.size	CapSense_Controller_noiseThreshold, 4
  39              	CapSense_Controller_noiseThreshold:
  40 0004 14       		.byte	20
  41 0005 14       		.byte	20
  42 0006 14       		.byte	20
  43 0007 14       		.byte	20
  44              		.global	CapSense_Controller_hysteresis
  45              		.align	2
  46              		.type	CapSense_Controller_hysteresis, %object
  47              		.size	CapSense_Controller_hysteresis, 4
  48              	CapSense_Controller_hysteresis:
  49 0008 0A       		.byte	10
  50 0009 0A       		.byte	10
  51 000a 0A       		.byte	10
  52 000b 0A       		.byte	10
  53              		.global	CapSense_Controller_debounce
  54              		.align	2
  55              		.type	CapSense_Controller_debounce, %object
  56              		.size	CapSense_Controller_debounce, 4
  57              	CapSense_Controller_debounce:
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 2


  58 000c 01       		.byte	1
  59 000d 01       		.byte	1
  60 000e 01       		.byte	1
  61 000f 01       		.byte	1
  62              		.global	CapSense_Controller_debounceCounter
  63              		.bss
  64              		.align	2
  65              		.type	CapSense_Controller_debounceCounter, %object
  66              		.size	CapSense_Controller_debounceCounter, 5
  67              	CapSense_Controller_debounceCounter:
  68 0000 00000000 		.space	5
  68      00
  69              		.global	CapSense_Controller_rawDataIndex
  70              		.section	.rodata
  71              		.align	2
  72              		.type	CapSense_Controller_rawDataIndex, %object
  73              		.size	CapSense_Controller_rawDataIndex, 4
  74              	CapSense_Controller_rawDataIndex:
  75 0000 00       		.byte	0
  76 0001 01       		.byte	1
  77 0002 02       		.byte	2
  78 0003 03       		.byte	3
  79              		.global	CapSense_Controller_numberOfSensors
  80              		.align	2
  81              		.type	CapSense_Controller_numberOfSensors, %object
  82              		.size	CapSense_Controller_numberOfSensors, 4
  83              	CapSense_Controller_numberOfSensors:
  84 0004 01       		.byte	1
  85 0005 01       		.byte	1
  86 0006 01       		.byte	1
  87 0007 01       		.byte	1
  88              		.section	.text.CapSense_Controller_BaseInit,"ax",%progbits
  89              		.align	2
  90              		.global	CapSense_Controller_BaseInit
  91              		.thumb
  92              		.thumb_func
  93              		.type	CapSense_Controller_BaseInit, %function
  94              	CapSense_Controller_BaseInit:
  95              	.LFB0:
  96              		.file 1 "Generated_Source\\PSoC5\\CapSense_Controller_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * File Name: CapSense_Controller_CSHL.c
   3:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 3


  18:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #include "CapSense_Controller_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #if ( (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****       (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint16 CapSense_Controller_rawFilterData1[CapSense_Controller_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint16 CapSense_Controller_rawFilterData2[CapSense_Controller_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #elif ( (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR8_FILTER)   | \
  31:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR16_FILTER) )
  32:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint16 CapSense_Controller_rawFilterData1[CapSense_Controller_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #endif  /* ( (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         *    (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint16 CapSense_Controller_sensorBaseline[CapSense_Controller_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_sensorBaselineLow[CapSense_Controller_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_sensorSignal[CapSense_Controller_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_sensorOnMask[(((CapSense_Controller_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)]
  45:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_lowBaselineResetCnt[CapSense_Controller_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     100u, 100u, 100u, 100u, 
  50:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     20u, 20u, 20u, 20u, 
  54:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     10u, 10u, 10u, 10u, 
  58:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     1u, 1u, 1u, 1u, 
  62:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 
  66:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** const uint8 CYCODE CapSense_Controller_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     0u, /* ButtonLeft__BTN */
  70:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     1u, /* ButtonRight__BTN */
  71:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     2u, /* ButtonUp__BTN */
  72:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     3u, /* ButtonDown__BTN */
  73:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  74:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** };
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 4


  75:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  76:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** const uint8 CYCODE CapSense_Controller_numberOfSensors[] = {
  77:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     1u, /* ButtonLeft__BTN */
  78:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     1u, /* ButtonRight__BTN */
  79:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     1u, /* ButtonUp__BTN */
  80:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     1u, /* ButtonDown__BTN */
  81:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  82:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** };
  83:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  84:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  85:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  86:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
  87:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
  88:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Function Name: CapSense_Controller_BaseInit
  89:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
  90:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
  91:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Summary:
  92:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Loads the CapSense_Controller_sensorBaseline[sensor] array element with an 
  93:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  initial value which is equal to raw count value. 
  94:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Resets to zero CapSense_Controller_sensorBaselineLow[sensor] and 
  95:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorSignal[sensor] array element.
  96:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Loads CapSense_Controller_debounceCounter[sensor] array element with initial 
  97:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  value equal CapSense_Controller_debounce[].
  98:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Loads the CapSense_Controller_rawFilterData2[sensor] and 
  99:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_rawFilterData2[sensor] array element with an 
 100:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 101:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 102:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Parameters:
 103:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  sensor:  Sensor number.
 104:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 105:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Return:
 106:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  None
 107:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 108:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Global Variables:
 109:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorBaseline[]    - used to store baseline value.
 110:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorBaselineLow[] - used to store fraction byte of 
 111:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  baseline value.
 112:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorSignal[]      - used to store diffence between 
 113:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  current value of raw data and previous value of baseline.
 114:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_debounceCounter[]   - used to store current debounce 
 115:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 116:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 117:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 118:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_rawFilterData1[]    - used to store previous sample of 
 119:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  any enabled raw data filter.
 120:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_rawFilterData2[]    - used to store before previous sample
 121:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 122:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 123:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Reentrant:
 124:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  No
 125:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 126:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
 127:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** void CapSense_Controller_BaseInit(uint8 sensor) 
 128:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** {
  97              		.loc 1 128 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 5


 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102 0000 80B4     		push	{r7}
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 7, -4
 105 0002 85B0     		sub	sp, sp, #20
 106              		.cfi_def_cfa_offset 24
 107 0004 00AF     		add	r7, sp, #0
 108              		.cfi_def_cfa_register 7
 109 0006 0346     		mov	r3, r0
 110 0008 FB71     		strb	r3, [r7, #7]
 129:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #if ((CapSense_Controller_TOTAL_BUTTONS_COUNT) || (CapSense_Controller_TOTAL_MATRIX_BUTTONS_COU
 130:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****          (CapSense_Controller_TOTAL_GENERICS_COUNT))
 131:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 widget = CapSense_Controller_widgetNumber[sensor];
 111              		.loc 1 131 0
 112 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 113 000c 124A     		ldr	r2, .L2
 114 000e D35C     		ldrb	r3, [r2, r3]
 115 0010 FB73     		strb	r3, [r7, #15]
 132:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #endif /* ((CapSense_Controller_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_Controller_TOTAL_MATRI
 133:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 134:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #if (CapSense_Controller_TOTAL_MATRIX_BUTTONS_COUNT)
 135:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 debounceIndex;
 136:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #endif  /* (CapSense_Controller_TOTAL_MATRIX_BUTTONS_COUNT) */
 137:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 138:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #if (CapSense_Controller_TOTAL_GENERICS_COUNT)
 139:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Exclude generic widget */
 140:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if(widget < CapSense_Controller_END_OF_WIDGETS_INDEX)
 141:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 142:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #endif  /* CapSense_Controller_TOTAL_GENERICS_COUNT */
 143:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 144:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* Initialize Baseline */
 145:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     CapSense_Controller_sensorBaseline[sensor] = CapSense_Controller_sensorRaw[sensor];
 116              		.loc 1 145 0
 117 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 118 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 119 0016 1149     		ldr	r1, .L2+4
 120 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 121 001c 104A     		ldr	r2, .L2+8
 122 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 146:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     CapSense_Controller_sensorBaselineLow[sensor] = 0u;
 123              		.loc 1 146 0
 124 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 125 0024 0F4A     		ldr	r2, .L2+12
 126 0026 0021     		movs	r1, #0
 127 0028 D154     		strb	r1, [r2, r3]
 147:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     CapSense_Controller_sensorSignal[sensor] = 0u;
 128              		.loc 1 147 0
 129 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 130 002c 0E4A     		ldr	r2, .L2+16
 131 002e 0021     		movs	r1, #0
 132 0030 D154     		strb	r1, [r2, r3]
 148:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 149:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     CapSense_Controller_debounceCounter[widget] =  CapSense_Controller_debounce[widget];
 133              		.loc 1 149 0
 134 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 135 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 6


 136 0036 0D49     		ldr	r1, .L2+20
 137 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 138 003a 0D4A     		ldr	r2, .L2+24
 139 003c D154     		strb	r1, [r2, r3]
 150:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 151:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 152:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #if ((CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_MEDIAN_FILTER) |\
 153:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****          (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_AVERAGING_FILTER))
 154:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 155:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData1[sensor] = CapSense_Controller_sensorRaw[sensor];
 156:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData2[sensor] = CapSense_Controller_sensorRaw[sensor];
 157:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 158:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #elif ((CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR2_FILTER) |\
 159:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****            (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR4_FILTER) |\
 160:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****            (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_JITTER_FILTER) |\
 161:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****            (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR8_FILTER) |\
 162:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****            (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR16_FILTER))
 163:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             
 164:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData1[sensor] = CapSense_Controller_sensorRaw[sensor];
 140              		.loc 1 164 0
 141 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 142 0040 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 143 0042 0649     		ldr	r1, .L2+4
 144 0044 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 145 0048 0A4A     		ldr	r2, .L2+28
 146 004a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 165:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 166:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #else
 167:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* No Raw filters */
 168:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #endif  /* ((CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_MEDIAN_FILTER) | \
 169:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             *   (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_AVERAGING_FILTER))
 170:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             */
 171:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 172:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #if (CapSense_Controller_TOTAL_GENERICS_COUNT)
 173:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Exclude generic widget */
 174:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 175:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #endif  /* CapSense_Controller_TOTAL_GENERICS_COUNT */
 176:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** }
 147              		.loc 1 176 0
 148 004e 00BF     		nop
 149 0050 1437     		adds	r7, r7, #20
 150              		.cfi_def_cfa_offset 4
 151 0052 BD46     		mov	sp, r7
 152              		.cfi_def_cfa_register 13
 153              		@ sp needed
 154 0054 80BC     		pop	{r7}
 155              		.cfi_restore 7
 156              		.cfi_def_cfa_offset 0
 157 0056 7047     		bx	lr
 158              	.L3:
 159              		.align	2
 160              	.L2:
 161 0058 00000000 		.word	CapSense_Controller_widgetNumber
 162 005c 00000000 		.word	CapSense_Controller_sensorRaw
 163 0060 00000000 		.word	CapSense_Controller_sensorBaseline
 164 0064 00000000 		.word	CapSense_Controller_sensorBaselineLow
 165 0068 00000000 		.word	CapSense_Controller_sensorSignal
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 7


 166 006c 00000000 		.word	CapSense_Controller_debounce
 167 0070 00000000 		.word	CapSense_Controller_debounceCounter
 168 0074 00000000 		.word	CapSense_Controller_rawFilterData1
 169              		.cfi_endproc
 170              	.LFE0:
 171              		.size	CapSense_Controller_BaseInit, .-CapSense_Controller_BaseInit
 172              		.section	.text.CapSense_Controller_InitializeSensorBaseline,"ax",%progbits
 173              		.align	2
 174              		.global	CapSense_Controller_InitializeSensorBaseline
 175              		.thumb
 176              		.thumb_func
 177              		.type	CapSense_Controller_InitializeSensorBaseline, %function
 178              	CapSense_Controller_InitializeSensorBaseline:
 179              	.LFB1:
 177:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 178:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 179:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
 180:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Function Name: CapSense_Controller_InitializeSensorBaseline
 181:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
 182:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 183:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Summary:
 184:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Loads the CapSense_Controller_sensorBaseline[sensor] array element with an 
 185:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 186:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 187:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 188:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  enabled.
 189:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 190:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Parameters:
 191:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  sensor:  Sensor number.
 192:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 193:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Return:
 194:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  None
 195:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 196:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Reentrant:
 197:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  No
 198:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 199:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
 200:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** void CapSense_Controller_InitializeSensorBaseline(uint8 sensor)
 201:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                           
 202:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** {
 180              		.loc 1 202 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 8
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184 0000 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 82B0     		sub	sp, sp, #8
 189              		.cfi_def_cfa_offset 16
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 192 0006 0346     		mov	r3, r0
 193 0008 FB71     		strb	r3, [r7, #7]
 203:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* Scan sensor */
 204:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     CapSense_Controller_ScanSensor(sensor);
 194              		.loc 1 204 0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 8


 195 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 196 000c 1846     		mov	r0, r3
 197 000e FFF7FEFF 		bl	CapSense_Controller_ScanSensor
 205:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     while(CapSense_Controller_IsBusy() != 0u)
 198              		.loc 1 205 0
 199 0012 00BF     		nop
 200              	.L5:
 201              		.loc 1 205 0 is_stmt 0 discriminator 1
 202 0014 FFF7FEFF 		bl	CapSense_Controller_IsBusy
 203 0018 0346     		mov	r3, r0
 204 001a 002B     		cmp	r3, #0
 205 001c FAD1     		bne	.L5
 206:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 207:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Wait while busy */
 208:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 209:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 210:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #if (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN)
 211:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 212:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_BaseInit(sensor);
 206              		.loc 1 212 0 is_stmt 1
 207 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 208 0020 1846     		mov	r0, r3
 209 0022 FFF7FEFF 		bl	CapSense_Controller_BaseInit
 213:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 214:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #else
 215:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 216:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if(sensor < CapSense_Controller_TOTAL_SENSOR_COUNT__CH0)
 217:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 218:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 219:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_BaseInit(sensor);
 220:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 221:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 222:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if(sensor < CapSense_Controller_TOTAL_SENSOR_COUNT__CH1)
 223:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 224:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 225:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_BaseInit(sensor + CapSense_Controller_TOTAL_SENSOR_COUNT__CH0);
 226:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 227:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 228:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #endif  /* (CapSense_Controller_DESIGN_TYPE == CapSense_Controller_ONE_CHANNEL_DESIGN) */
 229:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** }
 210              		.loc 1 229 0
 211 0026 00BF     		nop
 212 0028 0837     		adds	r7, r7, #8
 213              		.cfi_def_cfa_offset 8
 214 002a BD46     		mov	sp, r7
 215              		.cfi_def_cfa_register 13
 216              		@ sp needed
 217 002c 80BD     		pop	{r7, pc}
 218              		.cfi_endproc
 219              	.LFE1:
 220              		.size	CapSense_Controller_InitializeSensorBaseline, .-CapSense_Controller_InitializeSensorBaseline
 221 002e 00BF     		.section	.text.CapSense_Controller_InitializeAllBaselines,"ax",%progbits
 222              		.align	2
 223              		.global	CapSense_Controller_InitializeAllBaselines
 224              		.thumb
 225              		.thumb_func
 226              		.type	CapSense_Controller_InitializeAllBaselines, %function
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 9


 227              	CapSense_Controller_InitializeAllBaselines:
 228              	.LFB2:
 230:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 231:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 232:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
 233:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Function Name: CapSense_Controller_InitializeAllBaselines
 234:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
 235:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 236:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Summary:
 237:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Uses the CapSense_Controller_InitializeSensorBaseline function to loads the 
 238:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorBaseline[] array with an initial values by scanning 
 239:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 240:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 241:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 242:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Parameters:
 243:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  None
 244:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 245:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Return:
 246:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  None
 247:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 248:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Reentrant:
 249:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  No
 250:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 251:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** void CapSense_Controller_InitializeAllBaselines(void)
 253:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                           
 254:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** {
 229              		.loc 1 254 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 8
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233 0000 80B5     		push	{r7, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              		.cfi_def_cfa_offset 16
 239 0004 00AF     		add	r7, sp, #0
 240              		.cfi_def_cfa_register 7
 255:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 i;
 256:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 257:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 258:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     for(i = 0u; i < CapSense_Controller_TOTAL_SCANSLOT_COUNT; i++)
 241              		.loc 1 258 0
 242 0006 0023     		movs	r3, #0
 243 0008 FB71     		strb	r3, [r7, #7]
 244 000a 06E0     		b	.L7
 245              	.L8:
 259:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 260:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_InitializeSensorBaseline(i);
 246              		.loc 1 260 0 discriminator 3
 247 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 248 000e 1846     		mov	r0, r3
 249 0010 FFF7FEFF 		bl	CapSense_Controller_InitializeSensorBaseline
 258:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 250              		.loc 1 258 0 discriminator 3
 251 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 10


 252 0016 0133     		adds	r3, r3, #1
 253 0018 FB71     		strb	r3, [r7, #7]
 254              	.L7:
 258:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 255              		.loc 1 258 0 is_stmt 0 discriminator 1
 256 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 257 001c 032B     		cmp	r3, #3
 258 001e F5D9     		bls	.L8
 261:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 262:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** }
 259              		.loc 1 262 0 is_stmt 1
 260 0020 00BF     		nop
 261 0022 0837     		adds	r7, r7, #8
 262              		.cfi_def_cfa_offset 8
 263 0024 BD46     		mov	sp, r7
 264              		.cfi_def_cfa_register 13
 265              		@ sp needed
 266 0026 80BD     		pop	{r7, pc}
 267              		.cfi_endproc
 268              	.LFE2:
 269              		.size	CapSense_Controller_InitializeAllBaselines, .-CapSense_Controller_InitializeAllBaselines
 270              		.section	.text.CapSense_Controller_InitializeEnabledBaselines,"ax",%progbits
 271              		.align	2
 272              		.global	CapSense_Controller_InitializeEnabledBaselines
 273              		.thumb
 274              		.thumb_func
 275              		.type	CapSense_Controller_InitializeEnabledBaselines, %function
 276              	CapSense_Controller_InitializeEnabledBaselines:
 277              	.LFB3:
 263:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 264:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 265:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
 266:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Function Name: CapSense_Controller_InitializeEnabledBaselines
 267:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
 268:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 269:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Summary:
 270:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 271:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 272:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 273:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 275:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Parameters:
 276:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  None
 277:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 278:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Return:
 279:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  None
 280:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 281:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Reentrant:
 282:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  No
 283:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 284:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
 285:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** void CapSense_Controller_InitializeEnabledBaselines(void)
 286:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                              
 287:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** {
 278              		.loc 1 287 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 11


 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 82B0     		sub	sp, sp, #8
 287              		.cfi_def_cfa_offset 16
 288 0004 00AF     		add	r7, sp, #0
 289              		.cfi_def_cfa_register 7
 288:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 i;
 289:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 pos;
 290:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 enMask;
 291:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 292:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     CapSense_Controller_ScanEnabledWidgets();
 290              		.loc 1 292 0
 291 0006 FFF7FEFF 		bl	CapSense_Controller_ScanEnabledWidgets
 293:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     while(CapSense_Controller_IsBusy() != 0u)
 292              		.loc 1 293 0
 293 000a 00BF     		nop
 294              	.L10:
 295              		.loc 1 293 0 is_stmt 0 discriminator 1
 296 000c FFF7FEFF 		bl	CapSense_Controller_IsBusy
 297 0010 0346     		mov	r3, r0
 298 0012 002B     		cmp	r3, #0
 299 0014 FAD1     		bne	.L10
 294:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 295:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Wait while busy */
 296:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 297:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 298:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     for(i = 0u; i < CapSense_Controller_TOTAL_SENSOR_COUNT; i++)
 300              		.loc 1 298 0 is_stmt 1
 301 0016 0023     		movs	r3, #0
 302 0018 FB71     		strb	r3, [r7, #7]
 303 001a 1DE0     		b	.L11
 304              	.L13:
 299:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 300:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         pos = (i >> 3u);
 305              		.loc 1 300 0
 306 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 307 001e DB08     		lsrs	r3, r3, #3
 308 0020 BB71     		strb	r3, [r7, #6]
 301:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 309              		.loc 1 301 0
 310 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 311 0024 03F00703 		and	r3, r3, #7
 312 0028 0122     		movs	r2, #1
 313 002a 02FA03F3 		lsl	r3, r2, r3
 314 002e 7B71     		strb	r3, [r7, #5]
 302:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 303:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 304:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if((CapSense_Controller_sensorEnableMask[pos] & enMask) == 0u)
 315              		.loc 1 304 0
 316 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 317 0032 0D4A     		ldr	r2, .L14
 318 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 319 0036 7B79     		ldrb	r3, [r7, #5]
 320 0038 1340     		ands	r3, r3, r2
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 12


 321 003a DBB2     		uxtb	r3, r3
 322 003c 002B     		cmp	r3, #0
 323 003e 04D1     		bne	.L12
 305:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 306:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_sensorRaw[i] = 0u;
 324              		.loc 1 306 0
 325 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 326 0042 0A4A     		ldr	r2, .L14+4
 327 0044 0021     		movs	r1, #0
 328 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 329              	.L12:
 307:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 308:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 309:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Initialize baselines */
 310:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_BaseInit(i);
 330              		.loc 1 310 0 discriminator 2
 331 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 332 004c 1846     		mov	r0, r3
 333 004e FFF7FEFF 		bl	CapSense_Controller_BaseInit
 298:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 334              		.loc 1 298 0 discriminator 2
 335 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 336 0054 0133     		adds	r3, r3, #1
 337 0056 FB71     		strb	r3, [r7, #7]
 338              	.L11:
 298:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 339              		.loc 1 298 0 is_stmt 0 discriminator 1
 340 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 341 005a 032B     		cmp	r3, #3
 342 005c DED9     		bls	.L13
 311:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 312:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** }  
 343              		.loc 1 312 0 is_stmt 1
 344 005e 00BF     		nop
 345 0060 0837     		adds	r7, r7, #8
 346              		.cfi_def_cfa_offset 8
 347 0062 BD46     		mov	sp, r7
 348              		.cfi_def_cfa_register 13
 349              		@ sp needed
 350 0064 80BD     		pop	{r7, pc}
 351              	.L15:
 352 0066 00BF     		.align	2
 353              	.L14:
 354 0068 00000000 		.word	CapSense_Controller_sensorEnableMask
 355 006c 00000000 		.word	CapSense_Controller_sensorRaw
 356              		.cfi_endproc
 357              	.LFE3:
 358              		.size	CapSense_Controller_InitializeEnabledBaselines, .-CapSense_Controller_InitializeEnabledBasel
 359              		.section	.text.CapSense_Controller_UpdateSensorBaseline,"ax",%progbits
 360              		.align	2
 361              		.global	CapSense_Controller_UpdateSensorBaseline
 362              		.thumb
 363              		.thumb_func
 364              		.type	CapSense_Controller_UpdateSensorBaseline, %function
 365              	CapSense_Controller_UpdateSensorBaseline:
 366              	.LFB4:
 313:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 13


 314:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 315:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
 316:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Function Name: CapSense_Controller_UpdateSensorBaseline
 317:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
 318:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 319:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Summary:
 320:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Updates the CapSense_Controller_sensorBaseline[sensor] array element using the 
 321:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 322:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 323:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  it in CapSense_Controller_SensorSignal[sensor]. 
 324:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 325:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 326:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 327:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  that noise threshold.
 328:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 329:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  calculation.
 330:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 331:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Parameters:
 332:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  sensor:  Sensor number.
 333:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 334:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Return:
 335:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  None
 336:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 337:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Global Variables:
 338:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorBaseline[]    - used to store baseline value.
 339:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorBaselineLow[] - used to store fraction byte of 
 340:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  baseline value.
 341:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorSignal[]      - used to store diffence between 
 342:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  current value of raw data and previous value of baseline.
 343:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_rawFilterData1[]    - used to store previous sample of 
 344:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  any enabled raw data filter.
 345:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_rawFilterData2[]    - used to store before previous sample
 346:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 347:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 348:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Reentrant:
 349:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  No
 350:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 351:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****  void CapSense_Controller_UpdateSensorBaseline(uint8 sensor)
 353:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                  
 354:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** {
 367              		.loc 1 354 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 24
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371 0000 80B5     		push	{r7, lr}
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 7, -8
 374              		.cfi_offset 14, -4
 375 0002 86B0     		sub	sp, sp, #24
 376              		.cfi_def_cfa_offset 32
 377 0004 00AF     		add	r7, sp, #0
 378              		.cfi_def_cfa_register 7
 379 0006 0346     		mov	r3, r0
 380 0008 FB71     		strb	r3, [r7, #7]
 355:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint32 calc;
 356:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint16 tempRaw;
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 14


 357:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint16 filteredRawData;
 358:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 widget = CapSense_Controller_widgetNumber[sensor];
 381              		.loc 1 358 0
 382 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 383 000c 534A     		ldr	r2, .L28
 384 000e D35C     		ldrb	r3, [r2, r3]
 385 0010 7B75     		strb	r3, [r7, #21]
 359:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 noiseThreshold = CapSense_Controller_noiseThreshold[widget];
 386              		.loc 1 359 0
 387 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 388 0014 524A     		ldr	r2, .L28+4
 389 0016 D35C     		ldrb	r3, [r2, r3]
 390 0018 3B75     		strb	r3, [r7, #20]
 360:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 361:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #if (CapSense_Controller_TOTAL_GENERICS_COUNT)
 362:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Exclude generic widget */
 363:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if(widget < CapSense_Controller_END_OF_WIDGETS_INDEX)
 364:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 365:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #endif  /* CapSense_Controller_TOTAL_GENERICS_COUNT */
 366:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 367:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     filteredRawData = CapSense_Controller_sensorRaw[sensor];
 391              		.loc 1 367 0
 392 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 393 001c 514A     		ldr	r2, .L28+8
 394 001e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 395 0022 7B82     		strh	r3, [r7, #18]	@ movhi
 368:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 369:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #if (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_MEDIAN_FILTER)
 370:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         tempRaw = filteredRawData;
 371:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         filteredRawData = CapSense_Controller_MedianFilter(filteredRawData, CapSense_Controller_raw
 372:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                         CapSense_Controller_rawFilterData2[sensor])
 373:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData2[sensor] = CapSense_Controller_rawFilterData1[sensor];
 374:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData1[sensor] = tempRaw;
 375:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 376:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #elif (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_AVERAGING_FILTER)
 377:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         tempRaw = filteredRawData;
 378:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         filteredRawData = CapSense_Controller_AveragingFilter(filteredRawData, CapSense_Controller_
 379:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                            CapSense_Controller_rawFilterData2[senso
 380:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData2[sensor] = CapSense_Controller_rawFilterData1[sensor];
 381:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData1[sensor] = tempRaw;
 382:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 383:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #elif (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR2_FILTER)
 384:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         filteredRawData = CapSense_Controller_IIR2Filter(filteredRawData, CapSense_Controller_rawFi
 385:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData1[sensor] = filteredRawData;
 386:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 387:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #elif (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR4_FILTER)
 388:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         filteredRawData = CapSense_Controller_IIR4Filter(filteredRawData, CapSense_Controller_rawFi
 396              		.loc 1 388 0
 397 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 398 0026 504A     		ldr	r2, .L28+12
 399 0028 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 400 002c 7B8A     		ldrh	r3, [r7, #18]
 401 002e 1146     		mov	r1, r2
 402 0030 1846     		mov	r0, r3
 403 0032 FFF7FEFF 		bl	CapSense_Controller_IIR4Filter
 404 0036 0346     		mov	r3, r0
 405 0038 7B82     		strh	r3, [r7, #18]	@ movhi
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 15


 389:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData1[sensor] = filteredRawData;
 406              		.loc 1 389 0
 407 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 408 003c 4A49     		ldr	r1, .L28+12
 409 003e 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 410 0040 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 390:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             
 391:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #elif (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_JITTER_FILTER)
 392:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         filteredRawData = CapSense_Controller_JitterFilter(filteredRawData, CapSense_Controller_raw
 393:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData1[sensor] = filteredRawData;
 394:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 395:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #elif (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR8_FILTER)
 396:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         filteredRawData = CapSense_Controller_IIR8Filter(filteredRawData, CapSense_Controller_rawFi
 397:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData1[sensor] = filteredRawData;
 398:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 399:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #elif (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR16_FILTER)
 400:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         filteredRawData = CapSense_Controller_IIR16Filter(filteredRawData, CapSense_Controller_rawF
 401:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_rawFilterData1[sensor] = filteredRawData;
 402:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 403:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #else
 404:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* No Raw filters */
 405:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #endif  /* (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_MEDIAN_FILTER) */
 406:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 407:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #if (CapSense_Controller_TUNING_METHOD == CapSense_Controller_AUTO_TUNING)
 408:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_CalculateThresholds(sensor);
 411              		.loc 1 408 0
 412 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 413 0046 1846     		mov	r0, r3
 414 0048 FFF7FEFF 		bl	CapSense_Controller_CalculateThresholds
 409:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #endif /* (CapSense_Controller_TUNING_METHOD == CapSense_Controller_AUTO_TUNING) */
 410:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 411:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 412:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* Baseline calculation */
 413:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 414:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     if(filteredRawData >= CapSense_Controller_sensorBaseline[sensor])
 415              		.loc 1 414 0
 416 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 417 004e 474A     		ldr	r2, .L28+16
 418 0050 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 419 0054 7A8A     		ldrh	r2, [r7, #18]
 420 0056 9A42     		cmp	r2, r3
 421 0058 09D3     		bcc	.L17
 415:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 416:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         tempRaw = filteredRawData - CapSense_Controller_sensorBaseline[sensor];
 422              		.loc 1 416 0
 423 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 424 005c 434A     		ldr	r2, .L28+16
 425 005e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 426 0062 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 427 0064 D31A     		subs	r3, r2, r3
 428 0066 FB82     		strh	r3, [r7, #22]	@ movhi
 417:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 429              		.loc 1 417 0
 430 0068 0123     		movs	r3, #1
 431 006a 7B75     		strb	r3, [r7, #21]
 432 006c 08E0     		b	.L18
 433              	.L17:
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 16


 418:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 419:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     else
 420:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 421:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         tempRaw = CapSense_Controller_sensorBaseline[sensor] - filteredRawData;
 434              		.loc 1 421 0
 435 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 436 0070 3E4A     		ldr	r2, .L28+16
 437 0072 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 438 0076 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 439 0078 D31A     		subs	r3, r2, r3
 440 007a FB82     		strh	r3, [r7, #22]	@ movhi
 422:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 441              		.loc 1 422 0
 442 007c 0023     		movs	r3, #0
 443 007e 7B75     		strb	r3, [r7, #21]
 444              	.L18:
 423:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 424:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 425:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_Controller_NEGATIVE_NOISE_THRESHOLD))
 445              		.loc 1 425 0
 446 0080 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 447 0082 002B     		cmp	r3, #0
 448 0084 18D1     		bne	.L19
 449              		.loc 1 425 0 is_stmt 0 discriminator 1
 450 0086 FB8A     		ldrh	r3, [r7, #22]
 451 0088 142B     		cmp	r3, #20
 452 008a 15D9     		bls	.L19
 426:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 427:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if(CapSense_Controller_lowBaselineResetCnt[sensor] >= CapSense_Controller_LOW_BASELINE_RESE
 453              		.loc 1 427 0 is_stmt 1
 454 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 455 008e 384A     		ldr	r2, .L28+20
 456 0090 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 457 0092 042B     		cmp	r3, #4
 458 0094 08D9     		bls	.L20
 428:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 429:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_BaseInit(sensor);
 459              		.loc 1 429 0
 460 0096 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 461 0098 1846     		mov	r0, r3
 462 009a FFF7FEFF 		bl	CapSense_Controller_BaseInit
 430:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_lowBaselineResetCnt[sensor] = 0u;
 463              		.loc 1 430 0
 464 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 465 00a0 334A     		ldr	r2, .L28+20
 466 00a2 0021     		movs	r1, #0
 467 00a4 D154     		strb	r1, [r2, r3]
 427:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 468              		.loc 1 427 0
 469 00a6 3BE0     		b	.L22
 470              	.L20:
 431:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 432:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         else
 433:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 434:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_lowBaselineResetCnt[sensor]++;
 471              		.loc 1 434 0
 472 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 17


 473 00aa 314A     		ldr	r2, .L28+20
 474 00ac D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 475 00ae 0132     		adds	r2, r2, #1
 476 00b0 D1B2     		uxtb	r1, r2
 477 00b2 2F4A     		ldr	r2, .L28+20
 478 00b4 D154     		strb	r1, [r2, r3]
 427:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 479              		.loc 1 427 0
 480 00b6 33E0     		b	.L22
 481              	.L19:
 435:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 436:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 437:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     else
 438:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 439:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_AUTO_RESET == CapSense_Controller_AUTO_RESET_DISABLE)
 440:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 441:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 482              		.loc 1 441 0
 483 00b8 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 484 00ba 9BB2     		uxth	r3, r3
 485 00bc FA8A     		ldrh	r2, [r7, #22]
 486 00be 9A42     		cmp	r2, r3
 487 00c0 05D9     		bls	.L23
 488              		.loc 1 441 0 is_stmt 0 discriminator 1
 489 00c2 FB8A     		ldrh	r3, [r7, #22]
 490 00c4 132B     		cmp	r3, #19
 491 00c6 2BD8     		bhi	.L22
 442:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                  ((tempRaw < (uint16) CapSense_Controller_NEGATIVE_NOISE_THRESHOLD)
 443:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                    && (widget == 0u)))
 492              		.loc 1 443 0 is_stmt 1
 493 00c8 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 494 00ca 002B     		cmp	r3, #0
 495 00cc 28D1     		bne	.L22
 496              	.L23:
 444:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
 445:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_AUTO_RESET == CapSense_Controller_AUTO_RESET_DISABLE) */
 446:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Make full Baseline 23 bits */
 447:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 calc = (uint32) CapSense_Controller_sensorBaseline[sensor] << 8u;
 497              		.loc 1 447 0
 498 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 499 00d0 264A     		ldr	r2, .L28+16
 500 00d2 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 501 00d6 1B02     		lsls	r3, r3, #8
 502 00d8 FB60     		str	r3, [r7, #12]
 448:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 calc |= (uint32) CapSense_Controller_sensorBaselineLow[sensor];
 503              		.loc 1 448 0
 504 00da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 505 00dc 254A     		ldr	r2, .L28+24
 506 00de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 507 00e0 1A46     		mov	r2, r3
 508 00e2 FB68     		ldr	r3, [r7, #12]
 509 00e4 1343     		orrs	r3, r3, r2
 510 00e6 FB60     		str	r3, [r7, #12]
 449:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 450:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Add Raw Data to Baseline */
 451:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 calc += filteredRawData;
 511              		.loc 1 451 0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 18


 512 00e8 7B8A     		ldrh	r3, [r7, #18]
 513 00ea FA68     		ldr	r2, [r7, #12]
 514 00ec 1344     		add	r3, r3, r2
 515 00ee FB60     		str	r3, [r7, #12]
 452:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 453:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Sub the high Baseline */
 454:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 calc -= CapSense_Controller_sensorBaseline[sensor];
 516              		.loc 1 454 0
 517 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 518 00f2 1E4A     		ldr	r2, .L28+16
 519 00f4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 520 00f8 1A46     		mov	r2, r3
 521 00fa FB68     		ldr	r3, [r7, #12]
 522 00fc 9B1A     		subs	r3, r3, r2
 523 00fe FB60     		str	r3, [r7, #12]
 455:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 456:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Put Baseline and BaselineLow */
 457:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 CapSense_Controller_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 524              		.loc 1 457 0
 525 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 526 0102 FA68     		ldr	r2, [r7, #12]
 527 0104 120A     		lsrs	r2, r2, #8
 528 0106 91B2     		uxth	r1, r2
 529 0108 184A     		ldr	r2, .L28+16
 530 010a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 458:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 CapSense_Controller_sensorBaselineLow[sensor] = ((uint8) calc);
 531              		.loc 1 458 0
 532 010e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 533 0110 FA68     		ldr	r2, [r7, #12]
 534 0112 D1B2     		uxtb	r1, r2
 535 0114 174A     		ldr	r2, .L28+24
 536 0116 D154     		strb	r1, [r2, r3]
 459:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 460:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 CapSense_Controller_lowBaselineResetCnt[sensor] = 0u;
 537              		.loc 1 460 0
 538 0118 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 539 011a 154A     		ldr	r2, .L28+20
 540 011c 0021     		movs	r1, #0
 541 011e D154     		strb	r1, [r2, r3]
 542              	.L22:
 461:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_AUTO_RESET == CapSense_Controller_AUTO_RESET_DISABLE)
 462:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
 463:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_AUTO_RESET == CapSense_Controller_AUTO_RESET_DISABLE) */
 464:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 465:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 466:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 467:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 543              		.loc 1 467 0
 544 0120 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 545 0122 9BB2     		uxth	r3, r3
 546 0124 FA8A     		ldrh	r2, [r7, #22]
 547 0126 9A42     		cmp	r2, r3
 548 0128 10D9     		bls	.L24
 549              		.loc 1 467 0 is_stmt 0 discriminator 1
 550 012a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 551 012c 002B     		cmp	r3, #0
 552 012e 0DD0     		beq	.L24
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 19


 468:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 469:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_SIGNAL_SIZE == CapSense_Controller_SIGNAL_SIZE_UINT8)
 470:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* Over flow defence for uint8 */
 471:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             if (tempRaw > 0xFFu)
 553              		.loc 1 471 0 is_stmt 1
 554 0130 FB8A     		ldrh	r3, [r7, #22]
 555 0132 FF2B     		cmp	r3, #255
 556 0134 04D9     		bls	.L25
 472:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
 473:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 CapSense_Controller_sensorSignal[sensor] = 0xFFu;
 557              		.loc 1 473 0
 558 0136 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 559 0138 0F4A     		ldr	r2, .L28+28
 560 013a FF21     		movs	r1, #255
 561 013c D154     		strb	r1, [r2, r3]
 471:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
 562              		.loc 1 471 0
 563 013e 09E0     		b	.L27
 564              	.L25:
 474:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }    
 475:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             else 
 476:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
 477:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 CapSense_Controller_sensorSignal[sensor] = ((uint8) tempRaw);
 565              		.loc 1 477 0
 566 0140 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 567 0142 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 568 0144 D1B2     		uxtb	r1, r2
 569 0146 0C4A     		ldr	r2, .L28+28
 570 0148 D154     		strb	r1, [r2, r3]
 471:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
 571              		.loc 1 471 0
 572 014a 03E0     		b	.L27
 573              	.L24:
 478:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
 479:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #else
 480:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_sensorSignal[sensor] = ((uint16) tempRaw);
 481:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif  /* (CapSense_Controller_SIGNAL_SIZE == CapSense_Controller_SIGNAL_SIZE_UINT8) */
 482:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 483:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     else
 484:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 485:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Signal is zero */
 486:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_sensorSignal[sensor] = 0u;
 574              		.loc 1 486 0
 575 014c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 576 014e 0A4A     		ldr	r2, .L28+28
 577 0150 0021     		movs	r1, #0
 578 0152 D154     		strb	r1, [r2, r3]
 579              	.L27:
 487:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 488:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 489:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #if (CapSense_Controller_TOTAL_GENERICS_COUNT)
 490:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Exclude generic widget */
 491:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 492:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #endif  /* CapSense_Controller_TOTAL_GENERICS_COUNT */
 493:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** }
 580              		.loc 1 493 0
 581 0154 00BF     		nop
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 20


 582 0156 1837     		adds	r7, r7, #24
 583              		.cfi_def_cfa_offset 8
 584 0158 BD46     		mov	sp, r7
 585              		.cfi_def_cfa_register 13
 586              		@ sp needed
 587 015a 80BD     		pop	{r7, pc}
 588              	.L29:
 589              		.align	2
 590              	.L28:
 591 015c 00000000 		.word	CapSense_Controller_widgetNumber
 592 0160 00000000 		.word	CapSense_Controller_noiseThreshold
 593 0164 00000000 		.word	CapSense_Controller_sensorRaw
 594 0168 00000000 		.word	CapSense_Controller_rawFilterData1
 595 016c 00000000 		.word	CapSense_Controller_sensorBaseline
 596 0170 00000000 		.word	CapSense_Controller_lowBaselineResetCnt
 597 0174 00000000 		.word	CapSense_Controller_sensorBaselineLow
 598 0178 00000000 		.word	CapSense_Controller_sensorSignal
 599              		.cfi_endproc
 600              	.LFE4:
 601              		.size	CapSense_Controller_UpdateSensorBaseline, .-CapSense_Controller_UpdateSensorBaseline
 602              		.section	.text.CapSense_Controller_UpdateEnabledBaselines,"ax",%progbits
 603              		.align	2
 604              		.global	CapSense_Controller_UpdateEnabledBaselines
 605              		.thumb
 606              		.thumb_func
 607              		.type	CapSense_Controller_UpdateEnabledBaselines, %function
 608              	CapSense_Controller_UpdateEnabledBaselines:
 609              	.LFB5:
 494:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 495:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 496:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Function Name: CapSense_Controller_UpdateEnabledBaselines
 498:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
 499:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 500:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Summary:
 501:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Checks CapSense_Controller_sensorEnableMask[] array and calls the 
 502:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_UpdateSensorBaseline function to update the baselines 
 503:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  for enabled sensors.
 504:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 505:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Parameters:
 506:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  None
 507:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 508:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Return:
 509:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  None
 510:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 511:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Global Variables:
 512:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorEnableMask[] - used to store the sensor scanning 
 513:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  state.
 514:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorEnableMask[0] contains the masked bits for sensors 
 515:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 516:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorEnableMask[1] contains the masked bits for 
 517:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 518:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  0 - sensor doesn't scan by CapSense_Controller_ScanEnabledWidgets().
 519:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  1 - sensor scans by CapSense_Controller_ScanEnabledWidgets().
 520:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 521:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Reentrant:
 522:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  No
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 21


 523:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 524:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
 525:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****  void CapSense_Controller_UpdateEnabledBaselines(void)
 526:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                  
 527:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** {
 610              		.loc 1 527 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 8
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614 0000 80B5     		push	{r7, lr}
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 7, -8
 617              		.cfi_offset 14, -4
 618 0002 82B0     		sub	sp, sp, #8
 619              		.cfi_def_cfa_offset 16
 620 0004 00AF     		add	r7, sp, #0
 621              		.cfi_def_cfa_register 7
 528:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 i;
 529:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 pos;
 530:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 enMask;
 531:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 532:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     for(i = 0u; i < CapSense_Controller_TOTAL_SENSOR_COUNT; i++)
 622              		.loc 1 532 0
 623 0006 0023     		movs	r3, #0
 624 0008 FB71     		strb	r3, [r7, #7]
 625 000a 18E0     		b	.L31
 626              	.L33:
 533:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 534:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         pos = (i >> 3u);
 627              		.loc 1 534 0
 628 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 629 000e DB08     		lsrs	r3, r3, #3
 630 0010 BB71     		strb	r3, [r7, #6]
 535:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 631              		.loc 1 535 0
 632 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 633 0014 03F00703 		and	r3, r3, #7
 634 0018 0122     		movs	r2, #1
 635 001a 02FA03F3 		lsl	r3, r2, r3
 636 001e 7B71     		strb	r3, [r7, #5]
 536:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if((CapSense_Controller_sensorEnableMask[pos] & enMask) != 0u)
 637              		.loc 1 536 0
 638 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 639 0022 0A4A     		ldr	r2, .L34
 640 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 641 0026 7B79     		ldrb	r3, [r7, #5]
 642 0028 1340     		ands	r3, r3, r2
 643 002a DBB2     		uxtb	r3, r3
 644 002c 002B     		cmp	r3, #0
 645 002e 03D0     		beq	.L32
 537:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 538:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_UpdateSensorBaseline(i);
 646              		.loc 1 538 0
 647 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 648 0032 1846     		mov	r0, r3
 649 0034 FFF7FEFF 		bl	CapSense_Controller_UpdateSensorBaseline
 650              	.L32:
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 22


 532:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 651              		.loc 1 532 0 discriminator 2
 652 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 653 003a 0133     		adds	r3, r3, #1
 654 003c FB71     		strb	r3, [r7, #7]
 655              	.L31:
 532:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 656              		.loc 1 532 0 is_stmt 0 discriminator 1
 657 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 658 0040 032B     		cmp	r3, #3
 659 0042 E3D9     		bls	.L33
 539:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 540:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 541:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** }
 660              		.loc 1 541 0 is_stmt 1
 661 0044 00BF     		nop
 662 0046 0837     		adds	r7, r7, #8
 663              		.cfi_def_cfa_offset 8
 664 0048 BD46     		mov	sp, r7
 665              		.cfi_def_cfa_register 13
 666              		@ sp needed
 667 004a 80BD     		pop	{r7, pc}
 668              	.L35:
 669              		.align	2
 670              	.L34:
 671 004c 00000000 		.word	CapSense_Controller_sensorEnableMask
 672              		.cfi_endproc
 673              	.LFE5:
 674              		.size	CapSense_Controller_UpdateEnabledBaselines, .-CapSense_Controller_UpdateEnabledBaselines
 675              		.section	.text.CapSense_Controller_CheckIsSensorActive,"ax",%progbits
 676              		.align	2
 677              		.global	CapSense_Controller_CheckIsSensorActive
 678              		.thumb
 679              		.thumb_func
 680              		.type	CapSense_Controller_CheckIsSensorActive, %function
 681              	CapSense_Controller_CheckIsSensorActive:
 682              	.LFB6:
 542:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 543:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 544:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
 545:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Function Name: CapSense_Controller_CheckIsSensorActive
 546:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
 547:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 548:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Summary:
 549:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Compares the CapSense_Controller_SensorSignal[sensor] array element to finger
 550:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 551:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 552:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  based on whether the sensor is currently active. 
 553:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 554:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 555:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  The debounce counter added to the sensor active transition.
 556:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  This function updates CapSense_Controller_SensorOnMask[] array element.
 557:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 558:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Parameters:
 559:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  sensor:  Sensor number.
 560:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 561:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Return:
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 23


 562:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 563:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 564:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Global Variables:
 565:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorSignal[]      - used to store diffence between 
 566:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  current value of raw data and previous value of baseline.
 567:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_debounceCounter[]   - used to store current debounce 
 568:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 569:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 570:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 571:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorOnMask[] - used to store sensors on/off state.
 572:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorOnMask[0] contains the masked bits for sensors 
 573:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 574:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorEnableMask[1] contains the masked bits for 
 575:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 576:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  0 - sensor is inactive.
 577:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  1 - sensor is active.
 578:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 579:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Reentrant:
 580:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  No
 581:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 582:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
 583:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_CheckIsSensorActive(uint8 sensor)
 584:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                   
 585:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** {
 683              		.loc 1 585 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 16
 686              		@ frame_needed = 1, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688 0000 80B4     		push	{r7}
 689              		.cfi_def_cfa_offset 4
 690              		.cfi_offset 7, -4
 691 0002 85B0     		sub	sp, sp, #20
 692              		.cfi_def_cfa_offset 24
 693 0004 00AF     		add	r7, sp, #0
 694              		.cfi_def_cfa_register 7
 695 0006 0346     		mov	r3, r0
 696 0008 FB71     		strb	r3, [r7, #7]
 586:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 debounceIndex;
 587:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* Get On/Off mask */
 588:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 pos = (sensor >> 3u);
 697              		.loc 1 588 0
 698 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 699 000c DB08     		lsrs	r3, r3, #3
 700 000e FB73     		strb	r3, [r7, #15]
 589:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 701              		.loc 1 589 0
 702 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 703 0012 03F00703 		and	r3, r3, #7
 704 0016 0122     		movs	r2, #1
 705 0018 02FA03F3 		lsl	r3, r2, r3
 706 001c BB73     		strb	r3, [r7, #14]
 590:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* Prepare to find debounce counter index */
 591:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 widget = CapSense_Controller_widgetNumber[sensor];
 707              		.loc 1 591 0
 708 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 709 0020 324A     		ldr	r2, .L45
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 24


 710 0022 D35C     		ldrb	r3, [r2, r3]
 711 0024 7B73     		strb	r3, [r7, #13]
 592:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 fingerThreshold = CapSense_Controller_fingerThreshold[widget];
 712              		.loc 1 592 0
 713 0026 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 714 0028 314A     		ldr	r2, .L45+4
 715 002a D35C     		ldrb	r3, [r2, r3]
 716 002c 3B73     		strb	r3, [r7, #12]
 593:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 hysteresis = CapSense_Controller_hysteresis[widget];
 717              		.loc 1 593 0
 718 002e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 719 0030 304A     		ldr	r2, .L45+8
 720 0032 D35C     		ldrb	r3, [r2, r3]
 721 0034 FB72     		strb	r3, [r7, #11]
 594:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 debounce = CapSense_Controller_debounce[widget];
 722              		.loc 1 594 0
 723 0036 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 724 0038 2F4A     		ldr	r2, .L45+12
 725 003a D35C     		ldrb	r3, [r2, r3]
 726 003c BB72     		strb	r3, [r7, #10]
 595:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 596:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     debounceIndex = widget;
 727              		.loc 1 596 0
 728 003e 7B7B     		ldrb	r3, [r7, #13]
 729 0040 7B72     		strb	r3, [r7, #9]
 597:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 598:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 599:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* Was on */
 600:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     if (0u != (CapSense_Controller_sensorOnMask[pos] & onMask))
 730              		.loc 1 600 0
 731 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 732 0044 2D4A     		ldr	r2, .L45+16
 733 0046 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 734 0048 BB7B     		ldrb	r3, [r7, #14]
 735 004a 1340     		ands	r3, r3, r2
 736 004c DBB2     		uxtb	r3, r3
 737 004e 002B     		cmp	r3, #0
 738 0050 18D0     		beq	.L37
 601:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 602:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Hysteresis minus */
 603:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if (CapSense_Controller_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 739              		.loc 1 603 0
 740 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 741 0054 2A4A     		ldr	r2, .L45+20
 742 0056 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 743 0058 1946     		mov	r1, r3
 744 005a 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 745 005c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 746 005e D31A     		subs	r3, r2, r3
 747 0060 9942     		cmp	r1, r3
 748 0062 32DA     		bge	.L39
 604:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 605:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_sensorOnMask[pos] &= (uint8)~onMask;
 749              		.loc 1 605 0
 750 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 751 0066 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 752 0068 2449     		ldr	r1, .L45+16
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 25


 753 006a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 754 006c BA7B     		ldrb	r2, [r7, #14]
 755 006e D243     		mvns	r2, r2
 756 0070 D2B2     		uxtb	r2, r2
 757 0072 0A40     		ands	r2, r2, r1
 758 0074 D1B2     		uxtb	r1, r2
 759 0076 214A     		ldr	r2, .L45+16
 760 0078 D154     		strb	r1, [r2, r3]
 606:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_debounceCounter[debounceIndex] = debounce; 
 761              		.loc 1 606 0
 762 007a 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 763 007c 2149     		ldr	r1, .L45+24
 764 007e BA7A     		ldrb	r2, [r7, #10]
 765 0080 CA54     		strb	r2, [r1, r3]
 766 0082 22E0     		b	.L39
 767              	.L37:
 607:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 608:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 609:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     else    /* Was off */
 610:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 611:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Hysteresis plus */
 612:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if (CapSense_Controller_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 768              		.loc 1 612 0
 769 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 770 0086 1E4A     		ldr	r2, .L45+20
 771 0088 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 772 008a 1946     		mov	r1, r3
 773 008c 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 774 008e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 775 0090 1344     		add	r3, r3, r2
 776 0092 9942     		cmp	r1, r3
 777 0094 15DD     		ble	.L40
 613:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 614:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* Sensor active, decrement debounce counter */
 615:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             if (CapSense_Controller_debounceCounter[debounceIndex] <= 1u)
 778              		.loc 1 615 0
 779 0096 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 780 0098 1A4A     		ldr	r2, .L45+24
 781 009a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 782 009c 012B     		cmp	r3, #1
 783 009e 08D8     		bhi	.L41
 616:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
 617:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 CapSense_Controller_sensorOnMask[pos] |= onMask; 
 784              		.loc 1 617 0
 785 00a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 786 00a2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 787 00a4 1549     		ldr	r1, .L45+16
 788 00a6 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 789 00a8 BA7B     		ldrb	r2, [r7, #14]
 790 00aa 0A43     		orrs	r2, r2, r1
 791 00ac D1B2     		uxtb	r1, r2
 792 00ae 134A     		ldr	r2, .L45+16
 793 00b0 D154     		strb	r1, [r2, r3]
 794              	.L41:
 618:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
 619:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_debounceCounter[debounceIndex]--;
 795              		.loc 1 619 0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 26


 796 00b2 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 797 00b4 134A     		ldr	r2, .L45+24
 798 00b6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 799 00b8 013A     		subs	r2, r2, #1
 800 00ba D1B2     		uxtb	r1, r2
 801 00bc 114A     		ldr	r2, .L45+24
 802 00be D154     		strb	r1, [r2, r3]
 803 00c0 03E0     		b	.L39
 804              	.L40:
 620:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 621:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         else
 622:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 623:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 624:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_debounceCounter[debounceIndex] = debounce;
 805              		.loc 1 624 0
 806 00c2 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 807 00c4 0F49     		ldr	r1, .L45+24
 808 00c6 BA7A     		ldrb	r2, [r7, #10]
 809 00c8 CA54     		strb	r2, [r1, r3]
 810              	.L39:
 625:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 626:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 627:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 628:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     return (((CapSense_Controller_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 811              		.loc 1 628 0
 812 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 813 00cc 0B4A     		ldr	r2, .L45+16
 814 00ce D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 815 00d0 BB7B     		ldrb	r3, [r7, #14]
 816 00d2 1340     		ands	r3, r3, r2
 817 00d4 DBB2     		uxtb	r3, r3
 818 00d6 002B     		cmp	r3, #0
 819 00d8 01D0     		beq	.L42
 820              		.loc 1 628 0 is_stmt 0 discriminator 1
 821 00da 0123     		movs	r3, #1
 822 00dc 00E0     		b	.L43
 823              	.L42:
 824              		.loc 1 628 0 discriminator 2
 825 00de 0023     		movs	r3, #0
 826              	.L43:
 629:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** }
 827              		.loc 1 629 0 is_stmt 1 discriminator 4
 828 00e0 1846     		mov	r0, r3
 829 00e2 1437     		adds	r7, r7, #20
 830              		.cfi_def_cfa_offset 4
 831 00e4 BD46     		mov	sp, r7
 832              		.cfi_def_cfa_register 13
 833              		@ sp needed
 834 00e6 80BC     		pop	{r7}
 835              		.cfi_restore 7
 836              		.cfi_def_cfa_offset 0
 837 00e8 7047     		bx	lr
 838              	.L46:
 839 00ea 00BF     		.align	2
 840              	.L45:
 841 00ec 00000000 		.word	CapSense_Controller_widgetNumber
 842 00f0 00000000 		.word	CapSense_Controller_fingerThreshold
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 27


 843 00f4 00000000 		.word	CapSense_Controller_hysteresis
 844 00f8 00000000 		.word	CapSense_Controller_debounce
 845 00fc 00000000 		.word	CapSense_Controller_sensorOnMask
 846 0100 00000000 		.word	CapSense_Controller_sensorSignal
 847 0104 00000000 		.word	CapSense_Controller_debounceCounter
 848              		.cfi_endproc
 849              	.LFE6:
 850              		.size	CapSense_Controller_CheckIsSensorActive, .-CapSense_Controller_CheckIsSensorActive
 851              		.section	.text.CapSense_Controller_CheckIsWidgetActive,"ax",%progbits
 852              		.align	2
 853              		.global	CapSense_Controller_CheckIsWidgetActive
 854              		.thumb
 855              		.thumb_func
 856              		.type	CapSense_Controller_CheckIsWidgetActive, %function
 857              	CapSense_Controller_CheckIsWidgetActive:
 858              	.LFB7:
 630:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 631:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 632:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
 633:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Function Name: CapSense_Controller_CheckIsWidgetActive
 634:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
 635:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 636:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Summary:
 637:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Use function CapSense_Controller_CheckIsSensorActive() to update 
 638:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorOnMask[] for all sensors within the widget.
 639:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 640:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  active.
 641:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 642:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  col and row to return widget active status.
 643:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 644:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Parameters:
 645:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  widget:  widget number.
 646:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 647:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Return:
 648:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 649:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 650:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 651:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Reentrant:
 652:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  No
 653:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 654:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
 655:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_CheckIsWidgetActive(uint8 widget)
 656:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                  
 657:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** {
 859              		.loc 1 657 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 16
 862              		@ frame_needed = 1, uses_anonymous_args = 0
 863 0000 80B5     		push	{r7, lr}
 864              		.cfi_def_cfa_offset 8
 865              		.cfi_offset 7, -8
 866              		.cfi_offset 14, -4
 867 0002 84B0     		sub	sp, sp, #16
 868              		.cfi_def_cfa_offset 24
 869 0004 00AF     		add	r7, sp, #0
 870              		.cfi_def_cfa_register 7
 871 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 28


 872 0008 FB71     		strb	r3, [r7, #7]
 658:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 rawIndex = CapSense_Controller_rawDataIndex[widget];
 873              		.loc 1 658 0
 874 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 875 000c 0F4A     		ldr	r2, .L51
 876 000e D35C     		ldrb	r3, [r2, r3]
 877 0010 FB73     		strb	r3, [r7, #15]
 659:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 numberOfSensors = CapSense_Controller_numberOfSensors[widget] + rawIndex;
 878              		.loc 1 659 0
 879 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 880 0014 0E4A     		ldr	r2, .L51+4
 881 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 882 0018 FB7B     		ldrb	r3, [r7, #15]
 883 001a 1344     		add	r3, r3, r2
 884 001c 7B73     		strb	r3, [r7, #13]
 660:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 state = 0u;
 885              		.loc 1 660 0
 886 001e 0023     		movs	r3, #0
 887 0020 BB73     		strb	r3, [r7, #14]
 888              	.L49:
 661:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 662:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* Check all sensors of the widget */
 663:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     do
 664:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 665:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if(CapSense_Controller_CheckIsSensorActive(rawIndex) != 0u)
 889              		.loc 1 665 0
 890 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 891 0024 1846     		mov	r0, r3
 892 0026 FFF7FEFF 		bl	CapSense_Controller_CheckIsSensorActive
 893 002a 0346     		mov	r3, r0
 894 002c 002B     		cmp	r3, #0
 895 002e 01D0     		beq	.L48
 666:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 667:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             state = CapSense_Controller_SENSOR_1_IS_ACTIVE;
 896              		.loc 1 667 0
 897 0030 0123     		movs	r3, #1
 898 0032 BB73     		strb	r3, [r7, #14]
 899              	.L48:
 668:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 669:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         rawIndex++;
 900              		.loc 1 669 0
 901 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 902 0036 0133     		adds	r3, r3, #1
 903 0038 FB73     		strb	r3, [r7, #15]
 670:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 671:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     while(rawIndex < numberOfSensors);
 904              		.loc 1 671 0
 905 003a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 906 003c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 907 003e 9A42     		cmp	r2, r3
 908 0040 EFD3     		bcc	.L49
 672:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 673:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 674:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 675:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     return (state);
 909              		.loc 1 675 0
 910 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 29


 676:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** }
 911              		.loc 1 676 0
 912 0044 1846     		mov	r0, r3
 913 0046 1037     		adds	r7, r7, #16
 914              		.cfi_def_cfa_offset 8
 915 0048 BD46     		mov	sp, r7
 916              		.cfi_def_cfa_register 13
 917              		@ sp needed
 918 004a 80BD     		pop	{r7, pc}
 919              	.L52:
 920              		.align	2
 921              	.L51:
 922 004c 00000000 		.word	CapSense_Controller_rawDataIndex
 923 0050 00000000 		.word	CapSense_Controller_numberOfSensors
 924              		.cfi_endproc
 925              	.LFE7:
 926              		.size	CapSense_Controller_CheckIsWidgetActive, .-CapSense_Controller_CheckIsWidgetActive
 927              		.section	.text.CapSense_Controller_CheckIsAnyWidgetActive,"ax",%progbits
 928              		.align	2
 929              		.global	CapSense_Controller_CheckIsAnyWidgetActive
 930              		.thumb
 931              		.thumb_func
 932              		.type	CapSense_Controller_CheckIsAnyWidgetActive, %function
 933              	CapSense_Controller_CheckIsAnyWidgetActive:
 934              	.LFB8:
 677:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 678:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 679:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
 680:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Function Name: CapSense_Controller_CheckIsAnyWidgetActive
 681:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
 682:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 683:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Summary:
 684:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Compares all sensors of the CapSense_Controller_signal[] array to their finger 
 685:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  threshold. Calls CapSense_Controller_CheckIsWidgetActive() for each widget so 
 686:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  the CapSense_Controller_SensorOnMask[] array is up to date after calling this 
 687:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  function.
 688:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 689:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Parameters:
 690:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  widget:  widget number.
 691:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 692:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Return:
 693:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 694:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 695:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Reentrant:
 696:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  No
 697:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 698:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
 699:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** uint8 CapSense_Controller_CheckIsAnyWidgetActive(void)
 700:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                  
 701:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** {
 935              		.loc 1 701 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 8
 938              		@ frame_needed = 1, uses_anonymous_args = 0
 939 0000 80B5     		push	{r7, lr}
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 7, -8
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 30


 942              		.cfi_offset 14, -4
 943 0002 82B0     		sub	sp, sp, #8
 944              		.cfi_def_cfa_offset 16
 945 0004 00AF     		add	r7, sp, #0
 946              		.cfi_def_cfa_register 7
 702:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 i;
 703:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 state = 0u;
 947              		.loc 1 703 0
 948 0006 0023     		movs	r3, #0
 949 0008 BB71     		strb	r3, [r7, #6]
 704:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 705:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     for(i = 0u; i < CapSense_Controller_TOTAL_WIDGET_COUNT; i++)
 950              		.loc 1 705 0
 951 000a 0023     		movs	r3, #0
 952 000c FB71     		strb	r3, [r7, #7]
 953 000e 0BE0     		b	.L54
 954              	.L56:
 706:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 707:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if (CapSense_Controller_CheckIsWidgetActive(i) != 0u)
 955              		.loc 1 707 0
 956 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 957 0012 1846     		mov	r0, r3
 958 0014 FFF7FEFF 		bl	CapSense_Controller_CheckIsWidgetActive
 959 0018 0346     		mov	r3, r0
 960 001a 002B     		cmp	r3, #0
 961 001c 01D0     		beq	.L55
 708:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
 709:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             state = CapSense_Controller_WIDGET_IS_ACTIVE;
 962              		.loc 1 709 0
 963 001e 0123     		movs	r3, #1
 964 0020 BB71     		strb	r3, [r7, #6]
 965              	.L55:
 705:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 966              		.loc 1 705 0 discriminator 2
 967 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 968 0024 0133     		adds	r3, r3, #1
 969 0026 FB71     		strb	r3, [r7, #7]
 970              	.L54:
 705:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 971              		.loc 1 705 0 is_stmt 0 discriminator 1
 972 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 973 002a 032B     		cmp	r3, #3
 974 002c F0D9     		bls	.L56
 710:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
 711:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 712:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 713:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 714:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     return (state);
 975              		.loc 1 714 0 is_stmt 1
 976 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 715:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** }
 977              		.loc 1 715 0
 978 0030 1846     		mov	r0, r3
 979 0032 0837     		adds	r7, r7, #8
 980              		.cfi_def_cfa_offset 8
 981 0034 BD46     		mov	sp, r7
 982              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 31


 983              		@ sp needed
 984 0036 80BD     		pop	{r7, pc}
 985              		.cfi_endproc
 986              	.LFE8:
 987              		.size	CapSense_Controller_CheckIsAnyWidgetActive, .-CapSense_Controller_CheckIsAnyWidgetActive
 988              		.section	.text.CapSense_Controller_EnableWidget,"ax",%progbits
 989              		.align	2
 990              		.global	CapSense_Controller_EnableWidget
 991              		.thumb
 992              		.thumb_func
 993              		.type	CapSense_Controller_EnableWidget, %function
 994              	CapSense_Controller_EnableWidget:
 995              	.LFB9:
 716:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 717:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 718:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
 719:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Function Name: CapSense_Controller_EnableWidget
 720:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
 721:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 722:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Summary:
 723:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 724:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 725:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Parameters:
 726:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  widget:  widget number.
 727:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 728:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Return:
 729:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  None
 730:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 731:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Global Variables:
 732:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorEnableMask[] - used to store the sensor scanning 
 733:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  state.
 734:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorEnableMask[0] contains the masked bits for sensors 
 735:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 736:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorEnableMask[1] contains the masked bits for 
 737:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 738:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  0 - sensor doesn't scan by CapSense_Controller_ScanEnabledWidgets().
 739:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  1 - sensor scans by CapSense_Controller_ScanEnabledWidgets().
 740:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 741:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Reentrant:
 742:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  No
 743:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 744:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
 745:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** void CapSense_Controller_EnableWidget(uint8 widget)
 746:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    
 747:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** {
 996              		.loc 1 747 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 16
 999              		@ frame_needed = 1, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
 1001 0000 80B4     		push	{r7}
 1002              		.cfi_def_cfa_offset 4
 1003              		.cfi_offset 7, -4
 1004 0002 85B0     		sub	sp, sp, #20
 1005              		.cfi_def_cfa_offset 24
 1006 0004 00AF     		add	r7, sp, #0
 1007              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 32


 1008 0006 0346     		mov	r3, r0
 1009 0008 FB71     		strb	r3, [r7, #7]
 748:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 pos;
 749:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 enMask;
 750:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 rawIndex = CapSense_Controller_rawDataIndex[widget];
 1010              		.loc 1 750 0
 1011 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1012 000c 134A     		ldr	r2, .L60
 1013 000e D35C     		ldrb	r3, [r2, r3]
 1014 0010 FB73     		strb	r3, [r7, #15]
 751:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 numberOfSensors = CapSense_Controller_numberOfSensors[widget] + rawIndex;
 1015              		.loc 1 751 0
 1016 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1017 0014 124A     		ldr	r2, .L60+4
 1018 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1019 0018 FB7B     		ldrb	r3, [r7, #15]
 1020 001a 1344     		add	r3, r3, r2
 1021 001c BB73     		strb	r3, [r7, #14]
 1022              	.L59:
 752:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 753:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* Enable all sensors of the widget */
 754:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     do
 755:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 756:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         pos = (rawIndex >> 3u);
 1023              		.loc 1 756 0 discriminator 1
 1024 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1025 0020 DB08     		lsrs	r3, r3, #3
 1026 0022 7B73     		strb	r3, [r7, #13]
 757:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1027              		.loc 1 757 0 discriminator 1
 1028 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1029 0026 03F00703 		and	r3, r3, #7
 1030 002a 0122     		movs	r2, #1
 1031 002c 02FA03F3 		lsl	r3, r2, r3
 1032 0030 3B73     		strb	r3, [r7, #12]
 758:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 759:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_sensorEnableMask[pos] |= enMask;
 1033              		.loc 1 759 0 discriminator 1
 1034 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1035 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1036 0036 0B49     		ldr	r1, .L60+8
 1037 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1038 003a 3A7B     		ldrb	r2, [r7, #12]
 1039 003c 0A43     		orrs	r2, r2, r1
 1040 003e D1B2     		uxtb	r1, r2
 1041 0040 084A     		ldr	r2, .L60+8
 1042 0042 D154     		strb	r1, [r2, r3]
 760:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         rawIndex++;
 1043              		.loc 1 760 0 discriminator 1
 1044 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1045 0046 0133     		adds	r3, r3, #1
 1046 0048 FB73     		strb	r3, [r7, #15]
 761:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 762:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     while(rawIndex < numberOfSensors);
 1047              		.loc 1 762 0 discriminator 1
 1048 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1049 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 33


 1050 004e 9A42     		cmp	r2, r3
 1051 0050 E5D3     		bcc	.L59
 763:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 764:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 765:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** }
 1052              		.loc 1 765 0
 1053 0052 00BF     		nop
 1054 0054 1437     		adds	r7, r7, #20
 1055              		.cfi_def_cfa_offset 4
 1056 0056 BD46     		mov	sp, r7
 1057              		.cfi_def_cfa_register 13
 1058              		@ sp needed
 1059 0058 80BC     		pop	{r7}
 1060              		.cfi_restore 7
 1061              		.cfi_def_cfa_offset 0
 1062 005a 7047     		bx	lr
 1063              	.L61:
 1064              		.align	2
 1065              	.L60:
 1066 005c 00000000 		.word	CapSense_Controller_rawDataIndex
 1067 0060 00000000 		.word	CapSense_Controller_numberOfSensors
 1068 0064 00000000 		.word	CapSense_Controller_sensorEnableMask
 1069              		.cfi_endproc
 1070              	.LFE9:
 1071              		.size	CapSense_Controller_EnableWidget, .-CapSense_Controller_EnableWidget
 1072              		.section	.text.CapSense_Controller_DisableWidget,"ax",%progbits
 1073              		.align	2
 1074              		.global	CapSense_Controller_DisableWidget
 1075              		.thumb
 1076              		.thumb_func
 1077              		.type	CapSense_Controller_DisableWidget, %function
 1078              	CapSense_Controller_DisableWidget:
 1079              	.LFB10:
 766:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 767:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 768:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** /*******************************************************************************
 769:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Function Name: CapSense_Controller_DisableWidget
 770:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** ********************************************************************************
 771:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 772:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Summary:
 773:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 774:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 775:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Parameters:
 776:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  widget:  widget number.
 777:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 778:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Return:
 779:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  None
 780:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 781:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Global Variables:
 782:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorEnableMask[] - used to store the sensor scanning 
 783:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  state.
 784:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorEnableMask[0] contains the masked bits for sensors 
 785:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 786:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  CapSense_Controller_sensorEnableMask[1] contains the masked bits for 
 787:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 788:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  0 - sensor doesn't scan by CapSense_Controller_ScanEnabledWidgets().
 789:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  1 - sensor scans by CapSense_Controller_ScanEnabledWidgets().
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 34


 790:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 791:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** * Reentrant:
 792:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *  No
 793:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *
 794:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** *******************************************************************************/
 795:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** void CapSense_Controller_DisableWidget(uint8 widget)
 796:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     
 797:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** {
 1080              		.loc 1 797 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 16
 1083              		@ frame_needed = 1, uses_anonymous_args = 0
 1084              		@ link register save eliminated.
 1085 0000 80B4     		push	{r7}
 1086              		.cfi_def_cfa_offset 4
 1087              		.cfi_offset 7, -4
 1088 0002 85B0     		sub	sp, sp, #20
 1089              		.cfi_def_cfa_offset 24
 1090 0004 00AF     		add	r7, sp, #0
 1091              		.cfi_def_cfa_register 7
 1092 0006 0346     		mov	r3, r0
 1093 0008 FB71     		strb	r3, [r7, #7]
 798:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 pos;
 799:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 enMask;
 800:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 rawIndex = CapSense_Controller_rawDataIndex[widget];
 1094              		.loc 1 800 0
 1095 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1096 000c 144A     		ldr	r2, .L64
 1097 000e D35C     		ldrb	r3, [r2, r3]
 1098 0010 FB73     		strb	r3, [r7, #15]
 801:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 numberOfSensors = CapSense_Controller_numberOfSensors[widget] + rawIndex;
 1099              		.loc 1 801 0
 1100 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1101 0014 134A     		ldr	r2, .L64+4
 1102 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1103 0018 FB7B     		ldrb	r3, [r7, #15]
 1104 001a 1344     		add	r3, r3, r2
 1105 001c BB73     		strb	r3, [r7, #14]
 1106              	.L63:
 802:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****    
 803:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /* Disable all sensors of the widget */
 804:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     do
 805:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 806:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         pos = (rawIndex >> 3u);
 1107              		.loc 1 806 0 discriminator 1
 1108 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1109 0020 DB08     		lsrs	r3, r3, #3
 1110 0022 7B73     		strb	r3, [r7, #13]
 807:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1111              		.loc 1 807 0 discriminator 1
 1112 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1113 0026 03F00703 		and	r3, r3, #7
 1114 002a 0122     		movs	r2, #1
 1115 002c 02FA03F3 		lsl	r3, r2, r3
 1116 0030 3B73     		strb	r3, [r7, #12]
 808:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
 809:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_sensorEnableMask[pos] &= (uint8)~enMask;
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 35


 1117              		.loc 1 809 0 discriminator 1
 1118 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1119 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1120 0036 0C49     		ldr	r1, .L64+8
 1121 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1122 003a 3A7B     		ldrb	r2, [r7, #12]
 1123 003c D243     		mvns	r2, r2
 1124 003e D2B2     		uxtb	r2, r2
 1125 0040 0A40     		ands	r2, r2, r1
 1126 0042 D1B2     		uxtb	r1, r2
 1127 0044 084A     		ldr	r2, .L64+8
 1128 0046 D154     		strb	r1, [r2, r3]
 810:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         rawIndex++;
 1129              		.loc 1 810 0 discriminator 1
 1130 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1131 004a 0133     		adds	r3, r3, #1
 1132 004c FB73     		strb	r3, [r7, #15]
 811:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 812:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     while(rawIndex < numberOfSensors);
 1133              		.loc 1 812 0 discriminator 1
 1134 004e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1135 0050 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1136 0052 9A42     		cmp	r2, r3
 1137 0054 E3D3     		bcc	.L63
 813:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 814:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 815:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** }
 1138              		.loc 1 815 0
 1139 0056 00BF     		nop
 1140 0058 1437     		adds	r7, r7, #20
 1141              		.cfi_def_cfa_offset 4
 1142 005a BD46     		mov	sp, r7
 1143              		.cfi_def_cfa_register 13
 1144              		@ sp needed
 1145 005c 80BC     		pop	{r7}
 1146              		.cfi_restore 7
 1147              		.cfi_def_cfa_offset 0
 1148 005e 7047     		bx	lr
 1149              	.L65:
 1150              		.align	2
 1151              	.L64:
 1152 0060 00000000 		.word	CapSense_Controller_rawDataIndex
 1153 0064 00000000 		.word	CapSense_Controller_numberOfSensors
 1154 0068 00000000 		.word	CapSense_Controller_sensorEnableMask
 1155              		.cfi_endproc
 1156              	.LFE10:
 1157              		.size	CapSense_Controller_DisableWidget, .-CapSense_Controller_DisableWidget
 1158              		.section	.text.CapSense_Controller_IIR4Filter,"ax",%progbits
 1159              		.align	2
 1160              		.global	CapSense_Controller_IIR4Filter
 1161              		.thumb
 1162              		.thumb_func
 1163              		.type	CapSense_Controller_IIR4Filter, %function
 1164              	CapSense_Controller_IIR4Filter:
 1165              	.LFB11:
 816:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #if(CapSense_Controller_TOTAL_CENTROIDS_COUNT)
 817:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 36


 818:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Function Name: CapSense_Controller_FindMaximum
 819:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     ********************************************************************************
 820:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
 821:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Summary:
 822:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 823:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  CapSense_Controller_SensorSignal[] within defined cenrtoid and 
 824:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 825:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  ignored.
 826:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 827:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 828:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 829:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * 
 830:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Parameters:
 831:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_Controller_sensorSignal[] array.
 832:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  count:   number of elements within centroid.
 833:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 834:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  diplex:   pointer to diplex table.
 835:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * 
 836:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Return:
 837:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 838:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 839:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * 
 840:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *******************************************************************************/
 841:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #if (CapSense_Controller_IS_DIPLEX_SLIDER)
 842:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 CapSense_Controller_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, con
 843:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 	                                       
 844:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #else 
 845:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 CapSense_Controller_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 846:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 	                                       
 847:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER) */
 848:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 849:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 i;
 850:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_IS_DIPLEX_SLIDER)        
 851:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 curPos = 0u;
 852:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* No centroid at the Start */
 853:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 curCntrdSize = 0u;
 854:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 855:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* The biggset centroid is zero */
 856:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 857:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 858:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER) */
 859:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 maximum = 0xFFu;
 860:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 temp = 0u;
 861:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 *startOfSlider = &CapSense_Controller_sensorSignal[offset]; 
 862:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 863:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_IS_DIPLEX_SLIDER)        
 864:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             if(diplex != 0u)
 865:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
 866:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Initialize */
 867:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 i = 0u;
 868:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 
 869:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Make slider x2 as Diplexed */
 870:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 count <<= 1u;
 871:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 while(1u)
 872:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 { 
 873:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 874:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 37


 875:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 876:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         {
 877:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             /* Start of centroid */
 878:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             curCtrdStartPos = i;
 879:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             curCntrdSize++;
 880:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         }
 881:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         else
 882:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         {
 883:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             curCntrdSize++;
 884:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         }
 885:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }
 886:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 887:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {          
 888:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         if(curCntrdSize > 0u)
 889:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         {
 890:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             /* We are in the end of current */
 891:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 892:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
 893:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 894:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 895:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
 896:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             
 897:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             curCntrdSize = 0u;
 898:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 899:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         }
 900:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }
 901:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     
 902:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     i++; 
 903:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     curPos = diplex[i];
 904:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     if(i == count)
 905:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
 906:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         break;
 907:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }            
 908:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
 909:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     
 910:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 911:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                        We are in the end of current */
 912:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 913:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
 914:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 915:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 916:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
 917:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
 918:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             else
 919:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
 920:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Without diplexing */ 
 921:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 biggestCtrdSize = count;
 922:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
 923:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         
 924:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
 925:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* Check centroid size */
 926:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #if (CapSense_Controller_IS_NON_DIPLEX_SLIDER)
 927:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 928:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #else                    
 929:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 930:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #endif /* (CapSense_Controller_IS_NON_DIPLEX_SLIDER) */
 931:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 38


 932:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 933:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
 934:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if (CapSense_Controller_IS_DIPLEX_SLIDER && CapSense_Controller_IS_NON_DIP
 935:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if (diplex == 0u)
 936:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
 937:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 curPos = i;
 938:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
 939:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             else
 940:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
 941:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 curPos = diplex[i];
 942:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }                    
 943:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #elif (CapSense_Controller_IS_DIPLEX_SLIDER)                    
 944:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             curPos = diplex[i];                    
 945:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER && CapSense_Controller_IS_N
 946:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         /* Looking for the grater element within centroid */
 947:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 948:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         {
 949:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 950:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
 951:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 maximum = i;
 952:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 temp = startOfSlider[curPos];
 953:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
 954:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         }
 955:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }
 956:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 } 
 957:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #else
 958:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             for (i = 0u; i < count; i++)
 959:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {                      
 960:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Looking for the grater element within centroid */
 961:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 962:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
 963:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     if(startOfSlider[i] > temp)
 964:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
 965:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         maximum = i;
 966:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         temp = startOfSlider[i];
 967:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }
 968:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
 969:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }    
 970:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER) */
 971:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         return (maximum);
 972:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 973:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 974:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
 975:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /*******************************************************************************
 976:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Function Name: CapSense_Controller_CalcCentroid
 977:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     ********************************************************************************
 978:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
 979:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Summary:
 980:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 981:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  resolution.
 982:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
 983:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Parameters:
 984:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  type:  widget type.
 985:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  diplex:  pointer to diplex table.
 986:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 987:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_Controller_SensorSignal[] array.
 988:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  count:    Number of elements within centroid.
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 39


 989:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 990:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  API resolution.
 991:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 992:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * 
 993:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Return:
 994:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Returns position value of the slider.
 995:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * 
 996:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
 997:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Reentrant:
 998:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  No.
 999:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1000:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *******************************************************************************/
1001:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 CapSense_Controller_CalcCentroid(uint8 maximum, uint8 offset, 
1002:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1003:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 	                                    
1004:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
1005:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if ((CapSense_Controller_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_Controller_TOTAL_TO
1006:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 posPrev = 0u;
1007:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 posNext = 0u;
1008:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* ((CapSense_Controller_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_Controller_TOTA
1009:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                
1010:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_IS_DIPLEX_SLIDER)                
1011:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 pos;
1012:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER) */
1013:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1014:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Helps while centroid calulation */
1015:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         static uint8 CapSense_Controller_centroid[3u];
1016:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1017:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 position;
1018:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint32 numerator;
1019:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         int32 denominator;
1020:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 *startOfSlider = &CapSense_Controller_sensorSignal[offset];
1021:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     
1022:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_ADD_SLIDER_TYPE)
1023:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             if(type == CapSense_Controller_TYPE_RADIAL_SLIDER)
1024:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
1025:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_ADD_SLIDER_TYPE) */
1026:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1027:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #if (CapSense_Controller_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1028:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Copy Signal for found centriod */
1029:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 CapSense_Controller_centroid[CapSense_Controller_POS] = startOfSlider[maximum];
1030:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                  
1031:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Check borders for ROTARY Slider */
1032:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1033:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 { 
1034:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_PREV] = startOfSlider[coun
1035:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_NEXT] = startOfSlider[1u];
1036:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
1037:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1038:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
1039:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_PREV] = startOfSlider[maxi
1040:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_NEXT] = startOfSlider[0u];
1041:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
1042:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 else                                /* Not first Not last */
1043:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
1044:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_PREV] = startOfSlider[maxi
1045:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_NEXT] = startOfSlider[maxi
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 40


1046:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
1047:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #endif /* (CapSense_Controller_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1048:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1049:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_ADD_SLIDER_TYPE)
1050:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
1051:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             else
1052:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
1053:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_ADD_SLIDER_TYPE) */
1054:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1055:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #if ((CapSense_Controller_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_Controller_TOTA
1056:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 #if (CapSense_Controller_IS_DIPLEX_SLIDER && CapSense_Controller_IS_NON_DIPLEX_SLID
1057:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     /* Calculate next and previous near to maximum */
1058:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     if(diplex == 0u)
1059:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
1060:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         pos     = maximum;
1061:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         posPrev = maximum - 1u;
1062:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         posNext = maximum + 1u; 
1063:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }
1064:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     else
1065:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
1066:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         pos     = diplex[maximum];
1067:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1068:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         posNext = diplex[maximum + 1u];
1069:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         count <<= 1u;
1070:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }                    
1071:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 #elif (CapSense_Controller_IS_DIPLEX_SLIDER)
1072:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     /* Calculate next and previous near to maximum */
1073:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     pos     = diplex[maximum];
1074:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1075:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     posNext = diplex[maximum + 1u];
1076:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     count <<= 1u;                    
1077:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 #else                    
1078:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     /* Calculate next and previous near to maximum */
1079:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     if (maximum >= 1u)
1080:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
1081:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         posPrev = maximum - 1u;
1082:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }
1083:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     posNext = maximum + 1u; 
1084:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER && CapSense_Controller_IS_NON_DIPLE
1085:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         
1086:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Copy Signal for found centriod */
1087:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 #if (CapSense_Controller_IS_DIPLEX_SLIDER)
1088:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS] = startOfSlider[pos];
1089:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 #else
1090:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS] = startOfSlider[maximum];
1091:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER) */
1092:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     
1093:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Check borders for LINEAR Slider */
1094:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1095:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 { 
1096:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_PREV] = 0u;
1097:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_NEXT] = startOfSlider[posN
1098:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
1099:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1100:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
1101:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_PREV] = startOfSlider[posP
1102:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_NEXT] = 0u;
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 41


1103:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
1104:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 else                                /* Not first Not last */
1105:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
1106:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_PREV] = startOfSlider[posP
1107:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_centroid[CapSense_Controller_POS_NEXT] = startOfSlider[posN
1108:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
1109:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #endif /* ((CapSense_Controller_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_Controller_TO
1110:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1111:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_ADD_SLIDER_TYPE)
1112:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
1113:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_ADD_SLIDER_TYPE) */
1114:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
1115:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Subtract noiseThreshold */
1116:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if(CapSense_Controller_centroid[CapSense_Controller_POS_PREV] > noiseThreshold)
1117:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
1118:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_centroid[CapSense_Controller_POS_PREV] -= noiseThreshold;
1119:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
1120:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         else
1121:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
1122:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_centroid[CapSense_Controller_POS_PREV] = 0u;
1123:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
1124:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1125:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1126:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         CapSense_Controller_centroid[CapSense_Controller_POS] -= noiseThreshold;
1127:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1128:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Subtract noiseThreshold */
1129:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if(CapSense_Controller_centroid[CapSense_Controller_POS_NEXT] > noiseThreshold)
1130:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
1131:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_centroid[CapSense_Controller_POS_NEXT] -= noiseThreshold;
1132:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
1133:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         else
1134:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
1135:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             CapSense_Controller_centroid[CapSense_Controller_POS_NEXT] = 0u;
1136:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
1137:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1138:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1139:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Si+1 - Si-1 */
1140:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         numerator = (uint32) CapSense_Controller_centroid[CapSense_Controller_POS_NEXT] -
1141:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     (uint32) CapSense_Controller_centroid[CapSense_Controller_POS_PREV];
1142:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1143:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Si+1 + Si + Si-1 */
1144:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         denominator = (int32) CapSense_Controller_centroid[CapSense_Controller_POS_PREV] + 
1145:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                       (int32) CapSense_Controller_centroid[CapSense_Controller_POS] + 
1146:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                       (int32) CapSense_Controller_centroid[CapSense_Controller_POS_NEXT];
1147:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1148:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* (numerator/denominator) + maximum */
1149:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1150:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1151:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if(CapSense_Controller_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1152:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* Only required for RADIAL Slider */
1153:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             if(denominator < 0)
1154:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
1155:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1156:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
1157:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1158:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1159:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         denominator *= (int16)resolution;
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 42


1160:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1161:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Round the relust and put it to uint8 */
1162:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_Controller_CENTROID_ROUND_VALUE));
1163:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1164:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         return (position);
1165:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }    
1166:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #endif /* (CapSense_Controller_TOTAL_CENTROIDS_COUNT) */
1167:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1168:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1169:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #if(CapSense_Controller_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1170:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /*******************************************************************************
1171:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Function Name: CapSense_Controller_GetCentroidPos
1172:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     ********************************************************************************
1173:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1174:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Summary:
1175:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Checks the CapSense_Controller_Signal[ ] array for a centroid within
1176:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1177:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1178:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  result if enabled.
1179:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1180:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Parameters:
1181:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  widget:  Widget number.
1182:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1183:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  #define CapSense_Controller_LS__"widget_name"            5
1184:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * 
1185:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Return:
1186:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Returns position value of the linear slider.
1187:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1188:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Side Effects:
1189:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1190:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1191:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1192:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1193:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1194:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1195:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1196:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Note:
1197:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1198:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1199:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1200:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  that noise will not generate a false centroid.
1201:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1202:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Reentrant:
1203:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  No.
1204:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1205:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *******************************************************************************/
1206:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint16 CapSense_Controller_GetCentroidPos(uint8 widget) 
1207:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
1208:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_IS_DIPLEX_SLIDER)
1209:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             const uint8 CYCODE *diplex;
1210:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER) */
1211:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 
1212:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (0u != CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK)
1213:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 posIndex;
1214:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 firstTimeIndex = CapSense_Controller_posFiltersData[widget];
1215:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 posFiltersMask = CapSense_Controller_posFiltersMask[widget];  
1216:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (0u != CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 43


1217:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1218:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if ((0u != (CapSense_Controller_MEDIAN_FILTER & CapSense_Controller_LINEAR_SLIDERS_POS_FIL
1219:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****              (0u != (CapSense_Controller_AVERAGING_FILTER & CapSense_Controller_LINEAR_SLIDERS_POS_
1220:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 tempPos;
1221:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* ((0u != (CapSense_Controller_MEDIAN_FILTER & CapSense_Controller_LINEAR_SLIDERS_P
1222:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                *   (0u != (CapSense_Controller_AVERAGING_FILTER & CapSense_Controller_LINEAR_SLIDER
1223:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                */
1224:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1225:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 maximum;
1226:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint16 position;
1227:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 offset = CapSense_Controller_rawDataIndex[widget];
1228:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 count = CapSense_Controller_numberOfSensors[widget];
1229:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         
1230:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_IS_DIPLEX_SLIDER)
1231:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             if(widget < CapSense_Controller_TOTAL_DIPLEXED_SLIDERS_COUNT)
1232:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
1233:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 maximum = CapSense_Controller_diplexTable[widget];
1234:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 diplex = &CapSense_Controller_diplexTable[maximum];
1235:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
1236:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             else
1237:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
1238:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 diplex = 0u;
1239:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
1240:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER) */
1241:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1242:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Find Maximum within centroid */      
1243:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_IS_DIPLEX_SLIDER)        
1244:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             maximum = CapSense_Controller_FindMaximum(offset, count, CapSense_Controller_fingerThre
1245:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #else
1246:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             maximum = CapSense_Controller_FindMaximum(offset, count, CapSense_Controller_fingerThre
1247:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER) */
1248:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1249:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if (maximum != 0xFFu)
1250:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
1251:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* Calculate centroid */
1252:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             position = (uint16) CapSense_Controller_CalcCentroid(maximum, 
1253:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                          offset, count, CapSense_Controller_centroidMult[widget], CapSense_Controll
1254:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1255:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #if (0u != CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK)
1256:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1257:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_Controller_ANY_POS_FILTER))
1258:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
1259:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     /* Caluclate position to store filters data */
1260:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1261:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     
1262:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     if (0u == CapSense_Controller_posFiltersData[firstTimeIndex])
1263:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
1264:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         /* Init filters */
1265:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         CapSense_Controller_posFiltersData[posIndex] = (uint8) position;
1266:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if ((0u != (CapSense_Controller_MEDIAN_FILTER & \
1267:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                      CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1268:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                              (0u != (CapSense_Controller_AVERAGING_FILTER & \
1269:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                      CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1270:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1271:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_Controller_MEDIAN_FILTER)) || 
1272:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_Controller_AVERAGING_FILTER)) )
1273:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 44


1274:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex + 1u] = (uint8) positio
1275:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
1276:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* ((0u != (CapSense_Controller_MEDIAN_FILTER & \
1277:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *           CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1278:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *   (0u != (CapSense_Controller_AVERAGING_FILTER & \
1279:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *           CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1280:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1281:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         
1282:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         CapSense_Controller_posFiltersData[firstTimeIndex] = 1u;
1283:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }
1284:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     else
1285:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
1286:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         /* Do filtering */
1287:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if (0u != (CapSense_Controller_MEDIAN_FILTER & CapSense_Controller_LINEAR_
1288:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_Controller_MEDIAN_FILTER))
1289:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
1290:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 tempPos = (uint8) position;
1291:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 position = CapSense_Controller_MedianFilter(position,
1292:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                 (uint16)CapSense_Controller_posFilt
1293:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                 (uint16)CapSense_Controller_posFilt
1294:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex + 1u] =
1295:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                              CapSense_Controller_po
1296:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex] = tempPos;
1297:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
1298:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /*(0u != (CapSense_Controller_MEDIAN_FILTER &
1299:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *         CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK))
1300:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1301:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1302:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if(0u!=(CapSense_Controller_AVERAGING_FILTER & CapSense_Controller_LINEAR_
1303:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_Controller_AVERAGING_FILTER)) 
1304:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
1305:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 tempPos = (uint8) position;
1306:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 position = CapSense_Controller_AveragingFilter(position,
1307:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                 (uint16)CapSense_Controller_posFilt
1308:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                 (uint16)CapSense_Controller_posFilt
1309:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex+1u]=CapSense_Controller
1310:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex] = tempPos;
1311:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
1312:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* (0u != (CapSense_Controller_AVERAGING_FILTER & \
1313:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *           CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK))
1314:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1315:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1316:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if (0u != (CapSense_Controller_IIR2_FILTER & CapSense_Controller_LINEAR_SL
1317:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_Controller_IIR2_FILTER)) 
1318:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
1319:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 position = CapSense_Controller_IIR2Filter(position,
1320:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                     (uint16)CapSense_Controller_pos
1321:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex] = (uint8) position;
1322:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
1323:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* (0u != (CapSense_Controller_IIR2_FILTER & \
1324:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *          CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK))
1325:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1326:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1327:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if (0u != (CapSense_Controller_IIR4_FILTER & CapSense_Controller_LINEAR_SL
1328:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_Controller_IIR4_FILTER))
1329:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
1330:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 position = CapSense_Controller_IIR4Filter(position,
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 45


1331:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                     (uint16)CapSense_Controller_pos
1332:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex] = (uint8) position;
1333:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }                                
1334:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* (0u != (CapSense_Controller_IIR4_FILTER & \
1335:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *          CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK))
1336:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1337:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1338:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if (0u != (CapSense_Controller_JITTER_FILTER & CapSense_Controller_LINEAR_
1339:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_Controller_JITTER_FILTER))
1340:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
1341:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 position = CapSense_Controller_JitterFilter(position,
1342:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                     (uint16)CapSense_Controller_pos
1343:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex] = (uint8) position;
1344:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
1345:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* (0u != (CapSense_Controller_JITTER_FILTER & \
1346:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *           CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK))
1347:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1348:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }
1349:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
1350:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #endif /* (0u != CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1351:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1352:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
1353:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         else
1354:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
1355:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* The maximum wasn't found */
1356:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             position = 0xFFFFu;
1357:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1358:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #if(0u != CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK)
1359:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Reset the filters */
1360:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_Controller_ANY_POS_FILTER))
1361:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
1362:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_posFiltersData[firstTimeIndex] = 0u;
1363:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
1364:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #endif /* (0u != CapSense_Controller_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1365:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
1366:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1367:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1368:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         return (position);
1369:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
1370:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #endif /* (CapSense_Controller_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1371:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1372:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1373:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #if(CapSense_Controller_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1374:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /*******************************************************************************
1375:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Function Name: CapSense_Controller_GetRadialCentroidPos
1376:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     ********************************************************************************
1377:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1378:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Summary:
1379:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Checks the CapSense_Controller_Signal[ ] array for a centroid within
1380:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1381:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1382:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  result if enabled.
1383:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1384:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Parameters:
1385:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  widget:  Widget number.
1386:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1387:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  #define CapSense_Controller_RS_"widget_name"            5
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 46


1388:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * 
1389:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Return:
1390:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Returns position value of the radial slider.
1391:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1392:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Side Effects:
1393:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1394:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1395:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1396:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1397:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1398:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1399:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Note:
1400:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1401:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1402:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1403:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  that noise will not generate a false centroid.
1404:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1405:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1406:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Reentrant:
1407:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  No.
1408:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1409:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *******************************************************************************/
1410:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****      uint16 CapSense_Controller_GetRadialCentroidPos(uint8 widget)
1411:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 	                                       
1412:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
1413:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (0u != CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK)
1414:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 posIndex;
1415:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 firstTimeIndex = CapSense_Controller_posFiltersData[widget];
1416:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 posFiltersMask = CapSense_Controller_posFiltersMask[widget]; 
1417:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (0u != CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1418:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1419:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if ((0u != (CapSense_Controller_MEDIAN_FILTER & CapSense_Controller_RADIAL_SLIDERS_POS_FIL
1420:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****              (0u != (CapSense_Controller_AVERAGING_FILTER & CapSense_Controller_RADIAL_SLIDERS_POS_
1421:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 tempPos;
1422:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* ((0u != (CapSense_Controller_MEDIAN_FILTER & CapSense_Controller_RADIAL_SLIDERS_P
1423:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                *   (0u != (CapSense_Controller_AVERAGING_FILTER & CapSense_Controller_RADIAL_SLIDER
1424:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                */
1425:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1426:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 maximum;
1427:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint16 position;
1428:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 offset = CapSense_Controller_rawDataIndex[widget];
1429:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 count = CapSense_Controller_numberOfSensors[widget];
1430:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1431:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Find Maximum within centroid */        
1432:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_IS_DIPLEX_SLIDER)
1433:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             maximum = CapSense_Controller_FindMaximum(offset, count, CapSense_Controller_fingerThre
1434:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #else
1435:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             maximum = CapSense_Controller_FindMaximum(offset, count, CapSense_Controller_fingerThre
1436:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER) */
1437:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1438:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if (maximum != 0xFFu)
1439:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
1440:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* Calculate centroid */
1441:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             position = (uint16) CapSense_Controller_CalcCentroid(maximum, 
1442:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                          offset, count, CapSense_Controller_centroidMult[widget], CapSense_Controll
1443:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1444:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #if (0u != CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK)
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 47


1445:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1446:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_Controller_ANY_POS_FILTER))
1447:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
1448:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     /* Caluclate position to store filters data */
1449:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1450:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     
1451:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     if (0u == CapSense_Controller_posFiltersData[firstTimeIndex])
1452:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
1453:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         /* Init filters */
1454:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         CapSense_Controller_posFiltersData[posIndex] = (uint8) position;
1455:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if ((0u != (CapSense_Controller_MEDIAN_FILTER & \
1456:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                      CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1457:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                              (0u != (CapSense_Controller_AVERAGING_FILTER & \
1458:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                      CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1459:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1460:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_Controller_MEDIAN_FILTER))  || 
1461:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_Controller_AVERAGING_FILTER)) )
1462:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
1463:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex + 1u] = (uint8) positio
1464:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
1465:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* ((0u != (CapSense_Controller_MEDIAN_FILTER & \
1466:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *           CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1467:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *   (0u != (CapSense_Controller_AVERAGING_FILTER & \
1468:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *           CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1469:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1470:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         
1471:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         CapSense_Controller_posFiltersData[firstTimeIndex] = 1u;
1472:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }
1473:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     else
1474:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
1475:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         /* Do filtering */
1476:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if (0u != (CapSense_Controller_MEDIAN_FILTER & CapSense_Controller_RADIAL_
1477:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_Controller_MEDIAN_FILTER))
1478:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
1479:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 tempPos = (uint8) position;
1480:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 position = CapSense_Controller_MedianFilter(position,
1481:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                         CapSense_Controller_posFilt
1482:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                         CapSense_Controller_posFilt
1483:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex + 1u] = 
1484:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                               CapSense_Controller_p
1485:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex] = tempPos;
1486:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
1487:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* (0u != (CapSense_Controller_MEDIAN_FILTER & 
1488:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *          CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK))
1489:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1490:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1491:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if (0u != (CapSense_Controller_AVERAGING_FILTER & \
1492:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK))
1493:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_Controller_AVERAGING_FILTER))
1494:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
1495:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 tempPos = (uint8) position;
1496:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 position = CapSense_Controller_AveragingFilter(position, 
1497:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                        CapSense_Controller_posFilte
1498:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                        CapSense_Controller_posFilte
1499:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex+1u]= CapSense_Controlle
1500:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex] = tempPos;
1501:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 48


1502:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* (0u != (CapSense_Controller_AVERAGING_FILTER & \
1503:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *          CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK))
1504:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1505:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1506:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if (0u != (CapSense_Controller_IIR2_FILTER & CapSense_Controller_RADIAL_SL
1507:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_Controller_IIR2_FILTER))
1508:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
1509:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 position = CapSense_Controller_IIR2Filter(position,
1510:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                     (uint16)CapSense_Controller_pos
1511:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex] = (uint8) position;
1512:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
1513:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* (0u != (CapSense_Controller_IIR2_FILTER & 
1514:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *          CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK))
1515:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1516:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1517:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if (0u != (CapSense_Controller_IIR4_FILTER & CapSense_Controller_RADIAL_SL
1518:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_Controller_IIR4_FILTER))
1519:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
1520:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 position = CapSense_Controller_IIR4Filter(position,
1521:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                     (uint16)CapSense_Controller_pos
1522:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex] = (uint8) position;
1523:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
1524:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* (0u != (CapSense_Controller_IIR4_FILTER & 
1525:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *          CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK))
1526:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1527:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1528:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #if (0u != (CapSense_Controller_JITTER_FILTER & CapSense_Controller_RADIAL_
1529:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_Controller_JITTER_FILTER))
1530:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             {
1531:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 position = CapSense_Controller_JitterFilter(position, 
1532:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                          CapSense_Controller_posFil
1533:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 CapSense_Controller_posFiltersData[posIndex] = (uint8) position;
1534:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             }
1535:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         #endif /* (0u != (CapSense_Controller_JITTER_FILTER &
1536:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                *           CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK))
1537:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                */
1538:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }
1539:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
1540:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #endif /* (0u != CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1541:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1542:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
1543:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         else
1544:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
1545:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* The maximum didn't find */
1546:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             position = 0xFFFFu;
1547:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1548:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #if (0u != CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK)
1549:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Reset the filters */
1550:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 if((posFiltersMask & CapSense_Controller_ANY_POS_FILTER) != 0u)
1551:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
1552:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_posFiltersData[firstTimeIndex] = 0u;
1553:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
1554:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #endif /* (0u != CapSense_Controller_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1555:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
1556:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1557:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         return (position);
1558:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 49


1559:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #endif
1560:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1561:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1562:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #if(CapSense_Controller_TOTAL_TOUCH_PADS_COUNT > 0u)
1563:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /*******************************************************************************
1564:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Function Name: CapSense_Controller_GetTouchCentroidPos
1565:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     ********************************************************************************
1566:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1567:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Summary:
1568:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1569:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1570:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1571:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1572:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  The position filter is applied to the result if enabled.
1573:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1574:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  customizer.
1575:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1576:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Parameters:
1577:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  widget:  Widget number. 
1578:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1579:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  #define CapSense_Controller_TP_"widget_name"            5
1580:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1581:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1582:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  result of calculation of X and Y position are stored.
1583:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  pos[0u]  - position of X
1584:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  pos[1u]  - position of Y
1585:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1586:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Return:
1587:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1588:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1589:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Side Effects:
1590:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1591:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1592:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *   calculations.
1593:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1594:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Reentrant:
1595:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  No.
1596:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1597:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *******************************************************************************/
1598:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint8 CapSense_Controller_GetTouchCentroidPos(uint8 widget, uint16* pos)
1599:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 	                                    
1600:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
1601:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (0u != CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK)
1602:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 posXIndex;
1603:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 posYIndex;
1604:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 firstTimeIndex = CapSense_Controller_posFiltersData[widget];
1605:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint8 posFiltersMask = CapSense_Controller_posFiltersMask[widget];
1606:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (0u != CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK) */
1607:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1608:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if ((0u != (CapSense_Controller_MEDIAN_FILTER & CapSense_Controller_TOUCH_PADS_POS_FILTERS
1609:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****              (0u != (CapSense_Controller_AVERAGING_FILTER & CapSense_Controller_TOUCH_PADS_POS_FILT
1610:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             uint16 tempPos;
1611:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* ((0u != (CapSense_Controller_MEDIAN_FILTER & CapSense_Controller_TOUCH_PADS_POS_F
1612:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                *   (0u != (CapSense_Controller_AVERAGING_FILTER & CapSense_Controller_TOUCH_PADS_PO
1613:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                */
1614:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1615:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 maxX;
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 50


1616:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 maxY;
1617:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 posX;
1618:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 posY;
1619:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 touch = 0u;
1620:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 offset = CapSense_Controller_rawDataIndex[widget];
1621:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint8 count = CapSense_Controller_numberOfSensors[widget];
1622:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1623:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* Find Maximum within X centroid */
1624:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (CapSense_Controller_IS_DIPLEX_SLIDER)
1625:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             maxX = CapSense_Controller_FindMaximum(offset, count, CapSense_Controller_fingerThresho
1626:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #else
1627:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             maxX = CapSense_Controller_FindMaximum(offset, count, CapSense_Controller_fingerThresho
1628:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER) */
1629:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1630:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if (maxX != 0xFFu)
1631:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
1632:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             offset = CapSense_Controller_rawDataIndex[widget + 1u];
1633:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             count = CapSense_Controller_numberOfSensors[widget + 1u];
1634:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1635:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             /* Find Maximum within Y centroid */
1636:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #if (CapSense_Controller_IS_DIPLEX_SLIDER)
1637:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 maxY = CapSense_Controller_FindMaximum(offset, count, CapSense_Controller_fingerThr
1638:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #else
1639:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 maxY = CapSense_Controller_FindMaximum(offset, count, CapSense_Controller_fingerThr
1640:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             #endif /* (CapSense_Controller_IS_DIPLEX_SLIDER) */
1641:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1642:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             if (maxY != 0xFFu)
1643:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
1644:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* X and Y maximums are found = true touch */
1645:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 touch = 1u;
1646:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 
1647:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Calculate Y centroid */
1648:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 posY = CapSense_Controller_CalcCentroid(maxY, offset, count, 
1649:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             CapSense_Controller_centroidMult[widget + 1u], CapSense_Controller_nois
1650:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 
1651:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Calculate X centroid */
1652:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 offset = CapSense_Controller_rawDataIndex[widget];
1653:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 count = CapSense_Controller_numberOfSensors[widget];
1654:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 
1655:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 posX = CapSense_Controller_CalcCentroid(maxX, offset, count, 
1656:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             CapSense_Controller_centroidMult[widget],CapSense_Controller_noiseThres
1657:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
1658:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 #if (0u != CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK)
1659:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     /* Check if this TP has enabled filters */
1660:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_Controller_ANY_POS_FILTER))
1661:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     {
1662:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         /* Caluclate position to store filters data */
1663:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1664:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         posYIndex  = CapSense_Controller_posFiltersData[widget + 1u];
1665:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         
1666:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         if (0u == CapSense_Controller_posFiltersData[firstTimeIndex])
1667:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         {
1668:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             /* Init filters */
1669:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             CapSense_Controller_posFiltersData[posXIndex] = posX;
1670:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             CapSense_Controller_posFiltersData[posYIndex] = posY;
1671:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1672:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #if((0u != (CapSense_Controller_MEDIAN_FILTER & \
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 51


1673:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                         CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK))|| \
1674:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 (0u != (CapSense_Controller_AVERAGING_FILTER & \
1675:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                         CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK)))
1676:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1677:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_Controller_MEDIAN_FILTER)) |
1678:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_Controller_AVERAGING_FILTER)
1679:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 {
1680:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posXIndex + 1u] = posX;
1681:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posYIndex + 1u] = posY;
1682:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 }
1683:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #endif /* ((0u != (CapSense_Controller_MEDIAN_FILTER & \
1684:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    *           CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK)) ||
1685:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    *    (0u != (CapSense_Controller_AVERAGING_FILTER & \
1686:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    *            CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK)))
1687:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    */
1688:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             
1689:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             CapSense_Controller_posFiltersData[firstTimeIndex] = 1u;
1690:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         }
1691:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         else
1692:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         {
1693:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             /* Do filtering */
1694:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #if (0u != (CapSense_Controller_MEDIAN_FILTER & CapSense_Controller_TOU
1695:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_Controller_MEDIAN_FILTER))
1696:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 {
1697:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     tempPos = posX;
1698:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     posX = (uint8) CapSense_Controller_MedianFilter(posX,
1699:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                       CapSense_Controller_posFilter
1700:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                       CapSense_Controller_posFilter
1701:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posXIndex + 1u] = 
1702:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                              CapSense_Controller_po
1703:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posXIndex] = tempPos;
1704:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     
1705:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     tempPos = posY;
1706:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     posY = (uint8) CapSense_Controller_MedianFilter(posY,
1707:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                        CapSense_Controller_posFilte
1708:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                        CapSense_Controller_posFilte
1709:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posYIndex + 1u] = 
1710:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                              CapSense_Controller_po
1711:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posYIndex] = tempPos;
1712:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 }
1713:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 
1714:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #endif /* (0u != (CapSense_Controller_MEDIAN_FILTER & \
1715:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    *          CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK))
1716:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    */
1717:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1718:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #if(0u !=(CapSense_Controller_AVERAGING_FILTER & CapSense_Controller_TO
1719:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_Controller_AVERAGING_FILTER))
1720:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 {
1721:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     tempPos = posX;
1722:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     posX = (uint8) CapSense_Controller_AveragingFilter(posX,
1723:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                        CapSense_Controller_posFilte
1724:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                        CapSense_Controller_posFilte
1725:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posXIndex + 1u] = 
1726:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                              CapSense_Controller_po
1727:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posXIndex] = tempPos;
1728:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     
1729:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     tempPos = posY;
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 52


1730:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     posY = (uint8) CapSense_Controller_AveragingFilter(posY, 
1731:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                       CapSense_Controller_posFilter
1732:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                       CapSense_Controller_posFilter
1733:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posYIndex + 1u] = 
1734:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                             CapSense_Controller_pos
1735:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posYIndex] = tempPos;
1736:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 }
1737:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1738:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #endif /* (0u != (CapSense_Controller_AVERAGING_FILTER & \
1739:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    *           CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK))
1740:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    */
1741:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1742:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #if (0u != (CapSense_Controller_IIR2_FILTER & CapSense_Controller_TOUCH
1743:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_Controller_IIR2_FILTER))
1744:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 {
1745:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     posX = (uint8) CapSense_Controller_IIR2Filter(posX, 
1746:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                            CapSense_Controller_posF
1747:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posXIndex] = posX;
1748:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     
1749:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     posY = (uint8) CapSense_Controller_IIR2Filter(posY, 
1750:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                             CapSense_Controller_pos
1751:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posYIndex] = posY;
1752:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 }
1753:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 
1754:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #endif /* (0u != (CapSense_Controller_IIR2_FILTER & \
1755:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    *          CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK))
1756:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    */
1757:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1758:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #if (0u != (CapSense_Controller_IIR4_FILTER & CapSense_Controller_TOUCH
1759:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_Controller_IIR4_FILTER))
1760:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 {
1761:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     posX = (uint8) CapSense_Controller_IIR4Filter((uint16)posX,
1762:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                     (uint16)CapSense_Controller_pos
1763:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posXIndex] = posX;
1764:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1765:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     posY = (uint8) CapSense_Controller_IIR4Filter((uint16)posY,
1766:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                     (uint16)CapSense_Controller_pos
1767:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     CapSense_Controller_posFiltersData[posYIndex] = posY;
1768:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 }
1769:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 
1770:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #endif /* (0u != (CapSense_Controller_IIR4_FILTER & \
1771:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    *           CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK))
1772:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    */
1773:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1774:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #if (0u != (CapSense_Controller_JITTER_FILTER & CapSense_Controller_TOU
1775:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_Controller_JITTER_FILTER))
1776:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     {
1777:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                         posX = (uint8) CapSense_Controller_JitterFilter(posX, 
1778:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                             CapSense_Controller_pos
1779:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                         CapSense_Controller_posFiltersData[posXIndex] = posX;
1780:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                         
1781:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                         posY = (uint8) CapSense_Controller_JitterFilter(posY, 
1782:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                                                             CapSense_Controller_pos
1783:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                         CapSense_Controller_posFiltersData[posYIndex] = posY;
1784:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                     }
1785:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                             #endif /* (0u != (CapSense_Controller_JITTER_FILTER & \
1786:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    *           CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK))
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 53


1787:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                    */
1788:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                         }
1789:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     }
1790:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 #endif /* (0u != CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK) */
1791:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1792:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Save positions */
1793:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 pos[0u] = posX;
1794:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 pos[1u] = posY;
1795:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
1796:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
1797:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1798:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #if (0u != CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK)
1799:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             if(touch == 0u)
1800:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             {
1801:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 /* Reset the filters */
1802:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 if ((posFiltersMask & CapSense_Controller_ANY_POS_FILTER) != 0u)
1803:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 {
1804:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                     CapSense_Controller_posFiltersData[firstTimeIndex] = 0u;
1805:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                 }
1806:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             }
1807:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         #endif /* (0u != CapSense_Controller_TOUCH_PADS_POS_FILTERS_MASK) */
1808:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1809:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         return (touch);
1810:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
1811:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #endif /* (CapSense_Controller_TOTAL_TOUCH_PADS_COUNT > 0u) */
1812:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1813:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1814:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #if ( (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_MEDIAN_FILTER) | \
1815:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****       (CapSense_Controller_POS_FILTERS_MASK & CapSense_Controller_MEDIAN_FILTER) )
1816:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /*******************************************************************************
1817:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Function Name: CapSense_Controller_MedianFilter
1818:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     ********************************************************************************
1819:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1820:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Summary:
1821:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Median filter function. 
1822:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1823:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  median value.
1824:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1825:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Parameters:
1826:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  x1:  Current value.
1827:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  x2:  Previous value.
1828:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  x3:  Before previous value.
1829:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1830:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Return:
1831:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Returns filtered value.
1832:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1833:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *******************************************************************************/
1834:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint16 CapSense_Controller_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1835:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                          
1836:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
1837:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint16 tmp;
1838:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1839:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if (x1 > x2)
1840:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
1841:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             tmp = x2;
1842:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             x2 = x1;
1843:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             x1 = tmp;
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 54


1844:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
1845:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1846:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         if (x2 > x3)
1847:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         {
1848:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****             x2 = x3;
1849:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         }
1850:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1851:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1852:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
1853:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #endif /* ( (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_MEDIAN_FILTER) | \
1854:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****        *    (CapSense_Controller_POS_FILTERS_MASK & CapSense_Controller_MEDIAN_FILTER) )
1855:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****        */
1856:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1857:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1858:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #if ( (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_AVERAGING_FILTER) | \
1859:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****       (CapSense_Controller_POS_FILTERS_MASK & CapSense_Controller_AVERAGING_FILTER) )
1860:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /*******************************************************************************
1861:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Function Name: CapSense_Controller_AveragingFilter
1862:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     ********************************************************************************
1863:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1864:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Summary:
1865:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Averaging filter function.
1866:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1867:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  reports the averaging value.
1868:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1869:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Parameters:
1870:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  x1:  Current value.
1871:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  x2:  Previous value.
1872:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  x3:  Before previous value.
1873:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1874:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Return:
1875:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Returns filtered value.
1876:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1877:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *******************************************************************************/
1878:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint16 CapSense_Controller_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1879:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                             
1880:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
1881:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1882:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1883:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         return ((uint16) tmp);
1884:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
1885:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #endif /* ( (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_AVERAGING_FILTER) | \
1886:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****        *    (CapSense_Controller_POS_FILTERS_MASK & CapSense_Controller_AVERAGING_FILTER) )
1887:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****        */
1888:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1889:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1890:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #if ( (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR2_FILTER) | \
1891:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****       (CapSense_Controller_POS_FILTERS_MASK & CapSense_Controller_IIR2_FILTER) )
1892:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /*******************************************************************************
1893:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Function Name: CapSense_Controller_IIR2Filter
1894:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     ********************************************************************************
1895:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1896:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Summary:
1897:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1898:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1899:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Parameters:
1900:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  x1:  Current value.
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 55


1901:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  x2:  Previous value.
1902:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1903:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Return:
1904:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Returns filtered value.
1905:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1906:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *******************************************************************************/
1907:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint16 CapSense_Controller_IIR2Filter(uint16 x1, uint16 x2)
1908:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                        
1909:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
1910:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint32 tmp;
1911:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1912:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1913:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1914:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         tmp >>= 1u;
1915:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     
1916:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         return ((uint16) tmp);
1917:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
1918:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #endif /* ( (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR2_FILTER) | \
1919:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****        *    (CapSense_Controller_POS_FILTERS_MASK & CapSense_Controller_IIR2_FILTER) )
1920:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****        */
1921:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1922:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** 
1923:Generated_Source\PSoC5/CapSense_Controller_CSHL.c **** #if ( (CapSense_Controller_RAW_FILTER_MASK & CapSense_Controller_IIR4_FILTER) | \
1924:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****       (CapSense_Controller_POS_FILTERS_MASK & CapSense_Controller_IIR4_FILTER) )
1925:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     /*******************************************************************************
1926:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Function Name: CapSense_Controller_IIR4Filter
1927:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     ********************************************************************************
1928:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1929:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Summary:
1930:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1931:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1932:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Parameters:
1933:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  x1:  Current value.
1934:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  x2:  Previous value.
1935:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1936:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     * Return:
1937:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *  Returns filtered value.
1938:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *
1939:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     *******************************************************************************/
1940:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     uint16 CapSense_Controller_IIR4Filter(uint16 x1, uint16 x2)
1941:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****                                        
1942:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     {
 1166              		.loc 1 1942 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 16
 1169              		@ frame_needed = 1, uses_anonymous_args = 0
 1170              		@ link register save eliminated.
 1171 0000 80B4     		push	{r7}
 1172              		.cfi_def_cfa_offset 4
 1173              		.cfi_offset 7, -4
 1174 0002 85B0     		sub	sp, sp, #20
 1175              		.cfi_def_cfa_offset 24
 1176 0004 00AF     		add	r7, sp, #0
 1177              		.cfi_def_cfa_register 7
 1178 0006 0346     		mov	r3, r0
 1179 0008 0A46     		mov	r2, r1
 1180 000a FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 56


 1181 000c 1346     		mov	r3, r2	@ movhi
 1182 000e BB80     		strh	r3, [r7, #4]	@ movhi
1943:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         uint32 tmp;
1944:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1945:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1946:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1183              		.loc 1 1946 0
 1184 0010 FA88     		ldrh	r2, [r7, #6]
 1185 0012 BB88     		ldrh	r3, [r7, #4]
 1186 0014 1344     		add	r3, r3, r2
 1187 0016 FB60     		str	r3, [r7, #12]
1947:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1188              		.loc 1 1947 0
 1189 0018 BB88     		ldrh	r3, [r7, #4]
 1190 001a 5B00     		lsls	r3, r3, #1
 1191 001c FA68     		ldr	r2, [r7, #12]
 1192 001e 1344     		add	r3, r3, r2
 1193 0020 FB60     		str	r3, [r7, #12]
1948:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         tmp >>= 2u;
 1194              		.loc 1 1948 0
 1195 0022 FB68     		ldr	r3, [r7, #12]
 1196 0024 9B08     		lsrs	r3, r3, #2
 1197 0026 FB60     		str	r3, [r7, #12]
1949:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         
1950:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****         return ((uint16) tmp);
 1198              		.loc 1 1950 0
 1199 0028 FB68     		ldr	r3, [r7, #12]
 1200 002a 9BB2     		uxth	r3, r3
1951:Generated_Source\PSoC5/CapSense_Controller_CSHL.c ****     }
 1201              		.loc 1 1951 0
 1202 002c 1846     		mov	r0, r3
 1203 002e 1437     		adds	r7, r7, #20
 1204              		.cfi_def_cfa_offset 4
 1205 0030 BD46     		mov	sp, r7
 1206              		.cfi_def_cfa_register 13
 1207              		@ sp needed
 1208 0032 80BC     		pop	{r7}
 1209              		.cfi_restore 7
 1210              		.cfi_def_cfa_offset 0
 1211 0034 7047     		bx	lr
 1212              		.cfi_endproc
 1213              	.LFE11:
 1214              		.size	CapSense_Controller_IIR4Filter, .-CapSense_Controller_IIR4Filter
 1215 0036 00BF     		.text
 1216              	.Letext0:
 1217              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1218              		.file 3 "Generated_Source\\PSoC5\\CapSense_Controller.h"
 1219              		.file 4 "Generated_Source\\PSoC5\\CapSense_Controller_CSHL.h"
 1220              		.section	.debug_info,"",%progbits
 1221              	.Ldebug_info0:
 1222 0000 AC050000 		.4byte	0x5ac
 1223 0004 0400     		.2byte	0x4
 1224 0006 00000000 		.4byte	.Ldebug_abbrev0
 1225 000a 04       		.byte	0x4
 1226 000b 01       		.uleb128 0x1
 1227 000c 84000000 		.4byte	.LASF60
 1228 0010 0C       		.byte	0xc
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 57


 1229 0011 52000000 		.4byte	.LASF61
 1230 0015 13020000 		.4byte	.LASF62
 1231 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1232 001d 00000000 		.4byte	0
 1233 0021 00000000 		.4byte	.Ldebug_line0
 1234 0025 02       		.uleb128 0x2
 1235 0026 01       		.byte	0x1
 1236 0027 06       		.byte	0x6
 1237 0028 88010000 		.4byte	.LASF0
 1238 002c 02       		.uleb128 0x2
 1239 002d 01       		.byte	0x1
 1240 002e 08       		.byte	0x8
 1241 002f D6040000 		.4byte	.LASF1
 1242 0033 02       		.uleb128 0x2
 1243 0034 02       		.byte	0x2
 1244 0035 05       		.byte	0x5
 1245 0036 12050000 		.4byte	.LASF2
 1246 003a 02       		.uleb128 0x2
 1247 003b 02       		.byte	0x2
 1248 003c 07       		.byte	0x7
 1249 003d 7E030000 		.4byte	.LASF3
 1250 0041 02       		.uleb128 0x2
 1251 0042 04       		.byte	0x4
 1252 0043 05       		.byte	0x5
 1253 0044 DC010000 		.4byte	.LASF4
 1254 0048 02       		.uleb128 0x2
 1255 0049 04       		.byte	0x4
 1256 004a 07       		.byte	0x7
 1257 004b 0A030000 		.4byte	.LASF5
 1258 004f 02       		.uleb128 0x2
 1259 0050 08       		.byte	0x8
 1260 0051 05       		.byte	0x5
 1261 0052 7A010000 		.4byte	.LASF6
 1262 0056 02       		.uleb128 0x2
 1263 0057 08       		.byte	0x8
 1264 0058 07       		.byte	0x7
 1265 0059 12010000 		.4byte	.LASF7
 1266 005d 03       		.uleb128 0x3
 1267 005e 04       		.byte	0x4
 1268 005f 05       		.byte	0x5
 1269 0060 696E7400 		.ascii	"int\000"
 1270 0064 02       		.uleb128 0x2
 1271 0065 04       		.byte	0x4
 1272 0066 07       		.byte	0x7
 1273 0067 FD020000 		.4byte	.LASF8
 1274 006b 04       		.uleb128 0x4
 1275 006c E5010000 		.4byte	.LASF9
 1276 0070 02       		.byte	0x2
 1277 0071 E401     		.2byte	0x1e4
 1278 0073 2C000000 		.4byte	0x2c
 1279 0077 04       		.uleb128 0x4
 1280 0078 00000000 		.4byte	.LASF10
 1281 007c 02       		.byte	0x2
 1282 007d E501     		.2byte	0x1e5
 1283 007f 3A000000 		.4byte	0x3a
 1284 0083 04       		.uleb128 0x4
 1285 0084 83020000 		.4byte	.LASF11
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 58


 1286 0088 02       		.byte	0x2
 1287 0089 E601     		.2byte	0x1e6
 1288 008b 48000000 		.4byte	0x48
 1289 008f 02       		.uleb128 0x2
 1290 0090 04       		.byte	0x4
 1291 0091 04       		.byte	0x4
 1292 0092 D0040000 		.4byte	.LASF12
 1293 0096 02       		.uleb128 0x2
 1294 0097 08       		.byte	0x8
 1295 0098 04       		.byte	0x4
 1296 0099 EB010000 		.4byte	.LASF13
 1297 009d 02       		.uleb128 0x2
 1298 009e 01       		.byte	0x1
 1299 009f 08       		.byte	0x8
 1300 00a0 93050000 		.4byte	.LASF14
 1301 00a4 02       		.uleb128 0x2
 1302 00a5 08       		.byte	0x8
 1303 00a6 04       		.byte	0x4
 1304 00a7 6F040000 		.4byte	.LASF15
 1305 00ab 02       		.uleb128 0x2
 1306 00ac 04       		.byte	0x4
 1307 00ad 07       		.byte	0x7
 1308 00ae 41040000 		.4byte	.LASF16
 1309 00b2 05       		.uleb128 0x5
 1310 00b3 1C030000 		.4byte	.LASF17
 1311 00b7 01       		.byte	0x1
 1312 00b8 7F       		.byte	0x7f
 1313 00b9 00000000 		.4byte	.LFB0
 1314 00bd 78000000 		.4byte	.LFE0-.LFB0
 1315 00c1 01       		.uleb128 0x1
 1316 00c2 9C       		.byte	0x9c
 1317 00c3 E4000000 		.4byte	0xe4
 1318 00c7 06       		.uleb128 0x6
 1319 00c8 B2030000 		.4byte	.LASF19
 1320 00cc 01       		.byte	0x1
 1321 00cd 7F       		.byte	0x7f
 1322 00ce 6B000000 		.4byte	0x6b
 1323 00d2 02       		.uleb128 0x2
 1324 00d3 91       		.byte	0x91
 1325 00d4 6F       		.sleb128 -17
 1326 00d5 07       		.uleb128 0x7
 1327 00d6 1C050000 		.4byte	.LASF21
 1328 00da 01       		.byte	0x1
 1329 00db 83       		.byte	0x83
 1330 00dc 6B000000 		.4byte	0x6b
 1331 00e0 02       		.uleb128 0x2
 1332 00e1 91       		.byte	0x91
 1333 00e2 77       		.sleb128 -9
 1334 00e3 00       		.byte	0
 1335 00e4 08       		.uleb128 0x8
 1336 00e5 ED030000 		.4byte	.LASF18
 1337 00e9 01       		.byte	0x1
 1338 00ea C8       		.byte	0xc8
 1339 00eb 00000000 		.4byte	.LFB1
 1340 00ef 2E000000 		.4byte	.LFE1-.LFB1
 1341 00f3 01       		.uleb128 0x1
 1342 00f4 9C       		.byte	0x9c
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 59


 1343 00f5 08010000 		.4byte	0x108
 1344 00f9 06       		.uleb128 0x6
 1345 00fa B2030000 		.4byte	.LASF19
 1346 00fe 01       		.byte	0x1
 1347 00ff C8       		.byte	0xc8
 1348 0100 6B000000 		.4byte	0x6b
 1349 0104 02       		.uleb128 0x2
 1350 0105 91       		.byte	0x91
 1351 0106 77       		.sleb128 -9
 1352 0107 00       		.byte	0
 1353 0108 08       		.uleb128 0x8
 1354 0109 7B040000 		.4byte	.LASF20
 1355 010d 01       		.byte	0x1
 1356 010e FC       		.byte	0xfc
 1357 010f 00000000 		.4byte	.LFB2
 1358 0113 28000000 		.4byte	.LFE2-.LFB2
 1359 0117 01       		.uleb128 0x1
 1360 0118 9C       		.byte	0x9c
 1361 0119 2A010000 		.4byte	0x12a
 1362 011d 09       		.uleb128 0x9
 1363 011e 6900     		.ascii	"i\000"
 1364 0120 01       		.byte	0x1
 1365 0121 FF       		.byte	0xff
 1366 0122 6B000000 		.4byte	0x6b
 1367 0126 02       		.uleb128 0x2
 1368 0127 91       		.byte	0x91
 1369 0128 77       		.sleb128 -9
 1370 0129 00       		.byte	0
 1371 012a 0A       		.uleb128 0xa
 1372 012b B9030000 		.4byte	.LASF22
 1373 012f 01       		.byte	0x1
 1374 0130 1D01     		.2byte	0x11d
 1375 0132 00000000 		.4byte	.LFB3
 1376 0136 70000000 		.4byte	.LFE3-.LFB3
 1377 013a 01       		.uleb128 0x1
 1378 013b 9C       		.byte	0x9c
 1379 013c 6C010000 		.4byte	0x16c
 1380 0140 0B       		.uleb128 0xb
 1381 0141 6900     		.ascii	"i\000"
 1382 0143 01       		.byte	0x1
 1383 0144 2001     		.2byte	0x120
 1384 0146 6B000000 		.4byte	0x6b
 1385 014a 02       		.uleb128 0x2
 1386 014b 91       		.byte	0x91
 1387 014c 77       		.sleb128 -9
 1388 014d 0B       		.uleb128 0xb
 1389 014e 706F7300 		.ascii	"pos\000"
 1390 0152 01       		.byte	0x1
 1391 0153 2101     		.2byte	0x121
 1392 0155 6B000000 		.4byte	0x6b
 1393 0159 02       		.uleb128 0x2
 1394 015a 91       		.byte	0x91
 1395 015b 76       		.sleb128 -10
 1396 015c 0C       		.uleb128 0xc
 1397 015d A6040000 		.4byte	.LASF23
 1398 0161 01       		.byte	0x1
 1399 0162 2201     		.2byte	0x122
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 60


 1400 0164 6B000000 		.4byte	0x6b
 1401 0168 02       		.uleb128 0x2
 1402 0169 91       		.byte	0x91
 1403 016a 75       		.sleb128 -11
 1404 016b 00       		.byte	0
 1405 016c 0A       		.uleb128 0xa
 1406 016d B3010000 		.4byte	.LASF24
 1407 0171 01       		.byte	0x1
 1408 0172 6001     		.2byte	0x160
 1409 0174 00000000 		.4byte	.LFB4
 1410 0178 7C010000 		.4byte	.LFE4-.LFB4
 1411 017c 01       		.uleb128 0x1
 1412 017d 9C       		.byte	0x9c
 1413 017e DD010000 		.4byte	0x1dd
 1414 0182 0D       		.uleb128 0xd
 1415 0183 B2030000 		.4byte	.LASF19
 1416 0187 01       		.byte	0x1
 1417 0188 6001     		.2byte	0x160
 1418 018a 6B000000 		.4byte	0x6b
 1419 018e 02       		.uleb128 0x2
 1420 018f 91       		.byte	0x91
 1421 0190 67       		.sleb128 -25
 1422 0191 0C       		.uleb128 0xc
 1423 0192 E8030000 		.4byte	.LASF25
 1424 0196 01       		.byte	0x1
 1425 0197 6301     		.2byte	0x163
 1426 0199 83000000 		.4byte	0x83
 1427 019d 02       		.uleb128 0x2
 1428 019e 91       		.byte	0x91
 1429 019f 6C       		.sleb128 -20
 1430 01a0 0C       		.uleb128 0xc
 1431 01a1 32060000 		.4byte	.LASF26
 1432 01a5 01       		.byte	0x1
 1433 01a6 6401     		.2byte	0x164
 1434 01a8 77000000 		.4byte	0x77
 1435 01ac 02       		.uleb128 0x2
 1436 01ad 91       		.byte	0x91
 1437 01ae 76       		.sleb128 -10
 1438 01af 0C       		.uleb128 0xc
 1439 01b0 07000000 		.4byte	.LASF27
 1440 01b4 01       		.byte	0x1
 1441 01b5 6501     		.2byte	0x165
 1442 01b7 77000000 		.4byte	0x77
 1443 01bb 02       		.uleb128 0x2
 1444 01bc 91       		.byte	0x91
 1445 01bd 72       		.sleb128 -14
 1446 01be 0C       		.uleb128 0xc
 1447 01bf 1C050000 		.4byte	.LASF21
 1448 01c3 01       		.byte	0x1
 1449 01c4 6601     		.2byte	0x166
 1450 01c6 6B000000 		.4byte	0x6b
 1451 01ca 02       		.uleb128 0x2
 1452 01cb 91       		.byte	0x91
 1453 01cc 75       		.sleb128 -11
 1454 01cd 0C       		.uleb128 0xc
 1455 01ce E4040000 		.4byte	.LASF28
 1456 01d2 01       		.byte	0x1
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 61


 1457 01d3 6701     		.2byte	0x167
 1458 01d5 6B000000 		.4byte	0x6b
 1459 01d9 02       		.uleb128 0x2
 1460 01da 91       		.byte	0x91
 1461 01db 74       		.sleb128 -12
 1462 01dc 00       		.byte	0
 1463 01dd 0A       		.uleb128 0xa
 1464 01de 17000000 		.4byte	.LASF29
 1465 01e2 01       		.byte	0x1
 1466 01e3 0D02     		.2byte	0x20d
 1467 01e5 00000000 		.4byte	.LFB5
 1468 01e9 50000000 		.4byte	.LFE5-.LFB5
 1469 01ed 01       		.uleb128 0x1
 1470 01ee 9C       		.byte	0x9c
 1471 01ef 1F020000 		.4byte	0x21f
 1472 01f3 0B       		.uleb128 0xb
 1473 01f4 6900     		.ascii	"i\000"
 1474 01f6 01       		.byte	0x1
 1475 01f7 1002     		.2byte	0x210
 1476 01f9 6B000000 		.4byte	0x6b
 1477 01fd 02       		.uleb128 0x2
 1478 01fe 91       		.byte	0x91
 1479 01ff 77       		.sleb128 -9
 1480 0200 0B       		.uleb128 0xb
 1481 0201 706F7300 		.ascii	"pos\000"
 1482 0205 01       		.byte	0x1
 1483 0206 1102     		.2byte	0x211
 1484 0208 6B000000 		.4byte	0x6b
 1485 020c 02       		.uleb128 0x2
 1486 020d 91       		.byte	0x91
 1487 020e 76       		.sleb128 -10
 1488 020f 0C       		.uleb128 0xc
 1489 0210 A6040000 		.4byte	.LASF23
 1490 0214 01       		.byte	0x1
 1491 0215 1202     		.2byte	0x212
 1492 0217 6B000000 		.4byte	0x6b
 1493 021b 02       		.uleb128 0x2
 1494 021c 91       		.byte	0x91
 1495 021d 75       		.sleb128 -11
 1496 021e 00       		.byte	0
 1497 021f 0E       		.uleb128 0xe
 1498 0220 39030000 		.4byte	.LASF35
 1499 0224 01       		.byte	0x1
 1500 0225 4702     		.2byte	0x247
 1501 0227 6B000000 		.4byte	0x6b
 1502 022b 00000000 		.4byte	.LFB6
 1503 022f 08010000 		.4byte	.LFE6-.LFB6
 1504 0233 01       		.uleb128 0x1
 1505 0234 9C       		.byte	0x9c
 1506 0235 B2020000 		.4byte	0x2b2
 1507 0239 0D       		.uleb128 0xd
 1508 023a B2030000 		.4byte	.LASF19
 1509 023e 01       		.byte	0x1
 1510 023f 4702     		.2byte	0x247
 1511 0241 6B000000 		.4byte	0x6b
 1512 0245 02       		.uleb128 0x2
 1513 0246 91       		.byte	0x91
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 62


 1514 0247 6F       		.sleb128 -17
 1515 0248 0C       		.uleb128 0xc
 1516 0249 E1050000 		.4byte	.LASF30
 1517 024d 01       		.byte	0x1
 1518 024e 4A02     		.2byte	0x24a
 1519 0250 6B000000 		.4byte	0x6b
 1520 0254 02       		.uleb128 0x2
 1521 0255 91       		.byte	0x91
 1522 0256 71       		.sleb128 -15
 1523 0257 0B       		.uleb128 0xb
 1524 0258 706F7300 		.ascii	"pos\000"
 1525 025c 01       		.byte	0x1
 1526 025d 4C02     		.2byte	0x24c
 1527 025f 6B000000 		.4byte	0x6b
 1528 0263 02       		.uleb128 0x2
 1529 0264 91       		.byte	0x91
 1530 0265 77       		.sleb128 -9
 1531 0266 0C       		.uleb128 0xc
 1532 0267 23050000 		.4byte	.LASF31
 1533 026b 01       		.byte	0x1
 1534 026c 4D02     		.2byte	0x24d
 1535 026e 6B000000 		.4byte	0x6b
 1536 0272 02       		.uleb128 0x2
 1537 0273 91       		.byte	0x91
 1538 0274 76       		.sleb128 -10
 1539 0275 0C       		.uleb128 0xc
 1540 0276 1C050000 		.4byte	.LASF21
 1541 027a 01       		.byte	0x1
 1542 027b 4F02     		.2byte	0x24f
 1543 027d 6B000000 		.4byte	0x6b
 1544 0281 02       		.uleb128 0x2
 1545 0282 91       		.byte	0x91
 1546 0283 75       		.sleb128 -11
 1547 0284 0C       		.uleb128 0xc
 1548 0285 42000000 		.4byte	.LASF32
 1549 0289 01       		.byte	0x1
 1550 028a 5002     		.2byte	0x250
 1551 028c 6B000000 		.4byte	0x6b
 1552 0290 02       		.uleb128 0x2
 1553 0291 91       		.byte	0x91
 1554 0292 74       		.sleb128 -12
 1555 0293 0C       		.uleb128 0xc
 1556 0294 AE020000 		.4byte	.LASF33
 1557 0298 01       		.byte	0x1
 1558 0299 5102     		.2byte	0x251
 1559 029b 6B000000 		.4byte	0x6b
 1560 029f 02       		.uleb128 0x2
 1561 02a0 91       		.byte	0x91
 1562 02a1 73       		.sleb128 -13
 1563 02a2 0C       		.uleb128 0xc
 1564 02a3 38040000 		.4byte	.LASF34
 1565 02a7 01       		.byte	0x1
 1566 02a8 5202     		.2byte	0x252
 1567 02aa 6B000000 		.4byte	0x6b
 1568 02ae 02       		.uleb128 0x2
 1569 02af 91       		.byte	0x91
 1570 02b0 72       		.sleb128 -14
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 63


 1571 02b1 00       		.byte	0
 1572 02b2 0F       		.uleb128 0xf
 1573 02b3 B9050000 		.4byte	.LASF36
 1574 02b7 01       		.byte	0x1
 1575 02b8 8F02     		.2byte	0x28f
 1576 02ba 6B000000 		.4byte	0x6b
 1577 02be 00000000 		.4byte	.LFB7
 1578 02c2 54000000 		.4byte	.LFE7-.LFB7
 1579 02c6 01       		.uleb128 0x1
 1580 02c7 9C       		.byte	0x9c
 1581 02c8 09030000 		.4byte	0x309
 1582 02cc 0D       		.uleb128 0xd
 1583 02cd 1C050000 		.4byte	.LASF21
 1584 02d1 01       		.byte	0x1
 1585 02d2 8F02     		.2byte	0x28f
 1586 02d4 6B000000 		.4byte	0x6b
 1587 02d8 02       		.uleb128 0x2
 1588 02d9 91       		.byte	0x91
 1589 02da 6F       		.sleb128 -17
 1590 02db 0C       		.uleb128 0xc
 1591 02dc 94010000 		.4byte	.LASF37
 1592 02e0 01       		.byte	0x1
 1593 02e1 9202     		.2byte	0x292
 1594 02e3 6B000000 		.4byte	0x6b
 1595 02e7 02       		.uleb128 0x2
 1596 02e8 91       		.byte	0x91
 1597 02e9 77       		.sleb128 -9
 1598 02ea 0C       		.uleb128 0xc
 1599 02eb 9D010000 		.4byte	.LASF38
 1600 02ef 01       		.byte	0x1
 1601 02f0 9302     		.2byte	0x293
 1602 02f2 6B000000 		.4byte	0x6b
 1603 02f6 02       		.uleb128 0x2
 1604 02f7 91       		.byte	0x91
 1605 02f8 75       		.sleb128 -11
 1606 02f9 0C       		.uleb128 0xc
 1607 02fa AD010000 		.4byte	.LASF39
 1608 02fe 01       		.byte	0x1
 1609 02ff 9402     		.2byte	0x294
 1610 0301 6B000000 		.4byte	0x6b
 1611 0305 02       		.uleb128 0x2
 1612 0306 91       		.byte	0x91
 1613 0307 76       		.sleb128 -10
 1614 0308 00       		.byte	0
 1615 0309 0F       		.uleb128 0xf
 1616 030a 29010000 		.4byte	.LASF40
 1617 030e 01       		.byte	0x1
 1618 030f BB02     		.2byte	0x2bb
 1619 0311 6B000000 		.4byte	0x6b
 1620 0315 00000000 		.4byte	.LFB8
 1621 0319 38000000 		.4byte	.LFE8-.LFB8
 1622 031d 01       		.uleb128 0x1
 1623 031e 9C       		.byte	0x9c
 1624 031f 40030000 		.4byte	0x340
 1625 0323 0B       		.uleb128 0xb
 1626 0324 6900     		.ascii	"i\000"
 1627 0326 01       		.byte	0x1
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 64


 1628 0327 BE02     		.2byte	0x2be
 1629 0329 6B000000 		.4byte	0x6b
 1630 032d 02       		.uleb128 0x2
 1631 032e 91       		.byte	0x91
 1632 032f 77       		.sleb128 -9
 1633 0330 0C       		.uleb128 0xc
 1634 0331 AD010000 		.4byte	.LASF39
 1635 0335 01       		.byte	0x1
 1636 0336 BF02     		.2byte	0x2bf
 1637 0338 6B000000 		.4byte	0x6b
 1638 033c 02       		.uleb128 0x2
 1639 033d 91       		.byte	0x91
 1640 033e 76       		.sleb128 -10
 1641 033f 00       		.byte	0
 1642 0340 10       		.uleb128 0x10
 1643 0341 98050000 		.4byte	.LASF41
 1644 0345 01       		.byte	0x1
 1645 0346 E902     		.2byte	0x2e9
 1646 0348 00000000 		.4byte	.LFB9
 1647 034c 68000000 		.4byte	.LFE9-.LFB9
 1648 0350 01       		.uleb128 0x1
 1649 0351 9C       		.byte	0x9c
 1650 0352 A2030000 		.4byte	0x3a2
 1651 0356 0D       		.uleb128 0xd
 1652 0357 1C050000 		.4byte	.LASF21
 1653 035b 01       		.byte	0x1
 1654 035c E902     		.2byte	0x2e9
 1655 035e 6B000000 		.4byte	0x6b
 1656 0362 02       		.uleb128 0x2
 1657 0363 91       		.byte	0x91
 1658 0364 6F       		.sleb128 -17
 1659 0365 0B       		.uleb128 0xb
 1660 0366 706F7300 		.ascii	"pos\000"
 1661 036a 01       		.byte	0x1
 1662 036b EC02     		.2byte	0x2ec
 1663 036d 6B000000 		.4byte	0x6b
 1664 0371 02       		.uleb128 0x2
 1665 0372 91       		.byte	0x91
 1666 0373 75       		.sleb128 -11
 1667 0374 0C       		.uleb128 0xc
 1668 0375 A6040000 		.4byte	.LASF23
 1669 0379 01       		.byte	0x1
 1670 037a ED02     		.2byte	0x2ed
 1671 037c 6B000000 		.4byte	0x6b
 1672 0380 02       		.uleb128 0x2
 1673 0381 91       		.byte	0x91
 1674 0382 74       		.sleb128 -12
 1675 0383 0C       		.uleb128 0xc
 1676 0384 94010000 		.4byte	.LASF37
 1677 0388 01       		.byte	0x1
 1678 0389 EE02     		.2byte	0x2ee
 1679 038b 6B000000 		.4byte	0x6b
 1680 038f 02       		.uleb128 0x2
 1681 0390 91       		.byte	0x91
 1682 0391 77       		.sleb128 -9
 1683 0392 0C       		.uleb128 0xc
 1684 0393 9D010000 		.4byte	.LASF38
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 65


 1685 0397 01       		.byte	0x1
 1686 0398 EF02     		.2byte	0x2ef
 1687 039a 6B000000 		.4byte	0x6b
 1688 039e 02       		.uleb128 0x2
 1689 039f 91       		.byte	0x91
 1690 03a0 76       		.sleb128 -10
 1691 03a1 00       		.byte	0
 1692 03a2 10       		.uleb128 0x10
 1693 03a3 4E050000 		.4byte	.LASF42
 1694 03a7 01       		.byte	0x1
 1695 03a8 1B03     		.2byte	0x31b
 1696 03aa 00000000 		.4byte	.LFB10
 1697 03ae 6C000000 		.4byte	.LFE10-.LFB10
 1698 03b2 01       		.uleb128 0x1
 1699 03b3 9C       		.byte	0x9c
 1700 03b4 04040000 		.4byte	0x404
 1701 03b8 0D       		.uleb128 0xd
 1702 03b9 1C050000 		.4byte	.LASF21
 1703 03bd 01       		.byte	0x1
 1704 03be 1B03     		.2byte	0x31b
 1705 03c0 6B000000 		.4byte	0x6b
 1706 03c4 02       		.uleb128 0x2
 1707 03c5 91       		.byte	0x91
 1708 03c6 6F       		.sleb128 -17
 1709 03c7 0B       		.uleb128 0xb
 1710 03c8 706F7300 		.ascii	"pos\000"
 1711 03cc 01       		.byte	0x1
 1712 03cd 1E03     		.2byte	0x31e
 1713 03cf 6B000000 		.4byte	0x6b
 1714 03d3 02       		.uleb128 0x2
 1715 03d4 91       		.byte	0x91
 1716 03d5 75       		.sleb128 -11
 1717 03d6 0C       		.uleb128 0xc
 1718 03d7 A6040000 		.4byte	.LASF23
 1719 03db 01       		.byte	0x1
 1720 03dc 1F03     		.2byte	0x31f
 1721 03de 6B000000 		.4byte	0x6b
 1722 03e2 02       		.uleb128 0x2
 1723 03e3 91       		.byte	0x91
 1724 03e4 74       		.sleb128 -12
 1725 03e5 0C       		.uleb128 0xc
 1726 03e6 94010000 		.4byte	.LASF37
 1727 03ea 01       		.byte	0x1
 1728 03eb 2003     		.2byte	0x320
 1729 03ed 6B000000 		.4byte	0x6b
 1730 03f1 02       		.uleb128 0x2
 1731 03f2 91       		.byte	0x91
 1732 03f3 77       		.sleb128 -9
 1733 03f4 0C       		.uleb128 0xc
 1734 03f5 9D010000 		.4byte	.LASF38
 1735 03f9 01       		.byte	0x1
 1736 03fa 2103     		.2byte	0x321
 1737 03fc 6B000000 		.4byte	0x6b
 1738 0400 02       		.uleb128 0x2
 1739 0401 91       		.byte	0x91
 1740 0402 76       		.sleb128 -10
 1741 0403 00       		.byte	0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 66


 1742 0404 0E       		.uleb128 0xe
 1743 0405 13060000 		.4byte	.LASF43
 1744 0409 01       		.byte	0x1
 1745 040a 9407     		.2byte	0x794
 1746 040c 77000000 		.4byte	0x77
 1747 0410 00000000 		.4byte	.LFB11
 1748 0414 36000000 		.4byte	.LFE11-.LFB11
 1749 0418 01       		.uleb128 0x1
 1750 0419 9C       		.byte	0x9c
 1751 041a 4A040000 		.4byte	0x44a
 1752 041e 11       		.uleb128 0x11
 1753 041f 783100   		.ascii	"x1\000"
 1754 0422 01       		.byte	0x1
 1755 0423 9407     		.2byte	0x794
 1756 0425 77000000 		.4byte	0x77
 1757 0429 02       		.uleb128 0x2
 1758 042a 91       		.byte	0x91
 1759 042b 6E       		.sleb128 -18
 1760 042c 11       		.uleb128 0x11
 1761 042d 783200   		.ascii	"x2\000"
 1762 0430 01       		.byte	0x1
 1763 0431 9407     		.2byte	0x794
 1764 0433 77000000 		.4byte	0x77
 1765 0437 02       		.uleb128 0x2
 1766 0438 91       		.byte	0x91
 1767 0439 6C       		.sleb128 -20
 1768 043a 0B       		.uleb128 0xb
 1769 043b 746D7000 		.ascii	"tmp\000"
 1770 043f 01       		.byte	0x1
 1771 0440 9707     		.2byte	0x797
 1772 0442 83000000 		.4byte	0x83
 1773 0446 02       		.uleb128 0x2
 1774 0447 91       		.byte	0x91
 1775 0448 74       		.sleb128 -12
 1776 0449 00       		.byte	0
 1777 044a 12       		.uleb128 0x12
 1778 044b 77000000 		.4byte	0x77
 1779 044f 5A040000 		.4byte	0x45a
 1780 0453 13       		.uleb128 0x13
 1781 0454 AB000000 		.4byte	0xab
 1782 0458 03       		.byte	0x3
 1783 0459 00       		.byte	0
 1784 045a 14       		.uleb128 0x14
 1785 045b 1A040000 		.4byte	.LASF44
 1786 045f 03       		.byte	0x3
 1787 0460 BC02     		.2byte	0x2bc
 1788 0462 4A040000 		.4byte	0x44a
 1789 0466 15       		.uleb128 0x15
 1790 0467 B9020000 		.4byte	.LASF45
 1791 046b 01       		.byte	0x1
 1792 046c 21       		.byte	0x21
 1793 046d 4A040000 		.4byte	0x44a
 1794 0471 05       		.uleb128 0x5
 1795 0472 03       		.byte	0x3
 1796 0473 00000000 		.4byte	CapSense_Controller_rawFilterData1
 1797 0477 12       		.uleb128 0x12
 1798 0478 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 67


 1799 047c 87040000 		.4byte	0x487
 1800 0480 13       		.uleb128 0x13
 1801 0481 AB000000 		.4byte	0xab
 1802 0485 00       		.byte	0
 1803 0486 00       		.byte	0
 1804 0487 14       		.uleb128 0x14
 1805 0488 4A040000 		.4byte	.LASF46
 1806 048c 04       		.byte	0x4
 1807 048d 0601     		.2byte	0x106
 1808 048f 77040000 		.4byte	0x477
 1809 0493 12       		.uleb128 0x12
 1810 0494 A3040000 		.4byte	0x4a3
 1811 0498 A3040000 		.4byte	0x4a3
 1812 049c 13       		.uleb128 0x13
 1813 049d AB000000 		.4byte	0xab
 1814 04a1 03       		.byte	0x3
 1815 04a2 00       		.byte	0
 1816 04a3 16       		.uleb128 0x16
 1817 04a4 6B000000 		.4byte	0x6b
 1818 04a8 14       		.uleb128 0x14
 1819 04a9 F2010000 		.4byte	.LASF47
 1820 04ad 04       		.byte	0x4
 1821 04ae 0701     		.2byte	0x107
 1822 04b0 B4040000 		.4byte	0x4b4
 1823 04b4 16       		.uleb128 0x16
 1824 04b5 93040000 		.4byte	0x493
 1825 04b9 15       		.uleb128 0x15
 1826 04ba 70050000 		.4byte	.LASF48
 1827 04be 01       		.byte	0x1
 1828 04bf 29       		.byte	0x29
 1829 04c0 4A040000 		.4byte	0x44a
 1830 04c4 05       		.uleb128 0x5
 1831 04c5 03       		.byte	0x3
 1832 04c6 00000000 		.4byte	CapSense_Controller_sensorBaseline
 1833 04ca 12       		.uleb128 0x12
 1834 04cb 6B000000 		.4byte	0x6b
 1835 04cf DA040000 		.4byte	0x4da
 1836 04d3 13       		.uleb128 0x13
 1837 04d4 AB000000 		.4byte	0xab
 1838 04d8 03       		.byte	0x3
 1839 04d9 00       		.byte	0
 1840 04da 15       		.uleb128 0x15
 1841 04db 54010000 		.4byte	.LASF49
 1842 04df 01       		.byte	0x1
 1843 04e0 2A       		.byte	0x2a
 1844 04e1 CA040000 		.4byte	0x4ca
 1845 04e5 05       		.uleb128 0x5
 1846 04e6 03       		.byte	0x3
 1847 04e7 00000000 		.4byte	CapSense_Controller_sensorBaselineLow
 1848 04eb 15       		.uleb128 0x15
 1849 04ec 91030000 		.4byte	.LASF50
 1850 04f0 01       		.byte	0x1
 1851 04f1 2B       		.byte	0x2b
 1852 04f2 CA040000 		.4byte	0x4ca
 1853 04f6 05       		.uleb128 0x5
 1854 04f7 03       		.byte	0x3
 1855 04f8 00000000 		.4byte	CapSense_Controller_sensorSignal
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 68


 1856 04fc 15       		.uleb128 0x15
 1857 04fd DC020000 		.4byte	.LASF51
 1858 0501 01       		.byte	0x1
 1859 0502 2C       		.byte	0x2c
 1860 0503 77040000 		.4byte	0x477
 1861 0507 05       		.uleb128 0x5
 1862 0508 03       		.byte	0x3
 1863 0509 00000000 		.4byte	CapSense_Controller_sensorOnMask
 1864 050d 15       		.uleb128 0x15
 1865 050e 5B020000 		.4byte	.LASF52
 1866 0512 01       		.byte	0x1
 1867 0513 2E       		.byte	0x2e
 1868 0514 CA040000 		.4byte	0x4ca
 1869 0518 05       		.uleb128 0x5
 1870 0519 03       		.byte	0x3
 1871 051a 00000000 		.4byte	CapSense_Controller_lowBaselineResetCnt
 1872 051e 15       		.uleb128 0x15
 1873 051f 8A020000 		.4byte	.LASF53
 1874 0523 01       		.byte	0x1
 1875 0524 30       		.byte	0x30
 1876 0525 CA040000 		.4byte	0x4ca
 1877 0529 05       		.uleb128 0x5
 1878 052a 03       		.byte	0x3
 1879 052b 00000000 		.4byte	CapSense_Controller_fingerThreshold
 1880 052f 15       		.uleb128 0x15
 1881 0530 AD040000 		.4byte	.LASF54
 1882 0534 01       		.byte	0x1
 1883 0535 34       		.byte	0x34
 1884 0536 CA040000 		.4byte	0x4ca
 1885 053a 05       		.uleb128 0x5
 1886 053b 03       		.byte	0x3
 1887 053c 00000000 		.4byte	CapSense_Controller_noiseThreshold
 1888 0540 15       		.uleb128 0x15
 1889 0541 F3040000 		.4byte	.LASF55
 1890 0545 01       		.byte	0x1
 1891 0546 38       		.byte	0x38
 1892 0547 CA040000 		.4byte	0x4ca
 1893 054b 05       		.uleb128 0x5
 1894 054c 03       		.byte	0x3
 1895 054d 00000000 		.4byte	CapSense_Controller_hysteresis
 1896 0551 15       		.uleb128 0x15
 1897 0552 61030000 		.4byte	.LASF56
 1898 0556 01       		.byte	0x1
 1899 0557 3C       		.byte	0x3c
 1900 0558 CA040000 		.4byte	0x4ca
 1901 055c 05       		.uleb128 0x5
 1902 055d 03       		.byte	0x3
 1903 055e 00000000 		.4byte	CapSense_Controller_debounce
 1904 0562 12       		.uleb128 0x12
 1905 0563 6B000000 		.4byte	0x6b
 1906 0567 72050000 		.4byte	0x572
 1907 056b 13       		.uleb128 0x13
 1908 056c AB000000 		.4byte	0xab
 1909 0570 04       		.byte	0x4
 1910 0571 00       		.byte	0
 1911 0572 15       		.uleb128 0x15
 1912 0573 EF050000 		.4byte	.LASF57
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 69


 1913 0577 01       		.byte	0x1
 1914 0578 40       		.byte	0x40
 1915 0579 62050000 		.4byte	0x562
 1916 057d 05       		.uleb128 0x5
 1917 057e 03       		.byte	0x3
 1918 057f 00000000 		.4byte	CapSense_Controller_debounceCounter
 1919 0583 15       		.uleb128 0x15
 1920 0584 3A060000 		.4byte	.LASF58
 1921 0588 01       		.byte	0x1
 1922 0589 44       		.byte	0x44
 1923 058a 94050000 		.4byte	0x594
 1924 058e 05       		.uleb128 0x5
 1925 058f 03       		.byte	0x3
 1926 0590 00000000 		.4byte	CapSense_Controller_rawDataIndex
 1927 0594 16       		.uleb128 0x16
 1928 0595 93040000 		.4byte	0x493
 1929 0599 15       		.uleb128 0x15
 1930 059a 2A050000 		.4byte	.LASF59
 1931 059e 01       		.byte	0x1
 1932 059f 4C       		.byte	0x4c
 1933 05a0 AA050000 		.4byte	0x5aa
 1934 05a4 05       		.uleb128 0x5
 1935 05a5 03       		.byte	0x3
 1936 05a6 00000000 		.4byte	CapSense_Controller_numberOfSensors
 1937 05aa 16       		.uleb128 0x16
 1938 05ab 93040000 		.4byte	0x493
 1939 05af 00       		.byte	0
 1940              		.section	.debug_abbrev,"",%progbits
 1941              	.Ldebug_abbrev0:
 1942 0000 01       		.uleb128 0x1
 1943 0001 11       		.uleb128 0x11
 1944 0002 01       		.byte	0x1
 1945 0003 25       		.uleb128 0x25
 1946 0004 0E       		.uleb128 0xe
 1947 0005 13       		.uleb128 0x13
 1948 0006 0B       		.uleb128 0xb
 1949 0007 03       		.uleb128 0x3
 1950 0008 0E       		.uleb128 0xe
 1951 0009 1B       		.uleb128 0x1b
 1952 000a 0E       		.uleb128 0xe
 1953 000b 55       		.uleb128 0x55
 1954 000c 17       		.uleb128 0x17
 1955 000d 11       		.uleb128 0x11
 1956 000e 01       		.uleb128 0x1
 1957 000f 10       		.uleb128 0x10
 1958 0010 17       		.uleb128 0x17
 1959 0011 00       		.byte	0
 1960 0012 00       		.byte	0
 1961 0013 02       		.uleb128 0x2
 1962 0014 24       		.uleb128 0x24
 1963 0015 00       		.byte	0
 1964 0016 0B       		.uleb128 0xb
 1965 0017 0B       		.uleb128 0xb
 1966 0018 3E       		.uleb128 0x3e
 1967 0019 0B       		.uleb128 0xb
 1968 001a 03       		.uleb128 0x3
 1969 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 70


 1970 001c 00       		.byte	0
 1971 001d 00       		.byte	0
 1972 001e 03       		.uleb128 0x3
 1973 001f 24       		.uleb128 0x24
 1974 0020 00       		.byte	0
 1975 0021 0B       		.uleb128 0xb
 1976 0022 0B       		.uleb128 0xb
 1977 0023 3E       		.uleb128 0x3e
 1978 0024 0B       		.uleb128 0xb
 1979 0025 03       		.uleb128 0x3
 1980 0026 08       		.uleb128 0x8
 1981 0027 00       		.byte	0
 1982 0028 00       		.byte	0
 1983 0029 04       		.uleb128 0x4
 1984 002a 16       		.uleb128 0x16
 1985 002b 00       		.byte	0
 1986 002c 03       		.uleb128 0x3
 1987 002d 0E       		.uleb128 0xe
 1988 002e 3A       		.uleb128 0x3a
 1989 002f 0B       		.uleb128 0xb
 1990 0030 3B       		.uleb128 0x3b
 1991 0031 05       		.uleb128 0x5
 1992 0032 49       		.uleb128 0x49
 1993 0033 13       		.uleb128 0x13
 1994 0034 00       		.byte	0
 1995 0035 00       		.byte	0
 1996 0036 05       		.uleb128 0x5
 1997 0037 2E       		.uleb128 0x2e
 1998 0038 01       		.byte	0x1
 1999 0039 3F       		.uleb128 0x3f
 2000 003a 19       		.uleb128 0x19
 2001 003b 03       		.uleb128 0x3
 2002 003c 0E       		.uleb128 0xe
 2003 003d 3A       		.uleb128 0x3a
 2004 003e 0B       		.uleb128 0xb
 2005 003f 3B       		.uleb128 0x3b
 2006 0040 0B       		.uleb128 0xb
 2007 0041 27       		.uleb128 0x27
 2008 0042 19       		.uleb128 0x19
 2009 0043 11       		.uleb128 0x11
 2010 0044 01       		.uleb128 0x1
 2011 0045 12       		.uleb128 0x12
 2012 0046 06       		.uleb128 0x6
 2013 0047 40       		.uleb128 0x40
 2014 0048 18       		.uleb128 0x18
 2015 0049 9742     		.uleb128 0x2117
 2016 004b 19       		.uleb128 0x19
 2017 004c 01       		.uleb128 0x1
 2018 004d 13       		.uleb128 0x13
 2019 004e 00       		.byte	0
 2020 004f 00       		.byte	0
 2021 0050 06       		.uleb128 0x6
 2022 0051 05       		.uleb128 0x5
 2023 0052 00       		.byte	0
 2024 0053 03       		.uleb128 0x3
 2025 0054 0E       		.uleb128 0xe
 2026 0055 3A       		.uleb128 0x3a
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 71


 2027 0056 0B       		.uleb128 0xb
 2028 0057 3B       		.uleb128 0x3b
 2029 0058 0B       		.uleb128 0xb
 2030 0059 49       		.uleb128 0x49
 2031 005a 13       		.uleb128 0x13
 2032 005b 02       		.uleb128 0x2
 2033 005c 18       		.uleb128 0x18
 2034 005d 00       		.byte	0
 2035 005e 00       		.byte	0
 2036 005f 07       		.uleb128 0x7
 2037 0060 34       		.uleb128 0x34
 2038 0061 00       		.byte	0
 2039 0062 03       		.uleb128 0x3
 2040 0063 0E       		.uleb128 0xe
 2041 0064 3A       		.uleb128 0x3a
 2042 0065 0B       		.uleb128 0xb
 2043 0066 3B       		.uleb128 0x3b
 2044 0067 0B       		.uleb128 0xb
 2045 0068 49       		.uleb128 0x49
 2046 0069 13       		.uleb128 0x13
 2047 006a 02       		.uleb128 0x2
 2048 006b 18       		.uleb128 0x18
 2049 006c 00       		.byte	0
 2050 006d 00       		.byte	0
 2051 006e 08       		.uleb128 0x8
 2052 006f 2E       		.uleb128 0x2e
 2053 0070 01       		.byte	0x1
 2054 0071 3F       		.uleb128 0x3f
 2055 0072 19       		.uleb128 0x19
 2056 0073 03       		.uleb128 0x3
 2057 0074 0E       		.uleb128 0xe
 2058 0075 3A       		.uleb128 0x3a
 2059 0076 0B       		.uleb128 0xb
 2060 0077 3B       		.uleb128 0x3b
 2061 0078 0B       		.uleb128 0xb
 2062 0079 27       		.uleb128 0x27
 2063 007a 19       		.uleb128 0x19
 2064 007b 11       		.uleb128 0x11
 2065 007c 01       		.uleb128 0x1
 2066 007d 12       		.uleb128 0x12
 2067 007e 06       		.uleb128 0x6
 2068 007f 40       		.uleb128 0x40
 2069 0080 18       		.uleb128 0x18
 2070 0081 9642     		.uleb128 0x2116
 2071 0083 19       		.uleb128 0x19
 2072 0084 01       		.uleb128 0x1
 2073 0085 13       		.uleb128 0x13
 2074 0086 00       		.byte	0
 2075 0087 00       		.byte	0
 2076 0088 09       		.uleb128 0x9
 2077 0089 34       		.uleb128 0x34
 2078 008a 00       		.byte	0
 2079 008b 03       		.uleb128 0x3
 2080 008c 08       		.uleb128 0x8
 2081 008d 3A       		.uleb128 0x3a
 2082 008e 0B       		.uleb128 0xb
 2083 008f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 72


 2084 0090 0B       		.uleb128 0xb
 2085 0091 49       		.uleb128 0x49
 2086 0092 13       		.uleb128 0x13
 2087 0093 02       		.uleb128 0x2
 2088 0094 18       		.uleb128 0x18
 2089 0095 00       		.byte	0
 2090 0096 00       		.byte	0
 2091 0097 0A       		.uleb128 0xa
 2092 0098 2E       		.uleb128 0x2e
 2093 0099 01       		.byte	0x1
 2094 009a 3F       		.uleb128 0x3f
 2095 009b 19       		.uleb128 0x19
 2096 009c 03       		.uleb128 0x3
 2097 009d 0E       		.uleb128 0xe
 2098 009e 3A       		.uleb128 0x3a
 2099 009f 0B       		.uleb128 0xb
 2100 00a0 3B       		.uleb128 0x3b
 2101 00a1 05       		.uleb128 0x5
 2102 00a2 27       		.uleb128 0x27
 2103 00a3 19       		.uleb128 0x19
 2104 00a4 11       		.uleb128 0x11
 2105 00a5 01       		.uleb128 0x1
 2106 00a6 12       		.uleb128 0x12
 2107 00a7 06       		.uleb128 0x6
 2108 00a8 40       		.uleb128 0x40
 2109 00a9 18       		.uleb128 0x18
 2110 00aa 9642     		.uleb128 0x2116
 2111 00ac 19       		.uleb128 0x19
 2112 00ad 01       		.uleb128 0x1
 2113 00ae 13       		.uleb128 0x13
 2114 00af 00       		.byte	0
 2115 00b0 00       		.byte	0
 2116 00b1 0B       		.uleb128 0xb
 2117 00b2 34       		.uleb128 0x34
 2118 00b3 00       		.byte	0
 2119 00b4 03       		.uleb128 0x3
 2120 00b5 08       		.uleb128 0x8
 2121 00b6 3A       		.uleb128 0x3a
 2122 00b7 0B       		.uleb128 0xb
 2123 00b8 3B       		.uleb128 0x3b
 2124 00b9 05       		.uleb128 0x5
 2125 00ba 49       		.uleb128 0x49
 2126 00bb 13       		.uleb128 0x13
 2127 00bc 02       		.uleb128 0x2
 2128 00bd 18       		.uleb128 0x18
 2129 00be 00       		.byte	0
 2130 00bf 00       		.byte	0
 2131 00c0 0C       		.uleb128 0xc
 2132 00c1 34       		.uleb128 0x34
 2133 00c2 00       		.byte	0
 2134 00c3 03       		.uleb128 0x3
 2135 00c4 0E       		.uleb128 0xe
 2136 00c5 3A       		.uleb128 0x3a
 2137 00c6 0B       		.uleb128 0xb
 2138 00c7 3B       		.uleb128 0x3b
 2139 00c8 05       		.uleb128 0x5
 2140 00c9 49       		.uleb128 0x49
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 73


 2141 00ca 13       		.uleb128 0x13
 2142 00cb 02       		.uleb128 0x2
 2143 00cc 18       		.uleb128 0x18
 2144 00cd 00       		.byte	0
 2145 00ce 00       		.byte	0
 2146 00cf 0D       		.uleb128 0xd
 2147 00d0 05       		.uleb128 0x5
 2148 00d1 00       		.byte	0
 2149 00d2 03       		.uleb128 0x3
 2150 00d3 0E       		.uleb128 0xe
 2151 00d4 3A       		.uleb128 0x3a
 2152 00d5 0B       		.uleb128 0xb
 2153 00d6 3B       		.uleb128 0x3b
 2154 00d7 05       		.uleb128 0x5
 2155 00d8 49       		.uleb128 0x49
 2156 00d9 13       		.uleb128 0x13
 2157 00da 02       		.uleb128 0x2
 2158 00db 18       		.uleb128 0x18
 2159 00dc 00       		.byte	0
 2160 00dd 00       		.byte	0
 2161 00de 0E       		.uleb128 0xe
 2162 00df 2E       		.uleb128 0x2e
 2163 00e0 01       		.byte	0x1
 2164 00e1 3F       		.uleb128 0x3f
 2165 00e2 19       		.uleb128 0x19
 2166 00e3 03       		.uleb128 0x3
 2167 00e4 0E       		.uleb128 0xe
 2168 00e5 3A       		.uleb128 0x3a
 2169 00e6 0B       		.uleb128 0xb
 2170 00e7 3B       		.uleb128 0x3b
 2171 00e8 05       		.uleb128 0x5
 2172 00e9 27       		.uleb128 0x27
 2173 00ea 19       		.uleb128 0x19
 2174 00eb 49       		.uleb128 0x49
 2175 00ec 13       		.uleb128 0x13
 2176 00ed 11       		.uleb128 0x11
 2177 00ee 01       		.uleb128 0x1
 2178 00ef 12       		.uleb128 0x12
 2179 00f0 06       		.uleb128 0x6
 2180 00f1 40       		.uleb128 0x40
 2181 00f2 18       		.uleb128 0x18
 2182 00f3 9742     		.uleb128 0x2117
 2183 00f5 19       		.uleb128 0x19
 2184 00f6 01       		.uleb128 0x1
 2185 00f7 13       		.uleb128 0x13
 2186 00f8 00       		.byte	0
 2187 00f9 00       		.byte	0
 2188 00fa 0F       		.uleb128 0xf
 2189 00fb 2E       		.uleb128 0x2e
 2190 00fc 01       		.byte	0x1
 2191 00fd 3F       		.uleb128 0x3f
 2192 00fe 19       		.uleb128 0x19
 2193 00ff 03       		.uleb128 0x3
 2194 0100 0E       		.uleb128 0xe
 2195 0101 3A       		.uleb128 0x3a
 2196 0102 0B       		.uleb128 0xb
 2197 0103 3B       		.uleb128 0x3b
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 74


 2198 0104 05       		.uleb128 0x5
 2199 0105 27       		.uleb128 0x27
 2200 0106 19       		.uleb128 0x19
 2201 0107 49       		.uleb128 0x49
 2202 0108 13       		.uleb128 0x13
 2203 0109 11       		.uleb128 0x11
 2204 010a 01       		.uleb128 0x1
 2205 010b 12       		.uleb128 0x12
 2206 010c 06       		.uleb128 0x6
 2207 010d 40       		.uleb128 0x40
 2208 010e 18       		.uleb128 0x18
 2209 010f 9642     		.uleb128 0x2116
 2210 0111 19       		.uleb128 0x19
 2211 0112 01       		.uleb128 0x1
 2212 0113 13       		.uleb128 0x13
 2213 0114 00       		.byte	0
 2214 0115 00       		.byte	0
 2215 0116 10       		.uleb128 0x10
 2216 0117 2E       		.uleb128 0x2e
 2217 0118 01       		.byte	0x1
 2218 0119 3F       		.uleb128 0x3f
 2219 011a 19       		.uleb128 0x19
 2220 011b 03       		.uleb128 0x3
 2221 011c 0E       		.uleb128 0xe
 2222 011d 3A       		.uleb128 0x3a
 2223 011e 0B       		.uleb128 0xb
 2224 011f 3B       		.uleb128 0x3b
 2225 0120 05       		.uleb128 0x5
 2226 0121 27       		.uleb128 0x27
 2227 0122 19       		.uleb128 0x19
 2228 0123 11       		.uleb128 0x11
 2229 0124 01       		.uleb128 0x1
 2230 0125 12       		.uleb128 0x12
 2231 0126 06       		.uleb128 0x6
 2232 0127 40       		.uleb128 0x40
 2233 0128 18       		.uleb128 0x18
 2234 0129 9742     		.uleb128 0x2117
 2235 012b 19       		.uleb128 0x19
 2236 012c 01       		.uleb128 0x1
 2237 012d 13       		.uleb128 0x13
 2238 012e 00       		.byte	0
 2239 012f 00       		.byte	0
 2240 0130 11       		.uleb128 0x11
 2241 0131 05       		.uleb128 0x5
 2242 0132 00       		.byte	0
 2243 0133 03       		.uleb128 0x3
 2244 0134 08       		.uleb128 0x8
 2245 0135 3A       		.uleb128 0x3a
 2246 0136 0B       		.uleb128 0xb
 2247 0137 3B       		.uleb128 0x3b
 2248 0138 05       		.uleb128 0x5
 2249 0139 49       		.uleb128 0x49
 2250 013a 13       		.uleb128 0x13
 2251 013b 02       		.uleb128 0x2
 2252 013c 18       		.uleb128 0x18
 2253 013d 00       		.byte	0
 2254 013e 00       		.byte	0
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 75


 2255 013f 12       		.uleb128 0x12
 2256 0140 01       		.uleb128 0x1
 2257 0141 01       		.byte	0x1
 2258 0142 49       		.uleb128 0x49
 2259 0143 13       		.uleb128 0x13
 2260 0144 01       		.uleb128 0x1
 2261 0145 13       		.uleb128 0x13
 2262 0146 00       		.byte	0
 2263 0147 00       		.byte	0
 2264 0148 13       		.uleb128 0x13
 2265 0149 21       		.uleb128 0x21
 2266 014a 00       		.byte	0
 2267 014b 49       		.uleb128 0x49
 2268 014c 13       		.uleb128 0x13
 2269 014d 2F       		.uleb128 0x2f
 2270 014e 0B       		.uleb128 0xb
 2271 014f 00       		.byte	0
 2272 0150 00       		.byte	0
 2273 0151 14       		.uleb128 0x14
 2274 0152 34       		.uleb128 0x34
 2275 0153 00       		.byte	0
 2276 0154 03       		.uleb128 0x3
 2277 0155 0E       		.uleb128 0xe
 2278 0156 3A       		.uleb128 0x3a
 2279 0157 0B       		.uleb128 0xb
 2280 0158 3B       		.uleb128 0x3b
 2281 0159 05       		.uleb128 0x5
 2282 015a 49       		.uleb128 0x49
 2283 015b 13       		.uleb128 0x13
 2284 015c 3F       		.uleb128 0x3f
 2285 015d 19       		.uleb128 0x19
 2286 015e 3C       		.uleb128 0x3c
 2287 015f 19       		.uleb128 0x19
 2288 0160 00       		.byte	0
 2289 0161 00       		.byte	0
 2290 0162 15       		.uleb128 0x15
 2291 0163 34       		.uleb128 0x34
 2292 0164 00       		.byte	0
 2293 0165 03       		.uleb128 0x3
 2294 0166 0E       		.uleb128 0xe
 2295 0167 3A       		.uleb128 0x3a
 2296 0168 0B       		.uleb128 0xb
 2297 0169 3B       		.uleb128 0x3b
 2298 016a 0B       		.uleb128 0xb
 2299 016b 49       		.uleb128 0x49
 2300 016c 13       		.uleb128 0x13
 2301 016d 3F       		.uleb128 0x3f
 2302 016e 19       		.uleb128 0x19
 2303 016f 02       		.uleb128 0x2
 2304 0170 18       		.uleb128 0x18
 2305 0171 00       		.byte	0
 2306 0172 00       		.byte	0
 2307 0173 16       		.uleb128 0x16
 2308 0174 26       		.uleb128 0x26
 2309 0175 00       		.byte	0
 2310 0176 49       		.uleb128 0x49
 2311 0177 13       		.uleb128 0x13
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 76


 2312 0178 00       		.byte	0
 2313 0179 00       		.byte	0
 2314 017a 00       		.byte	0
 2315              		.section	.debug_aranges,"",%progbits
 2316 0000 74000000 		.4byte	0x74
 2317 0004 0200     		.2byte	0x2
 2318 0006 00000000 		.4byte	.Ldebug_info0
 2319 000a 04       		.byte	0x4
 2320 000b 00       		.byte	0
 2321 000c 0000     		.2byte	0
 2322 000e 0000     		.2byte	0
 2323 0010 00000000 		.4byte	.LFB0
 2324 0014 78000000 		.4byte	.LFE0-.LFB0
 2325 0018 00000000 		.4byte	.LFB1
 2326 001c 2E000000 		.4byte	.LFE1-.LFB1
 2327 0020 00000000 		.4byte	.LFB2
 2328 0024 28000000 		.4byte	.LFE2-.LFB2
 2329 0028 00000000 		.4byte	.LFB3
 2330 002c 70000000 		.4byte	.LFE3-.LFB3
 2331 0030 00000000 		.4byte	.LFB4
 2332 0034 7C010000 		.4byte	.LFE4-.LFB4
 2333 0038 00000000 		.4byte	.LFB5
 2334 003c 50000000 		.4byte	.LFE5-.LFB5
 2335 0040 00000000 		.4byte	.LFB6
 2336 0044 08010000 		.4byte	.LFE6-.LFB6
 2337 0048 00000000 		.4byte	.LFB7
 2338 004c 54000000 		.4byte	.LFE7-.LFB7
 2339 0050 00000000 		.4byte	.LFB8
 2340 0054 38000000 		.4byte	.LFE8-.LFB8
 2341 0058 00000000 		.4byte	.LFB9
 2342 005c 68000000 		.4byte	.LFE9-.LFB9
 2343 0060 00000000 		.4byte	.LFB10
 2344 0064 6C000000 		.4byte	.LFE10-.LFB10
 2345 0068 00000000 		.4byte	.LFB11
 2346 006c 36000000 		.4byte	.LFE11-.LFB11
 2347 0070 00000000 		.4byte	0
 2348 0074 00000000 		.4byte	0
 2349              		.section	.debug_ranges,"",%progbits
 2350              	.Ldebug_ranges0:
 2351 0000 00000000 		.4byte	.LFB0
 2352 0004 78000000 		.4byte	.LFE0
 2353 0008 00000000 		.4byte	.LFB1
 2354 000c 2E000000 		.4byte	.LFE1
 2355 0010 00000000 		.4byte	.LFB2
 2356 0014 28000000 		.4byte	.LFE2
 2357 0018 00000000 		.4byte	.LFB3
 2358 001c 70000000 		.4byte	.LFE3
 2359 0020 00000000 		.4byte	.LFB4
 2360 0024 7C010000 		.4byte	.LFE4
 2361 0028 00000000 		.4byte	.LFB5
 2362 002c 50000000 		.4byte	.LFE5
 2363 0030 00000000 		.4byte	.LFB6
 2364 0034 08010000 		.4byte	.LFE6
 2365 0038 00000000 		.4byte	.LFB7
 2366 003c 54000000 		.4byte	.LFE7
 2367 0040 00000000 		.4byte	.LFB8
 2368 0044 38000000 		.4byte	.LFE8
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 77


 2369 0048 00000000 		.4byte	.LFB9
 2370 004c 68000000 		.4byte	.LFE9
 2371 0050 00000000 		.4byte	.LFB10
 2372 0054 6C000000 		.4byte	.LFE10
 2373 0058 00000000 		.4byte	.LFB11
 2374 005c 36000000 		.4byte	.LFE11
 2375 0060 00000000 		.4byte	0
 2376 0064 00000000 		.4byte	0
 2377              		.section	.debug_line,"",%progbits
 2378              	.Ldebug_line0:
 2379 0000 79020000 		.section	.debug_str,"MS",%progbits,1
 2379      02008C00 
 2379      00000201 
 2379      FB0E0D00 
 2379      01010101 
 2380              	.LASF10:
 2381 0000 75696E74 		.ascii	"uint16\000"
 2381      313600
 2382              	.LASF27:
 2383 0007 66696C74 		.ascii	"filteredRawData\000"
 2383      65726564 
 2383      52617744 
 2383      61746100 
 2384              	.LASF29:
 2385 0017 43617053 		.ascii	"CapSense_Controller_UpdateEnabledBaselines\000"
 2385      656E7365 
 2385      5F436F6E 
 2385      74726F6C 
 2385      6C65725F 
 2386              	.LASF32:
 2387 0042 66696E67 		.ascii	"fingerThreshold\000"
 2387      65725468 
 2387      72657368 
 2387      6F6C6400 
 2388              	.LASF61:
 2389 0052 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_Controller_CSHL.c"
 2389      72617465 
 2389      645F536F 
 2389      75726365 
 2389      5C50536F 
 2390 0083 00       		.ascii	"\000"
 2391              	.LASF60:
 2392 0084 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2392      43313120 
 2392      352E342E 
 2392      31203230 
 2392      31363036 
 2393 00b7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2393      20726576 
 2393      6973696F 
 2393      6E203233 
 2393      37373135 
 2394 00ea 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2394      66756E63 
 2394      74696F6E 
 2394      2D736563 
 2394      74696F6E 
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 78


 2395              	.LASF7:
 2396 0112 6C6F6E67 		.ascii	"long long unsigned int\000"
 2396      206C6F6E 
 2396      6720756E 
 2396      7369676E 
 2396      65642069 
 2397              	.LASF40:
 2398 0129 43617053 		.ascii	"CapSense_Controller_CheckIsAnyWidgetActive\000"
 2398      656E7365 
 2398      5F436F6E 
 2398      74726F6C 
 2398      6C65725F 
 2399              	.LASF49:
 2400 0154 43617053 		.ascii	"CapSense_Controller_sensorBaselineLow\000"
 2400      656E7365 
 2400      5F436F6E 
 2400      74726F6C 
 2400      6C65725F 
 2401              	.LASF6:
 2402 017a 6C6F6E67 		.ascii	"long long int\000"
 2402      206C6F6E 
 2402      6720696E 
 2402      7400
 2403              	.LASF0:
 2404 0188 7369676E 		.ascii	"signed char\000"
 2404      65642063 
 2404      68617200 
 2405              	.LASF37:
 2406 0194 72617749 		.ascii	"rawIndex\000"
 2406      6E646578 
 2406      00
 2407              	.LASF38:
 2408 019d 6E756D62 		.ascii	"numberOfSensors\000"
 2408      65724F66 
 2408      53656E73 
 2408      6F727300 
 2409              	.LASF39:
 2410 01ad 73746174 		.ascii	"state\000"
 2410      6500
 2411              	.LASF24:
 2412 01b3 43617053 		.ascii	"CapSense_Controller_UpdateSensorBaseline\000"
 2412      656E7365 
 2412      5F436F6E 
 2412      74726F6C 
 2412      6C65725F 
 2413              	.LASF4:
 2414 01dc 6C6F6E67 		.ascii	"long int\000"
 2414      20696E74 
 2414      00
 2415              	.LASF9:
 2416 01e5 75696E74 		.ascii	"uint8\000"
 2416      3800
 2417              	.LASF13:
 2418 01eb 646F7562 		.ascii	"double\000"
 2418      6C6500
 2419              	.LASF47:
 2420 01f2 43617053 		.ascii	"CapSense_Controller_widgetNumber\000"
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 79


 2420      656E7365 
 2420      5F436F6E 
 2420      74726F6C 
 2420      6C65725F 
 2421              	.LASF62:
 2422 0213 433A5C55 		.ascii	"C:\\Users\\Ahmad Negm\\Desktop\\6.115\\FP\\psoc_vga"
 2422      73657273 
 2422      5C41686D 
 2422      6164204E 
 2422      65676D5C 
 2423 0240 5F70726F 		.ascii	"_project Dev Kit\\vga.cydsn\000"
 2423      6A656374 
 2423      20446576 
 2423      204B6974 
 2423      5C766761 
 2424              	.LASF52:
 2425 025b 43617053 		.ascii	"CapSense_Controller_lowBaselineResetCnt\000"
 2425      656E7365 
 2425      5F436F6E 
 2425      74726F6C 
 2425      6C65725F 
 2426              	.LASF11:
 2427 0283 75696E74 		.ascii	"uint32\000"
 2427      333200
 2428              	.LASF53:
 2429 028a 43617053 		.ascii	"CapSense_Controller_fingerThreshold\000"
 2429      656E7365 
 2429      5F436F6E 
 2429      74726F6C 
 2429      6C65725F 
 2430              	.LASF33:
 2431 02ae 68797374 		.ascii	"hysteresis\000"
 2431      65726573 
 2431      697300
 2432              	.LASF45:
 2433 02b9 43617053 		.ascii	"CapSense_Controller_rawFilterData1\000"
 2433      656E7365 
 2433      5F436F6E 
 2433      74726F6C 
 2433      6C65725F 
 2434              	.LASF51:
 2435 02dc 43617053 		.ascii	"CapSense_Controller_sensorOnMask\000"
 2435      656E7365 
 2435      5F436F6E 
 2435      74726F6C 
 2435      6C65725F 
 2436              	.LASF8:
 2437 02fd 756E7369 		.ascii	"unsigned int\000"
 2437      676E6564 
 2437      20696E74 
 2437      00
 2438              	.LASF5:
 2439 030a 6C6F6E67 		.ascii	"long unsigned int\000"
 2439      20756E73 
 2439      69676E65 
 2439      6420696E 
 2439      7400
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 80


 2440              	.LASF17:
 2441 031c 43617053 		.ascii	"CapSense_Controller_BaseInit\000"
 2441      656E7365 
 2441      5F436F6E 
 2441      74726F6C 
 2441      6C65725F 
 2442              	.LASF35:
 2443 0339 43617053 		.ascii	"CapSense_Controller_CheckIsSensorActive\000"
 2443      656E7365 
 2443      5F436F6E 
 2443      74726F6C 
 2443      6C65725F 
 2444              	.LASF56:
 2445 0361 43617053 		.ascii	"CapSense_Controller_debounce\000"
 2445      656E7365 
 2445      5F436F6E 
 2445      74726F6C 
 2445      6C65725F 
 2446              	.LASF3:
 2447 037e 73686F72 		.ascii	"short unsigned int\000"
 2447      7420756E 
 2447      7369676E 
 2447      65642069 
 2447      6E7400
 2448              	.LASF50:
 2449 0391 43617053 		.ascii	"CapSense_Controller_sensorSignal\000"
 2449      656E7365 
 2449      5F436F6E 
 2449      74726F6C 
 2449      6C65725F 
 2450              	.LASF19:
 2451 03b2 73656E73 		.ascii	"sensor\000"
 2451      6F7200
 2452              	.LASF22:
 2453 03b9 43617053 		.ascii	"CapSense_Controller_InitializeEnabledBaselines\000"
 2453      656E7365 
 2453      5F436F6E 
 2453      74726F6C 
 2453      6C65725F 
 2454              	.LASF25:
 2455 03e8 63616C63 		.ascii	"calc\000"
 2455      00
 2456              	.LASF18:
 2457 03ed 43617053 		.ascii	"CapSense_Controller_InitializeSensorBaseline\000"
 2457      656E7365 
 2457      5F436F6E 
 2457      74726F6C 
 2457      6C65725F 
 2458              	.LASF44:
 2459 041a 43617053 		.ascii	"CapSense_Controller_sensorRaw\000"
 2459      656E7365 
 2459      5F436F6E 
 2459      74726F6C 
 2459      6C65725F 
 2460              	.LASF34:
 2461 0438 6465626F 		.ascii	"debounce\000"
 2461      756E6365 
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 81


 2461      00
 2462              	.LASF16:
 2463 0441 73697A65 		.ascii	"sizetype\000"
 2463      74797065 
 2463      00
 2464              	.LASF46:
 2465 044a 43617053 		.ascii	"CapSense_Controller_sensorEnableMask\000"
 2465      656E7365 
 2465      5F436F6E 
 2465      74726F6C 
 2465      6C65725F 
 2466              	.LASF15:
 2467 046f 6C6F6E67 		.ascii	"long double\000"
 2467      20646F75 
 2467      626C6500 
 2468              	.LASF20:
 2469 047b 43617053 		.ascii	"CapSense_Controller_InitializeAllBaselines\000"
 2469      656E7365 
 2469      5F436F6E 
 2469      74726F6C 
 2469      6C65725F 
 2470              	.LASF23:
 2471 04a6 656E4D61 		.ascii	"enMask\000"
 2471      736B00
 2472              	.LASF54:
 2473 04ad 43617053 		.ascii	"CapSense_Controller_noiseThreshold\000"
 2473      656E7365 
 2473      5F436F6E 
 2473      74726F6C 
 2473      6C65725F 
 2474              	.LASF12:
 2475 04d0 666C6F61 		.ascii	"float\000"
 2475      7400
 2476              	.LASF1:
 2477 04d6 756E7369 		.ascii	"unsigned char\000"
 2477      676E6564 
 2477      20636861 
 2477      7200
 2478              	.LASF28:
 2479 04e4 6E6F6973 		.ascii	"noiseThreshold\000"
 2479      65546872 
 2479      6573686F 
 2479      6C6400
 2480              	.LASF55:
 2481 04f3 43617053 		.ascii	"CapSense_Controller_hysteresis\000"
 2481      656E7365 
 2481      5F436F6E 
 2481      74726F6C 
 2481      6C65725F 
 2482              	.LASF2:
 2483 0512 73686F72 		.ascii	"short int\000"
 2483      7420696E 
 2483      7400
 2484              	.LASF21:
 2485 051c 77696467 		.ascii	"widget\000"
 2485      657400
 2486              	.LASF31:
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 82


 2487 0523 6F6E4D61 		.ascii	"onMask\000"
 2487      736B00
 2488              	.LASF59:
 2489 052a 43617053 		.ascii	"CapSense_Controller_numberOfSensors\000"
 2489      656E7365 
 2489      5F436F6E 
 2489      74726F6C 
 2489      6C65725F 
 2490              	.LASF42:
 2491 054e 43617053 		.ascii	"CapSense_Controller_DisableWidget\000"
 2491      656E7365 
 2491      5F436F6E 
 2491      74726F6C 
 2491      6C65725F 
 2492              	.LASF48:
 2493 0570 43617053 		.ascii	"CapSense_Controller_sensorBaseline\000"
 2493      656E7365 
 2493      5F436F6E 
 2493      74726F6C 
 2493      6C65725F 
 2494              	.LASF14:
 2495 0593 63686172 		.ascii	"char\000"
 2495      00
 2496              	.LASF41:
 2497 0598 43617053 		.ascii	"CapSense_Controller_EnableWidget\000"
 2497      656E7365 
 2497      5F436F6E 
 2497      74726F6C 
 2497      6C65725F 
 2498              	.LASF36:
 2499 05b9 43617053 		.ascii	"CapSense_Controller_CheckIsWidgetActive\000"
 2499      656E7365 
 2499      5F436F6E 
 2499      74726F6C 
 2499      6C65725F 
 2500              	.LASF30:
 2501 05e1 6465626F 		.ascii	"debounceIndex\000"
 2501      756E6365 
 2501      496E6465 
 2501      7800
 2502              	.LASF57:
 2503 05ef 43617053 		.ascii	"CapSense_Controller_debounceCounter\000"
 2503      656E7365 
 2503      5F436F6E 
 2503      74726F6C 
 2503      6C65725F 
 2504              	.LASF43:
 2505 0613 43617053 		.ascii	"CapSense_Controller_IIR4Filter\000"
 2505      656E7365 
 2505      5F436F6E 
 2505      74726F6C 
 2505      6C65725F 
 2506              	.LASF26:
 2507 0632 74656D70 		.ascii	"tempRaw\000"
 2507      52617700 
 2508              	.LASF58:
 2509 063a 43617053 		.ascii	"CapSense_Controller_rawDataIndex\000"
ARM GAS  C:\Users\AHMADN~1\AppData\Local\Temp\cc4tpODc.s 			page 83


 2509      656E7365 
 2509      5F436F6E 
 2509      74726F6C 
 2509      6C65725F 
 2510              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
